<Relation><!--Teste de criacao do XML--><relationName>u'relatedTo'</relationName><humanFormat>u'arg1 is somehow {related to} arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u''</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'relatedTo'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * related to * arg2'</queryString><editDate>u'200-08-25'</editDate><author>u''</author><curator>u''</curator><description>u'associated; connected (http://dictionary.reference.com/browse/related)'</description><freebaseID>u'/automotive/model/related'</freebaseID><comment>u'Root, most-general-possible relation'</comment><relationName>u'subpartOf'</relationName><humanFormat>u'arg1 is a {subpart} of arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'mutualProxyFor agentInteractsWithAgent agentControls controlledByAgent itemUsedWithItem agentCreated agentOwns atLocation isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'superpartOf'</inverse><seedInstances>u'{\u201cNYPD\u201d, \u201cNY\u201d} {\u201cU . S . Congress\u201d, \u201cU . S .\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'a portion or division of a whole that is separate or distinct; piece, fragment, fraction, or section; constituent (http://dictionary.reference.com/browse/part)'</description><freebaseID>u'/music/composition/part of'</freebaseID><comment>u'Expresses that something is part of the composition of something else.  The range need not be the same kind of thing as the domain, unlike for specializationOf.'</comment><relationName>u'specializationOf'</relationName><humanFormat>u'arg1 is a {kind of} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'mutualProxyFor agentInteractsWithAgent isTallerThan isShorterThan subjectConcernedByAcademicField'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'generalizationOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u''</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'one thing is a more specific kind of another thing'</description><freebaseID>u'/people/profession/specialization of'</freebaseID><comment>u'Unlike subpartOf, the range element is a kind of the domain element'</comment><relationName>u'mutualProxyFor'</relationName><humanFormat>u'arg1 and arg2 are {proxies} for eachother'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'subpartOf specializationOf agentInteractsWithAgent eventSubEventOf eventSuperEventOf eventCausedEvent eventCausedByEvent itemUsedWithItem agentInvolvedWithItem itemInvolvedWithAgent atLocation isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'mutualProxyFor'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'two things can be taken to refer to each other equally'</description><freebaseID>u''</freebaseID><comment>u'More general case of proxyFor that includes entity pairs that are truely interchangable and synonomous'</comment><relationName>u'proxyFor'</relationName><humanFormat>u'arg1 is a {proxy} for arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'mutualProxyFor'</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'proxyOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR on OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'one thing can be taken to refer to another, but the reverse is not necessarily or equally so'</description><freebaseID>u''</freebaseID><comment>u'Most general way to link entities that can (unidirectionally) be taken to mean other entities'</comment><relationName>u'agentControls'</relationName><humanFormat>u'arg1 {controls} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'agent'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentOwns agentCreated agentInteractsWithAgent agentInvolvedWithItem subpartOf superpartOf agentContributedToCreativeWork isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'controlledByAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (controls OR control OR controlled OR controling) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'to exercise restraint or direction over; dominate; command (http://dictionary.reference.com/browse/control)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'agentInteractsWithAgent'</relationName><humanFormat>u'arg1 {interacts} with arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'agent'</domain><range>u'agent'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'subpartOf specializationOf mutualProxyFor agentControls isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'agentInteractsWithAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (interacts OR interact OR interacted OR interacting) with * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'to act one upon another (http://dictionary.reference.com/browse/interact)'</description><freebaseID>u'/astronomy/galaxy/interaction'</freebaseID><comment>u'Most general agent-to-agent relation.  To begin with, we consider existing to be an action.  Therefore, this also captures states of being.  We may want to split this up later, which is a good reason to leave this populate=false.'</comment><relationName>u'agentCollaboratesWithAgent'</relationName><humanFormat>u'arg1 {collaborates} with arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'agentInteractsWithAgent'</generalizations><domain>u'agent'</domain><range>u'agent'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'agentCollaboratesWithAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (collaborates OR collaborate OR collaborated OR collaborating) with * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'to work, one with another; cooperate, as on a literary work (http://dictionary.reference.com/browse/collaborate)'</description><freebaseID>u''</freebaseID><comment>u'Cooperative interaction.  Primary alternative to agentCompeteswithAgent'</comment><relationName>u'agentHierarchicallyAboveAgent'</relationName><humanFormat>u'arg1 is hierarchically {above} arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'agentCollaboratesWithAgent, agentControls'</generalizations><domain>u'agent'</domain><range>u'agent'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentHoldsSharesInCompany companyHasShareholder'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'agentHierarchicallyBelowAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (hierarchically above OR supervise OR supervised OR supervises OR supervising) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u'This is for modelling power structures of control, not for arbitrary hierarchies (e.g. families) or things where agents are necessarily subparts of each-other.  Populate=false only because it has many more-interesting specializations.'</comment><relationName>u'agentBelongsToOrganization'</relationName><humanFormat>u'arg1 is an organization {belonging} to arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'agentHierarchicallyBelowAgent subpartOf'</generalizations><domain>u'humanAgent'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationHasAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (belongs OR belong OR belonged OR belonging) to * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'to be in the relation of a member, adherent, inhabitant, etc (http://dictionary.reference.com/browse/belong)'</description><freebaseID>u'/fictional universe/fictional character/organizations'</freebaseID><comment>u'Most general agent-to-organization relation.'</comment><relationName>u'subpartOfOrganization'</relationName><humanFormat>u'arg1 is a {subpart} of the organization arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'agentBelongsToOrganization'</generalizations><domain>u'organization'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'superpartOfOrganization'</inverse><seedInstances>u'{"Patriotic Front", "Zimbabwe African National Union"} {"National People\'s Congress", "China"} {"Sports Service", "AFP"} {"business school", "Stanford"} {"Center for the Study of Drug Development", "Tufts"} {"Kapalua Bay Hotel", "Maui Land and Pineapple"} {"School of Journalism", "Columbia"} {"The Plain Dealer", "Newhouse newspaper chain"} {"board of trustees", "the March of Dimes"} {"Department of Commerce", "Texas"} {"Office of State-Federal Relations", "Texas"} {"Supreme Court", "Texas"} {"George Bush School of Government and Public Service", "Texas A&amp;M"} {"Department of Housing and Community Affairs", "Texas"} {"Department of Economic Development", "Texas"} {"Law School", "New York University"} {"New York City Council", "the city"} {"Miami-Dade County public schools", "Miami-Dade County"} {"US District Court for the Southern District of New York", "US"} {"Ducca", "Puccini Group"} {"Energy Information Administration", "federal government"} {"Senate Energy and Natural Resources Committee", "Senate"} {"Civil Affairs and Psychological Operations Command", "Army"} {"366th Civil Engineer Squadron", "Air Force"} {"320th Psychological Operations Company", "Army Reserve"} {"Senate Indian Affairs Committee", "Senate"} {"Tampa division", "Florida Middle District Bankruptcy Court"} {"U.S. Senate", "U.S."} {"Tampa division", "Florida Middle District Bankruptcy Court"} {"AL Eastern Division", "AL"} {"AL Eastern Division", "AL"} {"Carl Gustaf Lounge", "The hotel"} {"Rose Hall", "Iberostar Hotels and Resorts"} {"restaurant and bar", "Settlers\' Beach Hotel"} {"Asian-Cuban restaurant", "Bacolet Beach Club"} {"Tiara", "Club Med Punta Cana"} {"Grand Palladium Lady Hamilton Resort and Spa", "Grand Palladium"} {"Coqui Water Park", "El Conquistador Resort and Golden Door Spa"} {"Grand Palladium Jamaica Resort and Spa", "Grand Palladium"} {"Reef Atlantis", "Atlantis"} {"Mamora Bay Divers", "St. James\' Club and Villas"} {"Viceroy", "Kor Group"} {"Almond Casuarina Beach Resort", "Almond Resorts"} {"the state chamber of commerce", "the state"} {"the bond and taxation committee", "the state chamber of commerce"} {"Changchun", "Jilin Province"} {"Changchun", "Jilin Province"} {"Shenyang", "Liaoning"} {"Harbin", "Heilongjiang"} {"legislature", "the country"} {"Literature Faculty", "Hanoi General University"} {"Economics Affairs and Budget Commission", "NA"} {"Party Construction Department", "the magazine"} {"Political Bureau", "CPVCC"} {"Party Construction Department", "the magazine"} {"Commission for Mass Mobilization", "CPVCC"} {"editing board", "the magazine"} {"Document Department", "Communist Magazine"} {"research institute of economic operation and development", "National Development and Reform Commission"} {"macroeconomy department", "Development Research Center of the State Council"} {"National Security Council", "Republic of Armenia"} {"Law Faculty", "Yerevan State University"} {"National Assembly", "Armenia"} {"Oriental Studies Department", "Yerevan State University"} {"Philological Department", "Yerevan State University"} {"Faculty of Law", "Bar Ilan University"} {"General Armament Department", "People\'s Liberation Army"} {"No. 8 Aviation College", "PLA Air Force"} {"PLA Air Force", "PLA"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'one organization is a subpart of a larger, controlling organization'</description><freebaseID>u'/business/business location/parent company'</freebaseID><comment>u'Describes organizational hierarchy.  Note that controlling power is implicit.'</comment><relationName>u'agentContributedToCreativeWork'</relationName><humanFormat>u'arg1 {contributed to} the creative work arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'agent'</domain><range>u'creativeWork'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentCreated agentControls agentOwns isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'creativeWorkContributedToByAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u''</queryString><editDate>u'2010-12-10'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Specifies that a particular agent contributed to the production or creation of a particular creativeWork.  An actor in a movie contributes to that movie, but agentCreated would probably be to strong an assertion for that.'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'worksFor'</relationName><humanFormat>u'arg1 {works for} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'person'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'athletePlaysForTeam musicianInMusicArtist personAttendsSchool'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'worker'</inverse><seedInstances>u'{"Steve Ballmer","Microsoft"}{"Fabrice Tourre","Goldman Sachs"}{"Stephanie Kwolek","DuPont"} {"Tom Brokaw","NBC"} {"Samuel Andrews","Standard Oil"} {"Otto Ambros","IG Farben"} {"William Shockley","Bell Labs"} {"Steve Wozniak","Apple"} {"Les Paul","Epiphone"}{"Albert Hofmann","Sandoz"} {"John Lafferty","Carnegie Mellon University"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (work OR works OR worked OR working) * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u''</author><curator>u''</curator><description>u"to be employed, esp. as a means of earning one's livelihood (http://dictionary.reference.com/browse/work)"</description><freebaseID>u''</freebaseID><comment>u'Naming: personWorksForOrganization, organizationEmploysPerson'</comment><relationName>u'acquired'</relationName><humanFormat>u'arg1 has {acquired} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'superpartOfOrganization'</generalizations><domain>u'company'</domain><range>u'company'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Google","Yahoo"} {"Intel","AMD"} {"Microsoft","Google"} {"Microsoft","Yahoo"} {"Yahoo","Google"}'</knownNegatives><inverse>u'acquiredBy'</inverse><seedInstances>u'{"Berkshire Hathaway","NetJets"} {"Ford","Jaguar"} {"General Electric","NBC"} {"GM","Hummer"} {"Google","YouTube"} {"HP","Compaq"} {"Intel","Sarvega"} {"Mattel","The Learning Company"} {"Microsoft","Connectix"} {"News Corp.","Dow Jones"} {"Nokia","Plazes"} {"Oracle","Agile"} {"SAP","Business Objects"} {"Whole Foods","Wild Oats"} {"Yahoo","Overture"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (acquires OR acquire OR acquired OR acquiring) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u"to come into possession or ownership of; get as one's own (http://dictionary.reference.com/browse/acquire)"</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/business/business operation", "/organization/organization/companies acquired": [{ "/business/acquisition/company acquired": { "name": null, "/common/topic/alias": [], "type": "/business/business operation" } }] }]'</freebaseID><comment>u'We may run into trouble here because acquisition is an event and having a sub-organization is a state of being (Derry: agree, but right now I cannot think of a solution to this - perhaps it is related to the factor that makes an organization a subpart of another organization; whether it is due to acquisition or not) (Naming: companyAcquiredCompany, companyAcquiredByCompany)'</comment><relationName>u'actorStarredInMovie'</relationName><humanFormat>u'arg1 {starred in} the movie arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentContributedToCreativeWork'</generalizations><domain>u'actor'</domain><range>u'movie'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'directorDirectedMovie'</mutexExceptions><knownNegatives>u'{"Jodie Foster", "Fight Club"} {"Brad Pitt", "Star Wars"} {"Harrison Ford", "Pirates of the Carribean"} {"Sigourney Weaver", "Die Hard"} {"Arnold Schwarzenegger", "Ferris Bueller \'s Day Off"}'</knownNegatives><inverse>u'movieStarActor'</inverse><seedInstances>u'{"Jodie Foster", "Silence of the Lambs"} {"Brad Pitt", "Fight Club"} {"Harrison Ford", "Star Wars"} {"John Goodman", "Big Lebowski"} {"Johnny Depp", "Pirates of the Carribean"} {"Sigourney Weaver", "Aliens"} {"Roger Moore", "Octopussy"} {"Bruce Willis", "Die Hard"} {"Arnold Schwarzenegger", "Terminator"} {"Matthew Broderick", "Ferris Bueller \'s Day Off"} {"Keanu Reeves", "Matrix"} {"Tom Hanks", "Forrest Gump"} {"Al Pacino", "The Godfather"} {"Susan Sarandon", "Witches of Eastwick"} {"Jamie Lee Curtis", "True Lies"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (stars OR star OR starred OR starring) in * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'to perform as an actor (in movie) (http://dictionary.reference.com/browse/act)'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/film/actor", "/film/actor/film": [{ "/film/performance/film": { "name": null, "/common/topic/alias": [], "type": "/film/film" } }] }]'</freebaseID><comment>u'Movie must star actors while actor may not star in a movie, he may star in an advertisement, theatre production, or television show instead and still be an actor'</comment><relationName>u'directorDirectedMovie'</relationName><humanFormat>u'arg1 {directed} the movie arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentContributedToCreativeWork'</generalizations><domain>u'director'</domain><range>u'movie'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'actorStarredInMovie'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'movieDirectedByDirector'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (directs OR direct OR directed OR directing) * arg2'</queryString><editDate>u'2010-11-01'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'to direct a monvie'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/film/director", "/film/director/film": [{ "name": null, "/common/topic/alias": [], "type": "/film/film" }] }]'</freebaseID><comment>u"Added during feedback @ 160 in order to separate actor from director.  Faces issues similar to actor: we're only considering here directors that happen to direct movies"</comment><relationName>u'athleteCoach'</relationName><humanFormat>u'arg1 is an athlete {coached by} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentHierarchicallyBelowAgent'</generalizations><domain>u'athlete'</domain><range>u'coach'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"LeBron James","Phil Jackson"} {"Paul Pierce","Mike Brown"} {"Jim Thome","Tony La Russa"} {"Brian Urlacher","Mike Tomlin"} {"Eli Manning","Lovie Smith"}'</knownNegatives><inverse>u'coachesAthlete'</inverse><seedInstances>u'{"Kobe Bryant","Phil Jackson"} {"LeBron James","Mike Brown"} {"Paul Pierce","Doc Rivers"} {"Albert Pujols","Tony La Russa"} {"Jim Thome","Ozzie Guillen"} {"Ben Roethlisberger","Mike Tomlin"} {"Brian Urlacher","Lovie Smith"} {"Eli Manning","Tom Coughlin"} {"Peyton Manning","Tony Dungy"} {"Freddy Sanchez","John Russell"} {"Alexander Ovechkin","Bruce Boudreau"} {"Ben Gordon","Scott Stiles"} {"Dwight Howard","Stan Van Gundy"} {"Larry Fitzgerald","Ken Whisenhunt"} {"Carson Palmer","Marvin Lewis"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * coached by * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'to give instruction or advice to in the capacity of a coach; instruct (http://dictionary.reference.com/browse/coach)'</description><freebaseID>u'/american football/football historical coach position/coach'</freebaseID><comment>u'For a person to be a coach, he must be training an athlete - but must a person have a coach to be considered an athlete? (Naming: athleteCoachedByCoach, coachCoachesAthlete)'</comment><relationName>u'athleteHomeStadium'</relationName><humanFormat>u'the {home stadium of} arg1 is arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentActsInLocation'</generalizations><domain>u'athlete'</domain><range>u'stadiumOrEventVenue'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Brian Urlacher","Wrigley Field"} {"Paul Pierce","Madison Square Garden"} {"Carson Palmer","Heinz Field"} {"Ben Gordon","Soldier Field"} {"Eli Manning","Lucas Oil Stadium"}'</knownNegatives><inverse>u'stadiumHomeToAthlete'</inverse><seedInstances>u'{"Mickey Mantel","Yankee Stadium"} {"Alex Rodriguez","Yankee Stadium"} {"Brian Urlacher","Soldier Field"} {"Albert Pujols","Busch Stadium"} {"Jim Thome","U.S. Cellular Field"} {"Paul Pierce","TD Banknorth Garden"} {"LeBron James","Quicken Loans Arena"} {"Carson Palmer","Paul Brown Stadium"} {"Larry Fitzgerald","University of Phoenix Stadium"} {"Dwight Howard","Amway Arena"} {"Ben Gordon","United Center"}  {"Eli Manning","Giants Stadium"} {"Peyton Manning","Lucas Oil Stadium"} {"Sidney Crosby","Mellon Arena"} {"Nicklas Lidstrom","Joe Louis Arena"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg2 * home to * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'a sports arena, usually oval or horseshoe-shaped, with tiers of seats for spectators (which is home for an athlete) (http://dictionary.reference.com/browse/stadium)'</description><freebaseID>u'/sports/sports team/arena stadium'</freebaseID><comment>u'Naming: athleteHasHomeStadiumOrEventVenue, stadiumOrEventVenueHomeToAthlete'</comment><relationName>u'athletePlaysForTeam'</relationName><humanFormat>u'arg1 {plays for} the team arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'athlete'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'worksFor'</mutexExceptions><knownNegatives>u'{"Alex Rodriguez","Cubs"} {"Alexander Ovechkin","Penguins"} {"Allen Iverson","Bulls"} {"Deron Williams","Magic"} {"Eli Manning","Colts"}'</knownNegatives><inverse>u'teamMember'</inverse><seedInstances>u'{"Alex Rodriguez","Yankees"} {"Alexander Ovechkin","Capitals"} {"Allen Iverson","Pistons"} {"Deron Williams","Jazz"} {"Dwight Howard","Magic"} {"Eli Manning","Giants"} {"Ichiro Suzuki","Mariners"} {"Jim Thome","White Sox"} {"Kevin Garnett","Celtics"} {"Kobe Bryant","Lakers"} {"Martin Brodeur","Devils"} {"Nicklas Lidstrom","Red Wings"} {"Peyton Manning","Colts"} {"Reggie Bush","Saints"} {"Sidney Crosby","Penguins"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (plays OR play OR played OR playing) for * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'to join together in a team (http://dictionary.reference.com/browse/team)'</description><freebaseID>u'/soccer/football team/current roster'</freebaseID><comment>u'Naming: athletePlaysForSportsTeam, sportsTeamHasMemberAthlete'</comment><relationName>u'athletePlaysInLeague'</relationName><humanFormat>u'arg1 {plays} in the league arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'athlete'</domain><range>u'sportsLeague'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Sidney Crosby","NBA"} {"Sammy Sosa","NFL"} {"Kobe Bryant","NFL"} {"Dustin Pedroia", "NBA"} {"Brian Urlacher","NHL"}'</knownNegatives><inverse>u'leaguePlayers'</inverse><seedInstances>u'{"Sidney Crosby","NHL"} {"Sammy Sosa","MLB"} {"Kobe Bryant","NBA"} {"Dustin Pedroia", "MLB"} {"Brian Urlacher","NFL"} {"Alexander Ovechkin","NHL"} {"Paul Pierce","NBA"} {"Albert Pujols","MLB"} {"Alex Rodriguez","MLB"} {"Deron Williams","NBA"} {"Nicklas Lidstrom","NHL"} {"Allen Iverson","NBA"} {"Eli Manning","NFL"} {"Ben Roethlisberger","NFL"} {"Dwight Howard","NBA"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (plays OR play Or played OR playing) in * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'a group of athletic teams organized to promote mutual interests and to compete chiefly among themselves (http://dictionary.reference.com/browse/league)'</description><freebaseID>u'/sports/sports league participation/league'</freebaseID><comment>u'Naming: athletePlaysInSportsLeague, sportsLeagueHasPlayerAthlete'</comment><relationName>u'athletePlaysSport'</relationName><humanFormat>u'arg1 {plays} the sport arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'athlete'</domain><range>u'sport'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u' {"Brett Favre","baseball"} {"Deron Williams","baseball"} {"Dwayne Wade","hockey"} {"Evander Holyfield","football"} {"Kerry Wood","tennis"}'</knownNegatives><inverse>u'players'</inverse><seedInstances>u'{"Alex Rodriguez","baseball"} {"Alexander Ovechkin","hockey"} {"Allen Iverson","basketball"} {"David Beckham","soccer"} {"Evander Holyfield","boxing"} {"Kobe Bryant","basketball"} {"Kurt Warner","football"} {"LeBron James","basketball"} {"Lennox Lewis","boxing"} {"Pete Sampras","tennis"} {"Peyton Manning","football"} {"Phil Mickelson","golf"} {"Roger Federer","tennis"} {"Sidney Crosby","hockey"} {"Tiger Woods","golf"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (plays OR play OR played OR playing) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'to engage in (a game, pastime, etc.) (http://dictionary.reference.com/browse/play)'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/pro athlete", "/sports/pro athlete/sports played professionally": [{ "/sports/pro sports played/sport": { "name": null, "/common/topic/alias": [], "type": "/sports/sport" } }] }]'</freebaseID><comment>u'Naming: athletePlaysSport, sportHasPlayerAthlete'</comment><relationName>u'buildingLocatedInCity'</relationName><humanFormat>u'arg1 is a building {located in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'building'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'aquariumInCity'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityContainsBuilding'</inverse><seedInstances>u'{"Louvre","Paris"}{"Empire State Building","New York City"}{"White House","Washington D.C."}{"Sears Tower","Chicago"}{"Chrysler Building","New York City"}{"Warhol Museum","Pittsburgh"}{"Rockefeller Center","New York City"}{"USX Building","Pittsburgh"}{"PPG Place","Pittsburgh"}{"Trump Taj Mahal Casino Resort","Atlantic City"}{"Bolshoi Theatre","Moscow"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular building is located in a particular city'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/architecture/building", "/architecture/structure/address": [{ "/location/mailing address/citytown": { "name": null, "/common/topic/alias": [], "type": "/location/citytown" } }] }]'</freebaseID><comment>u''</comment><relationName>u'topMemberOfOrganization'</relationName><humanFormat>u'arg1 is a {top member} of arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'worksFor personLeadsOrganization'</generalizations><domain>u'person'</domain><range>u'company'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationHasTopMember'</inverse><seedInstances>u'{\u201cJulie Gerberding\u201d, \u201cUnited States Centers for Disease Prevention and Control\u201d} {\u201cMichael E. Cryor\u201d, \u201cMaryland Democratic Party\u201d} {\u201cArthur Garson\u201d, \u201cUniversity of Virginia\u201d} {\u201cWalter Sheldon Rodman\u201d, \u201cUniversity of Virginia Engineering School\u201d} {\u201cRuth Harley\u201d, \u201cScreen Australia\u201d} {\u201cAhmed Foruzandeh\u201d, \u201cQuds Force\u201d} {\u201cMohamed Elmasry\u201d, \u201cCanadian Islamic Congress\u201d} {\u201cRobin Bronk\u201d, \u201cCreative Coalitiion\u201d} {\u201cAlice Scott\u201d, \u201cCentury Regional Detention Center\u201d} {\u201cAline Isaacson\u201d, \u201cGLSEN\u201d} {\u201cDieter Schiessl\u201d, \u201cWorld Meteorological Organization\u201d} {\u201cMargaret Carriere\u201d, \u201cHalliburton\u201d} {\u201cNathan Bouscher\u201d, \u201cCIDI\u201d} {\u201cStan Sigman\u201d, \u201cCingular\u201d} {\u201cOmar Minaya\u201d, \u201cNew York Mets\u201d} {\u201cMike Widomski\u201d, \u201cFEMA\u201d} {\u201cMichel Sidibe\u201d, \u201cUNAIDS\u201d} {\u201cCarter Cast\u201d, \u201cWalmart\u201d} {\u201cDon Hall\u201d, \u201cNational Center for State Courts\u201d} {\u201cDon L. Blankenship\u201d, \u201cMassey Energy\u201d} {\u201cMitch Hecht\u201d, \u201cInternational Steel Group\u201d} {\u201cKibamba Kasereka\u201d, \u201cMai-Mai militia\u201d} {\u201cSylvain Abitbol\u201d, \u201cCanadian Jewish Congress\u201d} {\u201cOdile Roujol\u201d, \u201cLancome\u201d} {\u201cAllan Rivlin\u201d, \u201cPeter D. Hart Research Associates\u201d} {\u201cChris Severson-Baker\u201d, \u201cPembina Institute\u201d} {\u201cMark Hackard\u201d, \u201cNixon Center\u201d} {\u201cAbdul Aziz al-Hakin\u201d, \u201cBadr Organization\u201d} {\u201cEddy Hartenstein\u201d, \u201cDirecTV\u201d} {\u201cVal Christensen\u201d, \u201cEnergySolutions\u201d} {\u201cJohn Hill\u201d, \u201cFMCSA\u201d} {\u201cAbigail Johnson\u201d, \u201cFMR Corp.\u201d} {\u201cJane Garvey\u201d, \u201cFederal Aviation Administration\u201d} {\u201cTrevor Potter\u201d, \u201cFederal Election Commission\u201d} {\u201cMartin Gilbert\u201d, \u201cFirstGroup\u201d} {\u201cJim Flavin\u201d, \u201cFyffes PLC\u201d} {\u201cAndrew Kam\u201d, \u201cHong Kong Disneyland\u201d} {\u201cDavid S . Sutherland\u201d, \u201cIPSCO\u201d} {\u201cJack Del Rio\u201d, \u201cJacksonville Jaguars\u201d} {\u201cYoshiaki Ando\u201d, \u201cKonica Minolta\u201d} {\u201cJay Brown\u201d, \u201cMBIA\u201d} {\u201cJohn Kilduff\u201d, \u201cMF Global\u201d} {\u201cJohn Dooley\u201d, \u201cMarkit\u201d} {\u201cJuan Carlos Osorio\u201d, \u201cMillonarios\u201d} {\u201cCharlie King\u201d, \u201cNational Action Network\u201d} {\u201cPhil Waugh\u201d, \u201cNew South Wales Waratahs\u201d} {\u201cBrian Tierney\u201d, \u201cPhiladelphia Inquirer\u201d} {\u201cTheo Epstein\u201d, \u201cRed Sox\u201d} {\u201cAubrey Sarvis\u201d, \u201cSLDN\u201d} {\u201cLuiz Furlan\u201d, \u201cSadia\u201d} {\u201cTim Zagat\u201d, \u201cZagat\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Identifies people in high-level, leading positions at organizations.  Applicable positions have authority over the entire organization (e.g. presidents, VPs, directors, and C-level executives), not merely over departments or subsidiaries.'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'ceoOf'</relationName><humanFormat>u'arg1 is the {CEO of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'topMemberOfOrganization'</generalizations><domain>u'ceo'</domain><range>u'company'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Jeff Bezos","Apple"} {"Paul Allen","Microsoft"} {"Sergey Brin","Google"} {"Larry Page","Google"} {"David Filo","Yahoo"}'</knownNegatives><inverse>u'companyCeo'</inverse><seedInstances>u' {"Alain Belda","Alcoa"} {"David Brown","Owens Corning"} {"Edgar Bronfman","Warner Music Group"} {"Edward Johnson","Fidelity"} {"Eric Schmidt","Google"} {"Jeff Bezos","Amazon"} {"John Antioco","Blockbuster"} {"Mark Zuckerberg","Facebook"} {"Richard Notebaert","Qwest Communications"} {"Stephen Bennett","Intuit"} {"Stephen Bollenbach","Hilton Hotels"} {"Steve Ballmer","Microsoft"} {"Steve Jobs","Apple"} {"Steven Appleton","Micron"} {"Warren Buffett","Berkshire Hathaway"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * ceo of * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular CEO is the CEO of a particular company'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/business/board member", "/business/board member/leader of": [{ "/organization/leadership/title~=": "CEO", "/organization/leadership/organization": { "name": null, "/common/topic/alias": [], "type": "/business/business operation" } }] }]'</freebaseID><comment>u'Should be mutex with personLeadsGeopoliticalOrganization xcept that companies are not yet allowed to be geopolitical organizations'</comment><relationName>u'cityLocatedInGeopoliticalLocation'</relationName><humanFormat>u'arg1 is a city {located in} the geopolitical location arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'city'</domain><range>u'geopoliticalLocation'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'geopoliticalLocationContainsCity'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-13'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'specifies that a particular city is located in a particular geopolitical location'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'stateLocatedInGeopoliticalLocation'</relationName><humanFormat>u'arg1 is a state or province {located in} the geopolitical location arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'stateOrProvince'</domain><range>u'geopoliticalLocation'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'geopoliticalLocationContainsState'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-13'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'specifies that a particular state or province is located in a particular geopolitical location'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'countryLocatedInGeopoliticalLocation'</relationName><humanFormat>u'arg1 is a country {located in} the geopolitical location arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'country'</domain><range>u'geopoliticalLocation'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'geopoliticalLocationContainsCountry'</inverse><seedInstances>u'{\u201cMexico\u201d, \u201cNorth America\u201d} {\u201cLibya\u201d, \u201cNorth Africa\u201d} {\u201cZimbabwe\u201d, \u201cAfrica\u201d} {\u201cThailand\u201d, \u201cAsia\u201d} {\u201cPersia\u201d, \u201cCentral Asia\u201d} {\u201cBelgium\u201d, \u201cEU\u201d} {\u201cFrance\u201d, \u201cEurope\u201d} {\u201cEstonia\u201d, \u201cBaltics\u201d} {\u201cGreece\u201d, \u201cMediteranian\u201d} {\u201cAustria\u201d, \u201cEurasia\u201d} {\u201cFinland\u201d, \u201cScandinavia\u201d} {\u201cNauru\u201d, \u201cMicronesia\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-13'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'specifies that a particular country is located in a particular geopolitical entity'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'cityCapitalOfCountry'</relationName><humanFormat>u'arg1 is the {capital city of} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'cityLocatedInCountry proxyFor'</generalizations><domain>u'city'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Manhattan","United States"}{"Toronto","Canada"}{"London","Ireland"}{"Venice","Italy"}'</knownNegatives><inverse>u'countryCapital'</inverse><seedInstances>u'{"Ottawa","Canada"}{"Moscow","Russia"}{"Paris","France"}{"Buenos Aires","Argentina"}{"Tehran","Iran"}{"New Dehli","India"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * capital of * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular city is the capital of a particular country'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/type/reflect/any reverse": [{ "link": "/location/country/capital", "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'switch and rename to countryHasCapitalCity ?'</comment><relationName>u'cityLocatedInCountry'</relationName><humanFormat>u'arg1 is a city {located in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'cityLocatedInGeopoliticalLocation'</generalizations><domain>u'city'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Antwerp","Argentina"} {"Istanbul","China"} {"New York","Finland"} {"Pittsburgh","Mexico"} {"Toronto","United States"}'</knownNegatives><inverse>u'countryCities'</inverse><seedInstances>u' {"Alexandria","Egypt"} {"Beijing","China"} {"Boston","United States"} {"Chicago","United States"} {"Espoo","Finland"} {"Hamburg","Germany"} {"Havana","Cuba"} {"Istanbul","Turkey"} {"Manchester","United Kingdom"} {"Munich","Germany"} {"New York City","United States"} {"Pittsburgh","United States"} {"Rio de Janeiro","Brazil"} {"Tokyo","Japan"} {"Toronto","Canada"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular city is located in a particular country'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/location/location/containedby": [{ "type": "/location/country", "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u''</comment><relationName>u'cityLocatedInState'</relationName><humanFormat>u'arg1 is a city {located in} the state or province arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'cityLocatedInGeopoliticalLocation'</generalizations><domain>u'city'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Philadephia","New York"} {"Pittsburgh","Ohio"} {"Boston","Maine"} {"Salt Lake","Nevada"} {"Denver","Texas"}'</knownNegatives><inverse>u'stateContainsCity'</inverse><seedInstances>u'{"Pittsburgh","Pennsylvania"} {"Boston","Massachusetts"} {"Chicago","Illinois"} {"Albany","New York State"} {"San Francisco","California"} {"Seattle","Washington"} {"Philadelphia","Pennsylvania"} {"Durham","North Carolina"} {"Boston","Massachusetts"} {"Miami","Florida"} {"Morgantown","West Virginia"} {"New Brunswick","New Jersey"} {"Atlantic City","New Jersey"} {"Roanoke","Virginia"} {"Phoenix","Arizona"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular city is located in a particular state or province'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/location/location/containedby": [{ "type": "/location/us state", "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u"this FB query is only for the cities in US states, because FB doesn't have a direct mapping for our stateOrProvince category"</comment><relationName>u'coachesInLeague'</relationName><humanFormat>u'arg1 {coaches} in the league arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'coach'</domain><range>u'sportsLeague'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Phil Jackson","NFL"} {"Mike Brown","NHL"} {"Doc Rivers","NFL"} {"Ozzie Guillen","NBA"} {"Tony La Russa","NFL"}'</knownNegatives><inverse>u'leagueCoaches'</inverse><seedInstances>u'{"Phil Jackson","NBA"} {"Mike Brown","NBA"} {"Doc Rivers","NBA"} {"Ozzie Guillen","MLB"} {"Tony La Russa","MLB"} {"Mike Tomlin","NFL"} {"Frank Beamer","NCAA Football"} {"Jay Triano","NBA"} {"Mike Babcock","NHL"} {"Ron Wilson","NHL"} {"Terry Murray","NHL"} {"Andy Reid","NFL"} {"Bill Belichick","NFL"} {"Eric Mangini","NFL"} {"Ron Zook","NCAA Football"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (coaches OR coach OR coached OR coaching) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular coach coaches a team that plays in a particular league'</description><freebaseID>u''</freebaseID><comment>u"rename:coachCoachesInLeague; no general 'coach' in FB.  Note that we're leaving this mutually exclusive with worksFor on assumption; if somebody knows better, please say so."</comment><relationName>u'coachesTeam'</relationName><humanFormat>u'arg1 {coaches} the team arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'worksFor'</generalizations><domain>u'coach'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Doc Rivers","Hawks"} {"Eric Wedge","Pittsburgh Pirates"} {"Joe Paterno","Panthers"} {"John Russell","New York Giants"} {"Larry Brown","Celtics"}'</knownNegatives><inverse>u'teamCoach'</inverse><seedInstances>u' {"Bo Pelini","Cornhuskers"} {"Bobby Bowden","Seminoles"} {"Dave Wannstedt","Panthers"} {"Doc Rivers","Celtics"} {"Eric Wedge","Indians"} {"Frank Beamer","Hokies"} {"Jay Triano","Raptors"} {"Joe Paterno","Nittany Lions"}  {"Larry Brown","Bobcats"} {"Lovie Smith","Bears"} {"Mike Shanahan","Giants"} {"Mike Woodson","Hawks"} {"Pete Carroll","USC"} {"Phil Jackson","Lakers"} {"Ron Zook","Illini"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (coaches OR coach OR coached OR coaching) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular coach coaches a particular team'</description><freebaseID>u'"'</freebaseID><comment>u'rename:coachCoachesTeam'</comment><relationName>u'coachWonTrophy'</relationName><humanFormat>u'the coach arg1 {won} the trophy or tournament arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'coach'</domain><range>u'awardTrophyTournament'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"Phil Jackson","Super Bowl"} {"Bill Cowher","Stanley Cup"} {"Ozzie Guillen","Super Bowl"} {"Tony La Russa","NBA Finals"} {"Tom Coughlin","World Series"}'</knownNegatives><inverse>u'trophyWonByCoaches'</inverse><seedInstances>u'{"Phil Jackson","NBA Championship"} {"Bill Cowher","Super Bowl"} {"Ozzie Guillen","World Series"} {"Tony La Russa","World Series"} {"Tom Coughlin","Super Bowl"} {"Tony Dungy","Super Bowl"} {"Bill Belichick","Super Bowl"} {"Chuck Daly","NBA Championship"} {"Pat Riley","NBA Championship"} {"Joe Torre","World Series"} {"Vince Lombardi","Super Bowl"} {"Tom Landry","Super Bowl"} {"Mike Ditka","Super Bowl"} {"Joe Gibbs","Super Bowl"} {"Mike Holmgren","Super Bowl"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (wins OR win OR won OR winning) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular coach coaches a team that won a particular award or trophy'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'companyEconomicSector'</relationName><humanFormat>u'arg1 is a company {in the economic sector of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'company'</domain><range>u'economicSector'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan subjectConcernedByAcademicField'</mutexExceptions><knownNegatives>u' {"Adobe","cars"} {"AMD","insurance"} {"Apple","financial services"} {"Canon","drugs"} {"Electronic Arts","hardware"}'</knownNegatives><inverse>u'economicSectorCompany'</inverse><seedInstances>u' {"Adobe","software"} {"AFLAC","insurance"} {"Alcoa","aluminum"} {"AMD","semiconductors"} {"Apple","consumer electronics"} {"Berkshire Hathaway","insurance"} {"Canon","imaging"} {"Electronic Arts","video games"}  {"Ford","automotive"} {"Kimberly-Clark","consumer products"} {"Microsoft","computer software"} {"Morgan Stanley","financial services"} {"Pfizer","pharmaceuticals"} {"Sony","consumer electronics"} {"Toyota","automotive"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * in * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular company does business in a particular economic sector'</description><freebaseID>u'[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/business/business operation/industry": [{ "name": null, "/common/topic/alias": [], "type": "/business/industry" }] }]'</freebaseID><comment>u'rename:companyOperatesInIndustry ?'</comment><relationName>u'competesWith'</relationName><humanFormat>u'the companies arg1 and arg2 {compete with} eachother'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentCompetesWithAgent'</generalizations><domain>u'company'</domain><range>u'company'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Ford","GE"} {"Google","Citigroup"} {"Microsoft","Roche"} {"Microsoft","Boeing"} {"AMD","Google"}'</knownNegatives><inverse>u'competesWith'</inverse><seedInstances>u' {"AMD","Intel"} {"Blockbuster","Netflix"} {"Citigroup","Morgan Stanley"} {"Ford","Chrysler"} {"Ford","Toyota"} {"Google","Microsoft"} {"Hershey","Nestle"} {"Home Depot","Lowes"} {"Honda","Toyota"} {"HP","Apple"}  {"Microsoft","Yahoo"} {"Nestle","Unilever"} {"Nikon","Canon"} {"Pfizer","Roche"} {"Yahoo","Google"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (competes OR compete OR competed OR competing) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular company has been in competition with another particular company'</description><freebaseID>u''</freebaseID><comment>u'rename:companyCompetesWithCompany'</comment><relationName>u'countryCurrency'</relationName><humanFormat>u'the country arg1 {uses the currency} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'country'</domain><range>u'currency'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u' {"United States","euros"} {"United Kingdom","dollars"} {"Germany","pesos"} {"Japan","sheqels"} {"Israel","dinar"}'</knownNegatives><inverse>u'currencyCountry'</inverse><seedInstances>u' {"United States","dollars"} {"Canada","dollars"} {"United Kingdom","pounds"} {"France","euros"} {"Germany","euros"} {"Japan","yen"} {"Israel","sheqels"} {"Russia","rubles"} {"Argentina","pesos"} {"Chile","pesos"} {"Mexico","pesos"} {"India","rupees"} {"Greece","euros"} {"Switzerland","francs"} {"Libya","dinar"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg2 * currency (in OR at OR of) * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular country uses a particular currency'</description><freebaseID>u'[{ "name": null, "type": "/location/country", "/common/topic/alias": [], "/location/country/currency used": [{ "name": null, "/common/topic/alias": [], "type": "/finance/currency" }] }]'</freebaseID><comment>u'rename:countryUsesCurrency'</comment><relationName>u'dateOfEvent'</relationName><humanFormat>u'arg2 {happened on} the date arg1'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'date'</domain><range>u'event'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfDateOfEvent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u''</requiredForDomain><requiredForRange>u''</requiredForRange><queryString>u'arg2 * (happens OR happen OR happened OR happening) * arg1'</queryString><editDate>u'2010-07-05'</editDate><author>u''</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u'Removed inverse status now that eventDate has range dateLiteral.  Why was this already populate=FALSE?  Should we just delete this predicate?'</comment><relationName>u'eventDate'</relationName><humanFormat>u'arg1 {happened on} the date arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atDate'</generalizations><domain>u'event'</domain><range>u'dateLiteral'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Vietnam War","January 1973"} {"World War II","September 1945"}{"World War II","2009"}'</knownNegatives><inverse>u'dateEvent'</inverse><seedInstances>u'{"World Conference on Human Rights","June 1993"}{"Great War","August 1914"}{"Operation Barbarossa","June 1941"}{"Nazi-Soviet Pact","August 1939"} {"Hurricane Agnes","June 1972"}{"Six-Day War","June 1967"}{"Wannsee Conference","January 1942"}{"potato famine","1846"}{"liquidity crisis","2007"}{"Tsunami Relief","2005"} {"Operation Iraqi Freedom","2005"} {"troop surge","2007"} {"congressional elections","2010"} {"Revolutionary war","1812"} {"D-Day landings", "June 1944"} {"World War II","December 1941"}{"Warsaw Pact","August 1968"}{"Pearl Harbour","December 1941"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (happens OR happen OR happened OR happening) * arg2'</queryString><editDate>u'2010-07-14'</editDate><author>u''</author><curator>u''</curator><description>u'specifies that the duration of a particular event overlapped with a particular date.'</description><freebaseID>u''</freebaseID><comment>u'Seeds dictated by limited selection of dates in current all-pairs.  It would be good to edit them later.  should make this startDate and endDate?'</comment><relationName>u'organizationHeadquarteredInCity'</relationName><humanFormat>u'arg1 is {headquartered in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'organization'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityOfOrganizationHeadquarters'</inverse><seedInstances>u'{\u201cHarkat-ul-Mujahadeen\u201d, \u201cIslamabad\u201d} {\u201cLeague of Nations\u201d, \u201cGeneva\u201d} {\u201cCSS\u201d, \u201cS\xe3o Paulo\u201d} {\u201cQuds Force\u201d, \u201cTehran\u201d} {\u201cFree Thinking Film Society\u201d, \u201cOttawa\u201d} {\u201cCreative Coalition\u201d, \u201cNew York\u201d} {\u201cCentury Regional Detention Center\u201d, \u201cLynwood\u201d} {\u201cGLSEN\u201d, \u201cNew York City\u201d} {\u201cWorld Meteorological Organization\u201d, \u201cGeneva\u201d} {\u201cIslamic Charity Movement\u201d, \u201cHebron\u201d} {\u201cInternational Steel Group\u201d, \u201cCleveland\u201d} {\u201cPembina Institute\u201d, \u201cCalgary\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (headquarter OR HQ) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The city where a given organization is headquartered'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'organizationHeadquarteredInStateOrProvince'</relationName><humanFormat>u'arg1 is {headquartered in} the state or province arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'organization'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateOrProvinceOfOrganizationHeadquarters'</inverse><seedInstances>u'{\u201cAbu Sayyaf\u201d, \u201cBasilan\u201d} {\u201cCreative Coalition\u201d, \u201cNew York\u201d} {\u201cCentury Regional Detention Center\u201d, \u201cCalifornia\u201d} {\u201cGLSEN\u201d, \u201cNew York\u201d} {\u201cNew York Mets\u201d, \u201cNew York\u201d} {\u201cMassey Energy\u201d, \u201cVirginia\u201d} {\u201cInternational Steel Group\u201d, \u201cOhio\u201d} {\u201cMai-Mai militia\u201d, \u201cNorth and South-Kivu provinces\u201d} {\u201cPeter D. Hart Research Associates\u201d, \u201cD.C.\u201d} {\u201cPembina Institute\u201d, \u201cAlberta\u201d} {\u201cAQR Capital Management\u201d, \u201cConnecticut\u201d} {\u201cEnergySolutions\u201d, \u201cUtah\u201d} {\u201cFMR Corp.\u201d, \u201cMassachusetts\u201d} {\u201cIPSCO\u201d, \u201cSaskatchewan\u201d} {\u201cJacksonville Jaguars\u201d, \u201cFlorida\u201d} {\u201cKennedy Space Center\u201d, \u201cFlorida\u201d} {\u201cMBIA\u201d, \u201cNew York\u201d} {\u201cMF Global\u201d, \u201cNew York\u201d} {\u201cNational Action Network\u201d, \u201cNew York\u201d} {\u201cNew South Wales Waratahs\u201d, \u201cNew South Wales\u201d} {\u201cThe Tax Policy Center\u201d, \u201cWashington, D.C.\u201d} {\u201cTyco Healthcare\u201d, \u201cMassachusetts\u201d} {\u201cTianjin Lions\u201d, \u201cTianjin\u201d} {\u201cSAC\u201d, \u201cLiaoning Province\u201d} {\u201cNew York Immigration Coalition\u201d, \u201cNew York\u201d} {\u201cMTCTechnologies\u201d, \u201cOhio\u201d} {\u201cMoro National Liberation Front\u201d, \u201cMindanao\u201d} {\u201cFocus on the Family\u201d, \u201cColorado\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (headquarter OR HQ) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The state or province where a given organization is headquartered'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'organizationHeadquarteredInCountry'</relationName><humanFormat>u'arg1 is {headquartered in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'organization'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'hasOfficeInCountry'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryOfOrganizationHeadquarters'</inverse><seedInstances>u'{\u201cLeague of Nations\u201d, \u201cSwitzerland\u201d} {\u201cCSS\u201d, \u201cBrazil\u201d} {\u201cMECO\u201d, \u201cTaiwan\u201d} {\u201cScreen Australia\u201d, \u201cAustralia\u201d} {\u201cQuds Force\u201d, \u201cIran\u201d} {\u201cFree Thinking Film Society\u201d, \u201cCanada\u201d} {\u201cCanadian Islamic Congress\u201d, \u201cCanada\u201d} {\u201cWorld Meteorological Organization\u201d, \u201cSwitzerland\u201d} {\u201cCIDI\u201d, \u201cThe Netherlands\u201d} {\u201cFEMA\u201d, \u201cUS\u201d} {\u201cUNAIDS\u201d, \u201cSwitzerland\u201d} {\u201cCanadian Jewish Congress\u201d, \u201cCanada\u201d} {\u201cLancome\u201d, \u201cFrance\u201d} {\u201cPembina Institute\u201d, \u201cCanada\u201d} {\u201cAQR Capital Management\u201d, \u201cUnited States\u201d} {\u201cDenso\u201d, \u201cJapan\u201d} {\u201cFederal Aviation Administration\u201d, \u201cUS\u201d} {\u201cFyffes PLC\u201d, \u201cIreland\u201d} {\u201cHong Kong Disneyland\u201d, \u201cChina\u201d} {\u201cIPSCO\u201d, \u201cCanada\u201d} {\u201cIRGC-QF\u201d, \u201cIran\u201d} {\u201cKonica Minolta\u201d, \u201cJapan\u201d} {\u201cLe Journal du Dimanche\u201d, \u201cFrance\u201d} {\u201cLe Point\u201d, \u201cFrance\u201d} {\u201cMBIA\u201d, \u201cUS\u201d} {\u201cMedina hospital\u201d, \u201cSomalia\u201d} {\u201cMillonarios\u201d, \u201cColombia\u201d} {\u201cNew South Wales Waratahs\u201d, \u201cAustralia\u201d} {\u201cFirstGroup\u201d, \u201cBritain\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (headquarter OR HQ) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The country where a given organization is headquartered'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'hasOfficeInCity'</relationName><humanFormat>u'arg1 is a company that {has an office in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'company'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Google","Detroit"} {"Mondavi","Pittsburgh"} {"Heinz","Milwaukee"} {"AMD","Pittsburgh"} {"Canon","Pittsburgh"}'</knownNegatives><inverse>u'cityHasCompanyOffice'</inverse><seedInstances>u' {"Alcoa","New York"} {"Amazon","Cape Town"} {"Amazon","Seattle"} {"Apple","Chicago"} {"Apple","Cupertino"} {"General Electric","New York"} {"General Motors","Lansing"} {"Google","New York"} {"Google","Pittsburgh"} {"Google","Seattle"} {"Hilton Hotels","Melbourne"} {"Micron","Denver"} {"Microsoft","Cambridge"} {"Microsoft","Redmond"} {"Owens Corning","Sydney"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular company has offices in a particular city'</description><freebaseID>u'[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/organization/organization/locations": [{ "/business/business location/address": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }] }]'</freebaseID><comment>u'rename:companyHasOfficeInCity'</comment><relationName>u'hasOfficeInCountry'</relationName><humanFormat>u'arg1 is a company that {has an office in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'company'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'organizationHeadquarteredInCountry'</mutexExceptions><knownNegatives>u'{"Heinz","Israel"} {"Greyhound Bus","Egypt"} {"Google","Iran"} {"Yahoo","Germany"} {"Motorola","France"}'</knownNegatives><inverse>u'countryHasCompanyOffice'</inverse><seedInstances>u'{"Alcoa","Iceland"} {"Alcoa","United States"} {"Blockbuster","Canada"} {"Blockbuster","Mexico"} {"Google","China"} {"Google","United States"} {"LG","South Korea"} {"Microsoft","England"} {"Microsoft","United States"} {"Motorola","USA"} {"Nokia","Finland"} {"Research In Motion","Canada"} {"Sabritas","Mexico"} {"Samsung","South Korea"} {"Volkswagen","Germany"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular company has offices in a particular country'</description><freebaseID>u'[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/organization/organization/locations": [{ "/business/business location/address": [{ "/location/mailing address/citytown": [{ "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/country" }] }] }] }] }]'</freebaseID><comment>u'rename:companyHasOfficeInCountry'</comment><relationName>u'headquarteredIn'</relationName><humanFormat>u'arg1 is a company {headquartered in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasOfficeInCity organizationHeadquarteredInCity'</generalizations><domain>u'company'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'radioStationInCity televisionStationInCity newspaperInCity'</mutexExceptions><knownNegatives>u' {"Micron","Dallas"} {"Microsoft","Espoo"} {"Warner Music Group","Beverly Hills"} {"Google","New York"} {"Canon","Chicago"}'</knownNegatives><inverse>u'companiesHeadquarteredHere'</inverse><seedInstances>u' {"AFLAC","Columbus"} {"Alcoa","Pittsburgh"} {"Amazon","Seattle"} {"Apple","Cupertino"} {"Blockbuster","Dallas"} {"Citigroup","New York"} {"General Electric","Fairfield"} {"General Motors","Detroit"} {"Intel","Santa Clara"} {"LG","Seoul"} {"Micron","Boise"} {"Microsoft","Redmond"} {"Nokia","Espoo"} {"Sabritas","Mexico City"} {"Samsung","Seoul"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (headquarter OR HQ) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular company is headquartered in a particular city'</description><freebaseID>u'[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/organization/organization/headquarters": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }]'</freebaseID><comment>u'Used to have mutexEx with hasOfficeInCity, but how could it have an HQ without an office?  rename:companyHeadquarteredInCity'</comment><relationName>u'agentHoldsSharesInCompany'</relationName><humanFormat>u'arg1 is a {shareholder} in the company arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentCollaboratesWithAgent'</generalizations><domain>u'agent'</domain><range>u'company'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentHierarchicallyAboveAgent agentHierarchicallyBelowAgent'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'companyHasShareholder'</inverse><seedInstances>u'{\u201cStandard Life Investments\u201d, \u201cRoyal Dutch Shell\u201d} {\u201cDeutsche Lufthansa AG\u201d, \u201cHapag-Lloyd AG\u201d} {\u201cVeba AG\u201d, \u201cHapag-Lloyd AG\u201d} {\u201cHamas\u201d, \u201cIslamic Charity Movement\u201d} {\u201cLakshmi Mittal\u201d, \u201cInternational Steel Group\u201d} {\u201cAffiliated Managers Group Inc.\u201d, \u201cAQR Capital Management\u201d} {\u201cToyota Motor\u201d, \u201cDenso\u201d} {\u201cLiberty Media Corp.\u201d, \u201cDirecTV\u201d} {\u201cEdward C. Johnson III\u201d, \u201cFMR Corp.\u201d} {\u201cAbigail P. Johnson\u201d, \u201cFMR Corp.\u201d} {\u201cDCC PLC\u201d, \u201cFyffes PLC\u201d} {\u201cDreyfus Funds\u201d, \u201cFyffes PLC\u201d} {\u201cThe Walt Disney Co.\u201d, \u201cHong Kong Disneyland\u201d} {\u201cWarburg Pincus\u201d, \u201cMBIA\u201d} {\u201cThe New York Times Co.\u201d, \u201cRed Sox\u201d} {\u201cGeneral Atlantic LLC\u201d, \u201cZagat\u201d} {\u201cNancy Peretsman\u201d, \u201cZagat\u201d} {\u201cNicholas Negroponte\u201d, \u201cZagat\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (shareholder OR stockholder OR investor) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Any organization, person, or geopolitical entity that holds shares (majority or otherwise) of the given company.'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'journalistWritesForPublication'</relationName><humanFormat>u'arg1 is a journalist that {writes for} the publication arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'worksFor'</generalizations><domain>u'journalist'</domain><range>u'publication'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Ron Cook","Rolling Stone"} {"Mark Madden","Rolling Stone"} {"Dave Anderson","Rolling Stone"} {"Ira Berkow","Rolling Stone"} {"Henry Schulman","Rolling Stone"}'</knownNegatives><inverse>u'publicationJournalist'</inverse><seedInstances>u' {"Ron Cook","Pittsburgh Post-Gazette"} {"Mark Madden","Pittsburgh Post-Gazette"} {"Dave Anderson","New York Times"} {"Ira Berkow","New York Times"} {"Henry Schulman","San Francisco Chronicle"} {"Susan Slusser","San Francisco Chronicle"} {"Bill Plaschke","LA Times"} {"T.J. Simers","LA Times"} {"Bill Dwyre","LA Times"} {"Harvey Araton","New York Times"} {"William C. Rhoden","New York Times"} {"George Vecsey","New York Times"} {"Bob Ford","Philadelphia Inquirer"} {"Phil Sheridan","Philadelphia Inquirer"} {"Teddy Greenstein","Chicago Tribune"} {"Chris Kuc","Chicago Tribune"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'newspaper magazine'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (writes OR write OR wrote OR written OR writing) for * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular journalist writes for a particular publication'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'personChargedWithCrime'</relationName><humanFormat>u'arg1 has been {charged with} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentParticipatedInEvent'</generalizations><domain>u'person'</domain><range>u'crimeOrCharge'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'crimeOrChargeOfPerson'</inverse><seedInstances>u"{\u201cAbdurrahman Wahid\u201d, \u201ccorruption\u201d} {\u201cUri Kelman\u201d, \u201ctrying to fraudulently obtain New Zealand passports\u201d} {\u201cHiram Monserrate\u201d, \u201cdomestic abuse\u201d} {\u201cHiram Monserrate\u201d, \u201csecond-degree assault\u201d} {\u201cOrly Taitz\u201d, \u201cabuse of privilege to practice law\u201d} {\u201cOrly Taitz\u201d, \u201cFivolous Lawsuit\u201d} {\u201cClive Davis\u201d, \u201cused company funds to pay for his son'sbar mitzvah\u201d} {\u201cArsene Wenger\u201d, \u201cimproper conduct\u201d} {\u201cArsene Wenger\u201d, \u201cbringing the game into disrepute\u201d} {\u201cLinda Hogan\u201d, \u201cThree counts of negligence\u201d} {\u201cGeorge Tiller\u201d, \u201cperforming illegal late-term abortions\u201d} {\u201cGeorge Tiller\u201d, \u201c30 misdemeanor counts\u201d} {\u201cDavid Coleman Headley\u201d, \u201c12 terrorism related charges\u201d} {\u201cAbdul Karim al-Khawinay\u201d, \u201cdefaming the president\u201d} {\u201cAbdul Rahim Noor\u201d, \u201cassault\u201d} {\u201cAbu Zubaydah\u201d, \u201cconspiracy to carry out terror attacks\u201d} {\u201cAlberto Gonzales\u201d, \u201cmisleading Congress\u201d} {\u201cDanny Glover\u201d, \u201ctrespassing\u201d} {\u201cJohnny Knoxville\u201d, \u201cfraud\u201d} {\u201cRemy Ma\u201d, \u201cassault\u201d}"</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u''</requiredForDomain><requiredForRange>u''</requiredForRange><queryString>u'arg1 * (charged OR convicted) * arg2'</queryString><editDate>u''</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Charges or crimes (alleged or convicted) of the given person'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012.  Also, domain could be criminal, but the definition of that category is too vauge at the moment for our needs here.'</comment><relationName>u'personLeadsGeopoliticalOrganization'</relationName><humanFormat>u'arg1 {leads} the geopolitical organization arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'personLeadsOrganization'</generalizations><domain>u'person'</domain><range>u'geopoliticalOrganization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'geopoliticalOrganizationLeadByPerson'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u''</requiredForDomain><requiredForRange>u''</requiredForRange><queryString>u''</queryString><editDate>u''</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'specifies that a particular person plays a leading role in a particular geopolitical organization (which includes the governments of countries)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'personLeadsCity'</relationName><humanFormat>u'arg1 is the {leader of} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personLeadsGeopoliticalOrganization'</generalizations><domain>u'politician'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityLeadByPerson'</inverse><seedInstances>u'{\u201cLuke Ravenstahl\u201d, \u201cPittsburgh\u201d} {\u201cMayor Michael Bloomberg\u201d, \u201cNew York City\u201d} {\u201cMichael Bear\u201d, \u201cCity of London\u201d} {\u201cMarta Vincenzi\u201d, \u201cGenoa\u201d} {\u201cCarolyn Goodman\u201d, \u201cVegas\u201d} {\u201cRob Ford\u201d, \u201cToronto\u201d} {\u201cMike Rawlings\u201d, \u201cDallas\u201d} {\u201cOlaf Scholz\u201d, \u201cHamburg\u201d} {\u201cSam Katz\u201d, \u201cWinnipeg\u201d} {\u201cKevin Johnson\u201d, \u201cSacramento\u201d} {\u201cMark L. Mallory\u201d, \u201cCincinnati\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u''</requiredForDomain><requiredForRange>u''</requiredForRange><queryString>u''</queryString><editDate>u''</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'specifies that a particular person is the leader (e.g. Mayor) of a particular city'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'personLeadsCountry'</relationName><humanFormat>u'arg1 is the {leader of} the country arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'agentRelatedToLocation proxyFor agentControls'</generalizations><domain>u'politician'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryLeadByPerson'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u''</requiredForDomain><requiredForRange>u''</requiredForRange><queryString>u'arg2 * leader * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular person is the leader of a particular country'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'leagueStadiums'</relationName><humanFormat>u'the sports leage arg1 {uses} the venue arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'sportsLeague'</domain><range>u'stadiumOrEventVenue'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'organizationHasBuilding'</mutexExceptions><knownNegatives>u'{"NFL","Minute Maid Park"} {"NFL","Air Canada Centre"} {"NBA","RBC Center"} {"MLB","Gillette Stadium"} {"MLB","Qualcomm Stadium"}'</knownNegatives><inverse>u'stadiumHomeToLeague'</inverse><seedInstances>u'{"MLB","PNC Park"} {"NFL","Heinz Field"} {"MLB","Minute Maid Park"} {"NHL","Air Canada Centre"} {"NHL","RBC Center"} {"NFL","Gillette Stadium"} {"NFL","Qualcomm Stadium"} {"NASCAR","Bowman Gray Stadium"} {"NASCAR","Columbus Motor Speedway"} {"NHL","Mellon Arena"} {"NFL","Lucas Oil Stadium"} {"MLB","Wrigley Field"} {"MLB","Safeco Field"} {"NBA","Madison Square Garden"} {"NBA","United Center"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular league uses a particular venue for its games'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports league", "/sports/sports league/teams": [{ "/sports/sports league participation/team": [{ "/sports/sports team/arena stadium": [{ "name": null, "/common/topic/alias": [] }] }] }] }]'</freebaseID><comment>u'rename:leagueUsesStadium'</comment><relationName>u'mlAreaExpert'</relationName><humanFormat>u'arg2 is an {expert in} the machine-learning area of arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'mlArea'</domain><range>u'mlAuthor'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"Neural Networks", "Jaime Callan"} {"Artificial Intelligence", "Sunita Sarawagi"} {"Statistical Learning Theory", "William Cohen"} {"Graphical Models", "Jamie Callan"} {"Neural Networks" ,"S . Sudarshan"}'</knownNegatives><inverse>u'mlAuthorExpertIn'</inverse><seedInstances>u'{"Neural Networks", "Tom Mitchell"} {"Information Extraction","Andrew McCallum"} {"Bayesian Inference","Michael Jordan"} {"Conditional Random Fields","William Cohen"} {"Graphical Models","Daphne Koller"} {"statistical machine learning","Yoram Singer"} {"Graphical Models","Nir Friedman"} {"Artificial Intelligence","Sebastian Thrun"} {"Graphical Models","David Heckerman"} {"Conditional Random Fields","Sunita Sarawagi"} {"statistical machine learning","John Lafferty"} {"Neural Networks","Geoffrey Hinton"} {"artificial intelligence","Tom Dietterich"} {"Artificial Intelligence","Stuart Russell"} {"statistical learning theory","Peter Bartlett"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (expert OR expertise) * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'specifies that a particular ML author is an expert in a particular ML area'</description><freebaseID>u''</freebaseID><comment>u'rename:mlAreaHasExpert'</comment><relationName>u'mlAuthorOfSoftware'</relationName><humanFormat>u'arg1 is a machine-learning author who {wrote} the software arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentInvolvedWithItem, agentCreated'</generalizations><domain>u'mlAuthor'</domain><range>u'mlSoftware'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Sunita Sarawagi","Minorthird"} {"William Cohen","Weka"} {"Bruce Croft","libsvm"} {"Jamie Callan","datamold"} {"Tom Mitchell","dragon"}   '</knownNegatives><inverse>u'mlSoftwareAuthor'</inverse><seedInstances>u'{"William Cohen","Minorthird"} {"Mark Hall","Weka"} {"Chih-Chung Chang","libsvm"} {"Thorsten Joachims","SVMlight"} {"Sunita Sarawagi","datamold"} {"Sunita Sarawagi","ICube"} {"Jamie Callan","Lemur"} {"Jaime Callan","Indri"} {"Jeff Bilmes","GMTK"} {"Andrew McCallum", "MALLET"} {"Ian H . Witten", "Weka"} {"Eibe Frank", "Weka"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (author OR authors OR authored OR authoring OR create OR creates OR created OR creating OR write OR writes OR wrote OR written OR writing) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies ML software that is written by a particular ML author'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'musicianPlaysInstrument'</relationName><humanFormat>u'arg1 is a musician who {plays} the arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentInvolvedWithItem'</generalizations><domain>u'musician'</domain><range>u'musicInstrument'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"John Lennon","drums"} {"Paul McCartney","cello"} {"Keith Richards","bass"} {"Yo Yo Ma", "electric guitar"} {"Joshua Bell","flute"}'</knownNegatives><inverse>u'instrumentPlayedByMusician'</inverse><seedInstances>u' {"John Lennon","guitar"} {"Paul McCartney","bass"} {"Keith Richards","electric guitar"} {"Sufjan Stevens","guitar"} {"Sufjan Stevens","banjo"} {"Elliott Smith","guitar"} {"Yo Yo Ma", "cello"} {"Joshua Bell","violin"} {"Bob Dylan","harmonica"} {"Bob Dylan","guitar"} {"Elvis Presley","guitar"} {"Ray Charles","piano"} {"Elton John","piano"} {"Feist","guitar"} {"B.B. King","guitar"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (plays OR play OR played OR playing) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a musical instrument is played by a paritcular musician'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/music/group member", "/music/group member/instruments played": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u''</comment><relationName>u'musicArtistGenre'</relationName><humanFormat>u'arg1 is a musician in the {genre} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'musicArtist'</domain><range>u'musicGenre'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u' {"Yo Yo Ma","rock"} {"Joshua Bell","punk"} {"Beatles","classical"} {"Outkast","jazz"} {"Bob Dylan","soul"}'</knownNegatives><inverse>u'musicGenreArtist'</inverse><seedInstances>u' {"Yo Yo Ma","classical"} {"Joshua Bell","classical"} {"Beatles","rock"} {"Beatles","pop"} {"Outkast","hip-hop"} {"Outkast","rap"} {"Metallica","heavy metal"} {"Green Day","punk"} {"Elliott Smith","folk"} {"Bob Dylan","folk"} {"Bob Dylan","rock"} {"Nirvana","punk"} {"Pedro the Lion","indie"} {"Jackson Five","soul"} {"Jackson Five","pop"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (musician OR musicians OR artist OR artists) * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a musicArtist performs in a particular genre'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/music/artist", "/music/artist/genre": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u''</comment><relationName>u'musicianInMusicArtist'</relationName><humanFormat>u'arg1 is a musician who is {part of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'musician'</domain><range>u'musicArtist'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'worksFor'</mutexExceptions><knownNegatives>u' {"John Lennon","Rolling Stones"} {"Paul McCartney","Lemonheads"} {"Thom Yorke","Beatles"} {"Mick Jagger","Beatles"} {"Keith Richards","Beatles"}'</knownNegatives><inverse>u'musicArtistMusician'</inverse><seedInstances>u'{"John Lennon","Beatles"} {"Paul McCartney","Beatles"} {"Thom Yorke","Radiohead"} {"Evan Dando","Lemonheads"} {"Mick Jagger","Rolling Stones"} {"Keith Richards","Rolling Stones"} {"Kurt Cobain","Nirvana"} {"Dave Grohl","Nirvana"} {"Dave Grohl","Foo Fighters"} {"Bono","U2"} {"David Bazan","Pedro the Lion"} {"Michael Jackson","Jackson Five"} {"Robert Plant","Led Zepplin"} {"Jimmy Page","Led Zepplin"} {"James Hetfield","Metallica"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular musician has performed as particular musicArtist'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/music/group member", "/music/group member/membership": [{ "/music/group membership/group": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u''</comment><relationName>u'newspaperInCity'</relationName><humanFormat>u'arg1 is a newspaper {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentActsInLocation'</generalizations><domain>u'newspaper'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'headquarteredIn'</mutexExceptions><knownNegatives>u' {"Pittsburgh Post-Gazette","New York"} {"New York Times","Chicago"} {"London Times","Houston"} {"Washington Post","SanFrancisco"} {"San Francisco Chronicle","London"}'</knownNegatives><inverse>u'cityNewspaper'</inverse><seedInstances>u'{"Pittsburgh Post-Gazette","Pittsburgh"} {"Pittsburgh Tribune","Pittsburgh"} {"New York Times","New York"} {"London Times","London"} {"Washington Post","Washington DC"} {"San Francisco Chronicle","San Francisco"} {"LA Times","Los Angeles"} {"Philadelphia Enquirer","Philadelphia"} {"New York Post","New York"} {"Herald Tribune","Sarasota"} {"Wall Street Journal","New York"} {"Chicago Tribune","Chicago"} {"Financial Times","London"} {"Toronto Star","Toronto"} {"International Herald Tribune","Paris"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies the city in which a particular newspaper is headquartered'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/book/newspaper", "/book/newspaper/headquarters": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u'Should we change this to nrOfValues=any and capture all places of circulation instead?'</comment><relationName>u'personWrittenAboutInPublication'</relationName><humanFormat>u'arg1 is a person who was {written about in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'publication'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'publicationWritesAbout'</inverse><seedInstances>u'{"John Lennon","Rolling Stone"} {"Mick Jagger","Rolling Stone"} {"Sufjan Stevens","Rolling Stone"} {"Alex Rodriguez","Sports Illustrated"} {"Alexander Ovechkin","Sports Illustrated"} {"Allen Iverson","Sports Illustrated"} {"Eric Schmidt","New York Times"} {"Jeff Bezos","New York Times"} {"Bill Gates","New York Times"} {"Barack Obama","Economist"} {"Hillary Clinton","Economist"} {"Jimmy Carter","Economist"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * article * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular person has been written about in a particular publication'</description><freebaseID>u'none'</freebaseID><comment>u'Maybe this should generalize to agentInteractsWithAgent?'</comment><relationName>u'politicianHoldsOffice'</relationName><humanFormat>u'arg1 is a politician who {holds the office of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'politician'</domain><range>u'politicalOffice'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"Hillary Clinton","President"}{"John McCain","President"}'</knownNegatives><inverse>u'officeHeldByPolitician'</inverse><seedInstances>u'{"Bill Clinton","President"}{"Barack Obama","President"}{"George Bush","President"}{"John Murtha","congressman"}{"Rick Santorum","senator"}{"Hillary Clinton","Senator"}{"Arlen Spector","senator"}{"Nancy Pelosi","congresswoman"}{"Clarence Thomas","Supreme Court Justice"}{"Arnold Schwarzenegger","Governor"}{"Michael Bloomberg","mayor"}{"Antonio Villaraigosa","Mayor"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular politician holds a particular office'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/government/politician", "/government/politician/government positions held": [{ "/government/government position held/office position or title": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u'freebase uses a CVT for this'</comment><relationName>u'producesProduct'</relationName><humanFormat>u'arg1 is a company that {produces} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentInvolvedWithItem, agentCreated'</generalizations><domain>u'company'</domain><range>u'product'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentWorkedOnDrug'</mutexExceptions><knownNegatives>u'{"Activision","PowerShot"} {"Clark","Roomba"} {"Dell","Prius"} {"Ford","Lipitor"} {"Microsoft","Google"}'</knownNegatives><inverse>u'producedBy'</inverse><seedInstances>u'{"Activision","Guitar Hero"} {"Adobe","Photoshop"} {"Apple","iPod"} {"Canon","Rebel"} {"Colgate-Palmolive Company","Colgate"} {"Dell","Latitude"} {"Ford","Explorer"} {"Frito-Lay","Cheetos"} {"Honda","Accord"} {"iRobot","Roomba"} {"Microsoft","Xbox"} {"Nintendo","Wii"} {"PepsiCo","Mountain Dew"} {"Pfizer","Lipitor"} {"Toyota","Prius"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg2 * produced by * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular compnay produces a particular product'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/business/consumer company", "/business/consumer company/products": [{ "/business/company product relationship/consumer product": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u''</comment><relationName>u'producesProductType'</relationName><humanFormat>u'arg2 is the kind of product {produced by} the company arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentInvolvedWithItem, agentCreated'</generalizations><domain>u'company'</domain><range>u'item'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentWorkedOnDrug'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'typeProducedBy'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (produce OR produces OR produced OR producing) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular compnay produces a particular type of product'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'productInstanceOf'</relationName><humanFormat>u'arg1 is a product that is a {kind of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'specializationOf'</generalizations><domain>u'product'</domain><range>u'item'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Accord","analgesic"} {"Clorox","deodorant"} {"Hoover","spreadsheet"} {"Illustrator","stapler"} {"Listerine","computer"}'</knownNegatives><inverse>u'productInstances'</inverse><seedInstances>u'{"Civic","car"} {"Cheer","laundry detergent"} {"Clorox","bleach"} {"Colgate","toothpaste"} {"Dell Latitude","laptop"} {"Glad","plastic wrap"} {"Adobe Illustrator","software"} {"Kleenex","tissue"} {"Lipitor","drug"} {"Listerine","mouthwash"} {"Microsoft Excel","spreadsheet"} {"Microsoft Office","software"} {"Microsoft Windows","operating system"} {"Old Spice","deodorant"} {"Tylenol","analgesic"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (is OR are) * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular product is a particular kind of thing'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'radioStationInCity'</relationName><humanFormat>u'arg1 is a radio station {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasOfficeInCity'</generalizations><domain>u'radioStation'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'headquarteredIn'</mutexExceptions><knownNegatives>u' {"WBUR","Chicago"} {"WGBH","New York"} {"WGN","Lexington"} {"WBEZ","Los Angeles"} {"93.9 Lite FM","Pittsburgh"} {"106.9 The Point","Philadelphia"} {"KSBJ","Denver"} {"WFYI","Boston"} {"WIBC","Chicago"} {"WORD-FM","Atlanta"} {"KDKA","St. Louis"} {"WDVE","Orlando"} {"KEXP","Portland"} {"KUBE-FM","San Fransisco"} {"KMPS-FM","Minneapolis"}'</knownNegatives><inverse>u'cityRadioStation'</inverse><seedInstances>u' {"WBUR","Boston"} {"WGBH","Boston"} {"WGN","Chicago"} {"WBEZ","Chicago"} {"93.9 Lite FM","Chicago"} {"106.9 The Point","Houston"} {"KSBJ","Houston"} {"WFYI","Indianapolis"} {"WIBC","Indianapolis"} {"WORD-FM","Pittsburgh"} {"KDKA","Pittsburgh"} {"WDVE","Pittsburgh"} {"KEXP","Seattle"} {"KUBE-FM","Seattle"} {"KMPS-FM","Seattle"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular radio station is headquarted in a particular city'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/broadcast/radio station", "/broadcast/broadcast/area served": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u''</comment><relationName>u'sportsGameAwayTeam'</relationName><humanFormat>u'arg2 was the {away team in} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'sportsGameTeam'</generalizations><domain>u'sportsGame'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'sportsGameWinner sportsGameLoser '</mutexExceptions><knownNegatives>u'{"1948 World Series","Indians"} {"1997 World Series","Florida Marlins"} {"2002 World Cup","South Korea"} {"Super Bowl XXXIV","Tennessee Titans"} {"2001 Super Bowl","Patriots"} {"2005 Ashes series", "England"} {"2005 Orange Bowl","Oklahoma"} {"2009 Fiesta Bowl","Texas"}'</knownNegatives><inverse>u'awayTeamInGame'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * away game * arg1'</queryString><editDate>u'2010-07-05'</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular team is the away team in a particular sportsGame.'</description><freebaseID>u''</freebaseID><comment>u"Couldn't find seeds in all-pairs"</comment><relationName>u'sportsGameHomeTeam'</relationName><humanFormat>u'arg2 was the {home team in} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'sportsGameTeam'</generalizations><domain>u'sportsGame'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'sportsGameWinner sportsGameLoser '</mutexExceptions><knownNegatives>u'{"1948 World Series","Indians"} {"1997 World Series","Florida Marlins"} {"2002 World Cup","South Korea"} {"Super Bowl XXXIV","Tennessee Titans"} {"2001 Super Bowl","Patriots"} {"2005 Ashes series", "England"} {"2005 Orange Bowl","Oklahoma"} {"2009 Fiesta Bowl","Texas"}'</knownNegatives><inverse>u'homeTeamInGame'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * home team * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular team is the home team in a particular sportsGame'</description><freebaseID>u''</freebaseID><comment>u"Couln't find seeds in all-pairs"</comment><relationName>u'sportsGameLoser'</relationName><humanFormat>u'arg2 was the {looser of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'sportsGameTeam'</generalizations><domain>u'sportsGame'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'sportsGameAwayTeam sportsGameHomeTeam '</mutexExceptions><knownNegatives>u' {"2001 Super Bowl","Baltimore Ravens"} {"2006 Orange Bowl","Penn State"} {"2002 Stanley Cup","Detroit Red Wings"} {"1999 World Series","New York Yankees"} {"2006 NCAA Basketball Championship","Florida Gators"} {"2000 European Cup","France"} {"2002 World Cup","Brazil"}'</knownNegatives><inverse>u'loserInGame'</inverse><seedInstances>u' {"2001 Super Bowl","New York Giants"} {"2006 Orange Bowl","Florida State"} {"1999 World Series","Atlanta Braves"} {"2006 NCAA Basketball Championship","UCLA"} {"2000 European Cup","Italy"} {"2002 World Cup","Germany"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (loses OR lose OR lost OR losing) * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular team that played in a particular sportsGame was the loser thereof.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports championship event", "/sports/sports championship event/runner up": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'Freebase only has specific game information for championship events, but there are enough of them to warrant the mapping, I think'</comment><relationName>u'sportsGameLoserScore'</relationName><humanFormat>u'the {loosing score of} arg1 was arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sportsGame'</domain><range>u'nonNegInteger'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"2001 Super Bowl","34"} {"2006 Sugar Bowl","38"} {"2006 Orange Bowl", "26"} {"2002 Stanley Cup","4"} {"Super Bowl XVII","27"} {"Super Bowl XXXVII", "48"} {"Super Bowl XLIII", "27"}'</knownNegatives><inverse>u'losingScoreOfSportsGame'</inverse><seedInstances>u'{"Super Bowl XLIII", "23"} {"Super Bowl XXXVII", "21"} {"Super Bowl XVII", "17"} {"2002 Stanley Cup", "1"} {"2006 Orange Bowl", "23"} {"2006 Sugar Bowl", "35"} {"2001 Super Bowl", "7"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (lose OR loses OR lost OR losing OR loser) * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u''</author><curator>u''</curator><description>u'Specifies the score with which the loosing team in a particular sportsGame lost.'</description><freebaseID>u''</freebaseID><comment>u'Changed for use with DARPA NFL ontology'</comment><relationName>u'sportsGameSport'</relationName><humanFormat>u'the sport arg2 was {played at} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sportsGame'</domain><range>u'sport'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u' {"2001 Super Bowl","soccer"} {"2002 Stanley Cup","basketball"} {"1999 World Series","golf"} {"2006 NCAA Basketball Championship","hockey"} {"2000 Euro Cup","tennis"}'</knownNegatives><inverse>u'sportSportsGameExample'</inverse><seedInstances>u' {"2001 Super Bowl","football"} {"2006 Sugar Bowl","football"} {"2002 Stanley Cup","hockey"} {"1999 World Series","baseball"} {"2006  Basketball Championship","basketball"} {"2000 Euro Cup","soccer"} {"2002 World Cup","soccer"} {"2005 U.S. Open","tennis"} {"1998 Wimbledon Championship","tennis"} {"2004 PGA Tour","golf"} {"2003 British Open","golf"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * game * such as * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies the sport that was played in a particular sportsGame.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports championship event", "/sports/sports championship event/champion": [{ "/sports/sports team/sport": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u''</comment><relationName>u'sportsGameWinner'</relationName><humanFormat>u'the sports team arg2 was the {winner of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'sportsGameTeam'</generalizations><domain>u'sportsGame'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'sportsGameAwayTeam sportsGameHomeTeam '</mutexExceptions><knownNegatives>u' {"2001 Super Bowl","New York Giants"} {"2006 Orange Bowl","Florida State"} {"1999 World Series","Atlanta Braves"} {"2006 NCAA Basketball Championship","UCLA"} {"2000 European Cup","Italy"} {"2002 World Cup","Germany"}'</knownNegatives><inverse>u'winnerInGame'</inverse><seedInstances>u' {"2001 Super Bowl","Baltimore Ravens"} {"2006 Orange Bowl","Penn State"} {"2002 Stanley Cup","Detroit Red Wings"} {"1999 World Series","New York Yankees"} {"2006 NCAA Basketball Championship","Florida Gators"} {"2000 European Cup","France"} {"2002 World Cup","Brazil"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (win OR wins OR won OR winning OR winner) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular team that played in a particular sportsGame was the winner thereof.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports championship event", "/sports/sports championship event/champion": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u''</comment><relationName>u'sportsGameWinnerScore'</relationName><humanFormat>u'arg2 was the {winning score in} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sportsGame'</domain><range>u'nonNegInteger'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"Super Bowl XLIII", "23"} {"Super Bowl XXXVII", "21"} {"Super Bowl XVII", "17"} {"2002 Stanley Cup", "1"} {"2006 Orange Bowl", "23"} {"2006 Sugar Bowl", "35"} {"2001 Super Bowl", "7"}'</knownNegatives><inverse>u'winningScoreOfSportsGame'</inverse><seedInstances>u'{"2001 Super Bowl","34"} {"2006 Sugar Bowl","38"} {"2006 Orange Bowl", "26"} {"2002 Stanley Cup","4"} {"Super Bowl XVII","27"} {"Super Bowl XXXVII", "48"} {"Super Bowl XLIII", "27"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (win OR wins OR won OR winning OR winner) * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u''</author><curator>u''</curator><description>u'Specifies the score with which the winning team in a particular sportsGame lost.'</description><freebaseID>u''</freebaseID><comment>u'Changed for use with DARPA NFL ontology'</comment><relationName>u'sportUsesEquipment'</relationName><humanFormat>u'arg2 is a kind of {equipment for} the sport arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sport'</domain><range>u'sportsEquipment'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"football","bat"} {"tennis","puck"} {"baseball","backboard"} {"football","racket"} {"basketball","shoulder pads"}'</knownNegatives><inverse>u'equipmentUsedBySport'</inverse><seedInstances>u'{"baseball","bat"} {"hockey","puck"} {"basketball","backboard"} {"tennis","racket"} {"football","shoulder pads"} {"football","football"} {"badminton","shuttlecock"} {"golf","golf ball"} {"golf","driver"} {"baseball","glove"} {"baseball","mitt"} {"basketball","basket"} {"football","helmet"} {"golf","putter"} {"soccer","soccer ball"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * used (in OR at OR by) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies equipment that is used by a particular sport.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sport", "/sports/sport/related equipment": [{ "name": null, "/common/topic/alias": [], "type": "/sports/sports equipment" }] }]'</freebaseID><comment>u''</comment><relationName>u'sportUsesStadium'</relationName><humanFormat>u'arg1 is a sport {played in} the venue arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sport'</domain><range>u'stadiumOrEventVenue'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"football","PNC Park"} {"basketball", "RBC Center"} {"baseball","Heinz Field"} {"football","Arthur Ashe Stadium"} {"baseball","TD Banknorth Garden"}'</knownNegatives><inverse>u'stadiumHomeToSport'</inverse><seedInstances>u'{"baseball","PNC Park"} {"hockey", "RBC Center"} {"football","Heinz Field"} {"tennis","Arthur Ashe Stadium"} {"basketball","TD Banknorth Garden"} {"baseball","Busch Stadium"} {"football","Soldier Field"} {"soccer","Wembley Stadium"} {"basketball","Wachovia Center"} {"hockey","Mellon Arena"} {"football","Giant Stadium"} {"basketball","Madison Square Garden"} {"tennis","Centre Court"} {"baseball","Coors Field"} {"basketball","Bradley Center"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR on OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies that a particular sport is played in a particular venue'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sport", "/sports/sport/teams": [{ "/sports/sports team/arena stadium": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u''</comment><relationName>u'stadiumLocatedInCity'</relationName><humanFormat>u'arg1 is a stadium or event venue {located in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'buildingLocatedInCity attractionOfCity proxyOf'</generalizations><domain>u'stadiumOrEventVenue'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"PNC Park","Chicago"} {"Wrigley Field","New York"} {"Yankee Stadium","Boston"} {"Wembley Stadium","Paris"} {"TD Banknorth Garden","Philadelphia"}'</knownNegatives><inverse>u'cityStadiums'</inverse><seedInstances>u'{"PNC Park","Pittsburgh"} {"Wrigley Field","Chicago"} {"Yankee Stadium","New York City"} {"Wembley Stadium","London"} {"TD Banknorth Garden","Boston"} {"Minute Maid Park","Houston"} {"Bradley Center","Milwaukee"} {"Wachovia Center","Philadelphia"} {"Air Canada Centre","Toronto"} {"Progressive Field","Cleveland"} {"Coors Field","Denver"} {"Lambeau Field","Green Bay"} {"Qualcomm Stadium","San Diego"} {"Reliant Stadium","Houston"} {"American Airlines Center","Dallas"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The city where a stadium is located'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports facility", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u'rename to stadiumOrEventVenueLocatedInCity'</comment><relationName>u'stateHasCapital'</relationName><humanFormat>u'arg2 is the {capital city of} the state or province arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'stateContainsCity proxyOf'</generalizations><domain>u'stateOrProvince'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Philadephia","Pennsylvania"} {"Pittsburgh","Pennsylvania"} {"Boston","Massachusetts"} {"Dallas","Texas"} {"Chicago","Illinois"}'</knownNegatives><inverse>u'cityCapitalOfState'</inverse><seedInstances>u'{"Alabama","Montgomery"} {"Ohio","Columbus"} {"Wyoming","Cheyenne"} {"Virginia","Richmond"} {"Michigan","Lansing"} {"Illinois","Springfield"} {"Kansas","Topeka"} {"Baja California","Mexicali"} {"Hidalgo","Pachuca"} {"Quintana Roo","Chetumal"} {"Ontario","Toronto"} {"Manitoba","Winnipeg"} {"Alberta","Edmonton"} {"Assam","Dispur"} {"Goa","Panaji"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * capital of * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The capital city of a state, where the main governing apparatus is located.'</description><freebaseID>u''</freebaseID><comment>u'rename to stateOrProvinceHasCapitalCity'</comment><relationName>u'stateLocatedInCountry'</relationName><humanFormat>u'arg1 is a sate or province {located in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'stateLocatedInGeopoliticalLocation'</generalizations><domain>u'stateOrProvince'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Pennsylvania","New England"} {"North Carolina","Canada"} {"Ontario","United States"} {"Illinois","Canada"} {"Goa","United States"} {"Karnataka","Brazil"}'</knownNegatives><inverse>u'countryStates'</inverse><seedInstances>u'{"Pennsylvania","USA"} {"North Carolina","United States"} {"Ontario","Canada"} {"Illinois","United States"} {"Goa","India"} {"Karnataka","India"} {"Florida","United States"} {"British Columbia","Canada"} {"Texas","United States"} {"Arizona","United States"} {"Baja California","Mexico"} {"Hidalgo","Mexico"} {"Nova Scotia","Canada"} {"Idaho","United States"} {"Indiana","United States"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The country which the state or province is a part of.'</description><freebaseID>u''</freebaseID><comment>u'rename to stateOrProvinceLocatedInCountry'</comment><relationName>u'isMultipleOf'</relationName><humanFormat>u'arg1 refers to {more than one} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'mutualProxyFor'</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{\u201cmens\u201d \u201cman\u201d} {\u201cgooses\u201d \u201cgoose\u201d} {\u201ccheese\u201d \u201cchee\u201d} {\u201cwaters\u201d \u201cwater\u201d} {\u201cmouses\u201d \u201cmouse\u201d} {\u201cwomans\u201d \u201cwoman\u201d}'</knownNegatives><inverse>u'isOneOccurrenceOf'</inverse><seedInstances>u'{\u201chamsters\u201d, \u201chamster\u201d} {\u201cclocks\u201d, \u201cclock\u201d} {\u201cmurder\u201d, \u201ccrow\u201d} {\u201cgaggle\u201d, \u201cgoose\u201d} {\u201cflock\u201d \u201cbird\u201d} {\u201cflock\u201d \u201csheep\u201d} {\u201cmustards\u201d \u201cmustard\u201d} {\u201cpeople\u201d \u201cperson\u201d} {\u201cattorneys general\u201d \u201cattorney general\u201d} {\u201cmice\u201d \u201cmouse\u201d} {\u201cladies\u201d \u201clady\u201d} {\u201cgentlemen\u201d \u201cgentleman\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-09-06'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Specifies the way in which a grouping of individual somethings can be referred to, including but not limited to relating the plural form to the singular.'</description><freebaseID>u''</freebaseID><comment>u'Added after a suggestion that NELL should learn to relate singluar and plural forms.  Because this relation operates between concepts, we can only approximate here.'</comment><relationName>u'synonymFor'</relationName><humanFormat>u'arg1 is a {synonym for} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'mutualProxyFor'</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"City of Brotherly Love", "Chicago"} {"Big Apple", "Crazy Legs"} {"Charlie Hustle", "Richard Nixon"} {"Honest Abe", "Apple Inc"} {"Buffalo Bill", "Michael Jackson"}'</knownNegatives><inverse>u'synonymFor'</inverse><seedInstances>u' {"City of Brotherly Love", "Philadelphia"} {"Windy City", "Chicago"} {"Big Apple", "New York City"} {"NYC", "New York City"} {"City of Angels", "Los Angeles"} {"Apple Computer", "Apple Inc"}{"PM","private message"} {"SVN","Subversion"} {"Union Flag","Union Jack"} {"Web client","browser"} {"Armistice Day","Remembrance Day"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-07-12'</editDate><author>u''</author><curator>u''</curator><description>u'Two strings are synonyms if both of them frequently refer to the same real-world concept in text.'</description><freebaseID>u''</freebaseID><comment>u'A few more seeds to help CPL.  These all come from the same "is also known as" pattern, so if we need more seeds then we should probably start by thinking up some other likely patterns.'</comment><relationName>u'teamHomeStadium'</relationName><humanFormat>u'arg2 is the {home venue for} the sports team arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'sportsTeam'</domain><range>u'stadiumOrEventVenue'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'organizationHasBuilding'</mutexExceptions><knownNegatives>u'{"Pittsburgh Steelers","PNC Park"} {"Mets","Yankee Stadium"} {"Pirates","Mellon Arena"} {"White Sox", "Wrigley Field"} {"Boston Red Sox","TD Banknorth Garden"}'</knownNegatives><inverse>u'stadiumHomeTeam'</inverse><seedInstances>u'{"Pittsburgh Pirates","PNC Park"} {"New York Yankees","Yankee Stadium"} {"Pittsburgh Penguins","Mellon Arena"} {"Chicago Cubs", "Wrigley Field"} {"Boston Celtics","TD Banknorth Garden"} {"Chicago Bears","Soldier Field"} {"Fighting Illini","Memorial Stadium"} {"Portland Trail Blazers","Rose Garden"} {"Los Angeles Lakers","Staples Center"} {"Houston Rockets","Toyota Center"} {"Kansas City Royals","Kauffman Stadium"} {"Cincinnati Reds","Great American Ball Park"} {"Green Bay Packers","Lambeau Field"} {"Atlanta Falcons","Georgia Dome"} {"San Diego Chargers","Qualcomm Stadium"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * home to * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The stadium or other sporting venue which a team designates as its "home." Typically, a large percentage of the team\'s games occur in this location.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/arena stadium": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'rename to sportsTeamHomeStadiumOrEventVenue'</comment><relationName>u'teammate'</relationName><humanFormat>u'arg1 and arg2 are {teammates}'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentCollaboratesWithAgent'</generalizations><domain>u'athlete'</domain><range>u'athlete'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Brett Favre","Peyton Manning"} {"Dwyane Wade","LeBron James"} {"Dwyane Wade","Paul Pierce"} {"Peyton Manning","Brett Favre"} {"Peyton Manning","Eli Manning"}'</knownNegatives><inverse>u'teammate'</inverse><seedInstances>u'{"Ben Roethlisberger","Willie Parker"} {"Derek Jeter","Johnny Damon"} {"Dwyane Wade","Michael Beasley"} {"Dwyane Wade","Shawn Marion"} {"Evgeni Malkin","Jordan Staal"} {"Jason Giambi","Derek Jeter"} {"Jason Giambi","Johnny Damon"} {"Jason Varitek","Tim Wakefield"} {"Paul Pierce","Kevin Garnett"} {"Paul Pierce","Ray Allen"} {"Peyton Manning","Dallas Clark"} {"Peyton Manning","Joseph Addai"} {"Ray Allen","Kevin Garnett"} {"Sidney Crosby","Evgeni Malkin"} {"Troy Polamalu","Larry Foote"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (with OR and)  * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Two athletes are teammates if they play on the same team.'</description><freebaseID>u''</freebaseID><comment>u'rename to athleteTeammateOfAthlete'</comment><relationName>u'teamPlaysAgainstTeam'</relationName><humanFormat>u'arg1 is a sports team that {plays against} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentCompetesWithAgent'</generalizations><domain>u'sportsTeam'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Astros","Texans"} {"Blackhawks","Bulls"} {"Boston Celtics","Boston Bruins"} {"Chicago Bears","Chicago Cubs"}  {"White Sox","Steelers"}'</knownNegatives><inverse>u'teamPlaysAgainstTeam'</inverse><seedInstances>u'{"Pittsburgh Steelers","Baltimore Ravens"} {"Astros","Devil Rays"} {"Blackhawks","Penguins"} {"Boston Celtics","Chicago Bulls"} {"Brewers","Cubs"} {"Browns","Steelers"} {"Capitals","Red Wings"} {"Chicago Bears","Green Bay Packers"} {"Chicago Bulls","Detroit Pistons"} {"Chicago Fire","Columbus Crew"} {"Chicago White Sox","Detroit Tigers"} {"Cleveland Cavaliers","Miami Heat"} {"Colts","Patriots"} {"Crew","Revolution"} {"Derby County","Manchester United"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * against * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Teams that play against each other competitively'</description><freebaseID>u''</freebaseID><comment>u'rename to sportsTeamPlaysAgainstSportsTeam'</comment><relationName>u'teamPlaysInCity'</relationName><humanFormat>u'arg2 is the {home city of} the sports team arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation proxyOf'</generalizations><domain>u'sportsTeam'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Yankees","Boston"} {"Celtics","New York"} {"Steelers","Baltimore"} {"Bears","Green Bay"} {"Cubs","Minnesota"}'</knownNegatives><inverse>u'citySportsTeams'</inverse><seedInstances>u'{"Astros","Houston"} {"Blackhawks","Chicago"} {"Boston Celtics","Boston"} {"Brewers","Milwaukee"} {"Browns","Cleveland"} {"Capitals","Washington"} {"Colts","Indianapolis"} {"Devil Rays","Tampa Bay"} {"Hornets","Charlotte"} {"Magic","Orlando"}  {"Mavericks","Dallas"} {"Pittsburgh Steelers","Pittsburgh"} {"Red Wings","Detroit"} {"San Francisco Giants","San Francisco"} {"Tampa Bay Lightning","Tampa Bay"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * home to * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The home city of a sports team, typically a location where the team frequently competes.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/location": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u'rename to sportsTeamPlaysInCity'</comment><relationName>u'teamPlaysInLeague'</relationName><humanFormat>u'arg1 is a sports team that {plays in} the league arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'subpartOfOrganization'</generalizations><domain>u'sportsTeam'</domain><range>u'sportsLeague'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Yankees","NBA"} {"Celtics","MLB"} {"Steelers","NHL"} {"Cubs","NFL"} {"Rockets","NFL"}'</knownNegatives><inverse>u'leagueTeams'</inverse><seedInstances>u'{"Yankees","MLB"} {"Pirates","MLB"} {"Spurs","NBA"} {"Penguins","NHL"} {"Red Wings","NHL"} {"Ravens","NFL"} {"Packers","NFL"} {"Bulls","NBA"} {"Celtics","NBA"} {"Brewers","MLB"} {"Cubs","MLB"} {"Hornets","NBA"} {"Blackhawks","NHL"} {"Red Sox","MLB"} {"Patriots","NFL"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The league that a team plays in.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/league": [{ "/sports/sports league participation/league": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u'rename to sportsTeamPlaysInSportsLeague'</comment><relationName>u'teamPlaysSport'</relationName><humanFormat>u'arg1 is a sports team that {plays} the sport arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sportsTeam'</domain><range>u'sport'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u' {"Derby County","baseball"} {"Giants","basketball"} {"Suns","football"} {"Penguins","basketball"} {"Pirates","football"}'</knownNegatives><inverse>u'sportTeam'</inverse><seedInstances>u'{"Astros","baseball"} {"Blackhawks","hockey"} {"Celtics","basketball"} {"Brewers","baseball"} {"Browns","football"} {"Capitals","hockey"} {"Bears","football"} {"Bulls","basketball"} {"Cavaliers","basketball"} {"Colts","football"} {"Los Angeles Lakers","basketball"} {"Magic","basketball"} {"Pirates","baseball"} {"Steelers","football"} {"Rangers","hockey"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * team * such as * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The sport that a team plays.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/sport": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'rename to sportsTeamPlaysSport'</comment><relationName>u'teamWonTrophy'</relationName><humanFormat>u'arg1 is a sports team that {won} the arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sportsTeam'</domain><range>u'awardTrophyTournament'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"Knicks","Super Bowl"} {"Bucks","NBA Championship"} {"Chargers","Super Bowl"} {"Falcons","Super Bowl"} {"Padres","World Series"}'</knownNegatives><inverse>u'trophyWonByTeam'</inverse><seedInstances>u'{"Steelers","Super Bowl"} {"Red Wings","Stanley Cup"} {"White Sox","World Series"} {"Celtics","NBA Championship"} {"Red Sox","World Series"} {"Marlins","World Series"} {"Lakers","NBA Championship"} {"Ducks","Stanley Cup"} {"Colts","Super Bowl"} {"Giants","Super Bowl"} {"Patriots","Super Bowl"} {"White Sox","American League Pennant"} {"Bulls","NBA Championship"} {"Spurs","NBA Championship"} {"Heat","NBA Championship"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (win OR wins OR won OR winning OR winner) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Trophies that a team has won'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/championships": [{ "/sports/sports championship event/championship": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u"The mapping to the Freebase concept is a little off, but it's close. Rename to sportsTeamWonAwardTrophyTournament"</comment><relationName>u'televisionStationAffiliatedWith'</relationName><humanFormat>u'arg1 is a {TV affiliate of} the network arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'subpartOfOrganization'</generalizations><domain>u'televisionStation'</domain><range>u'televisionNetwork'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"WHDH","Independent"} {"WGBH","ABC"} {"WBZ-TV","NBC"} {"WLS","Fox"} {"WFLD-TV","CBS"}'</knownNegatives><inverse>u'televisionCompanyAffiliate'</inverse><seedInstances>u'{"WHDH","NBC"} {"WGBH","PBS"} {"WBZ-TV","CBS"} {"WLS","ABC"} {"WFLD-TV","Fox"} {"WGN-TV","CW"} {"WNET","PBS"} {"WWOR","CW"} {"KONG","NBC"} {"KCPQ","Fox"} {"KVOS","Independent"} {"KDKA","CBS"} {"WXPI","NBC"} {"WTHR","NBC"} {"WISH TV","CBS"} {"KTRK","ABC"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (affiliated OR affiliates OR affiliate OR affiliating) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The network that a TV station gets its programming from'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/broadcast/tv station", "/broadcast/tv station/affiliations": [{ "/broadcast/tv affiliation duration/network": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u'Rename to televisionStationAffiliatedWithTelevisionNetwork'</comment><relationName>u'televisionStationInCity'</relationName><humanFormat>u'arg1 is a {TV station in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasOfficeInCity'</generalizations><domain>u'televisionStation'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'headquarteredIn'</mutexExceptions><knownNegatives>u' {"WHDH","New York"} {"WLS","Boston"} {"WNET","Chicago"} {"KONG","Pittsburgh"} {"WXPI","Seattle"}'</knownNegatives><inverse>u'cityTelevisionStation'</inverse><seedInstances>u'{"WHDH","Boston"} {"WGBH","Boston"} {"WBZ-TV","Boston"} {"WLS","Chicago"} {"WFLD-TV","Chicago"} {"WGN-TV","Chicago"} {"WNET","New York"} {"WWOR","New York"} {"KONG","Seattle"} {"KCPQ","Seattle"} {"KVOS","Seattle"} {"KDKA","Pittsburgh"} {"WPXI","Pittsburgh"} {"WTHR","Indianapolis"} {"WISH TV","Indianapolis"} {"KTRK","Houston"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The city where a TV station is located or broadcasts to.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/broadcast/tv station", "/broadcast/broadcast/area served": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u''</comment><relationName>u'visualArtistArtForm'</relationName><humanFormat>u'arg1 is a visual artist {in the field of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'visualArtist'</domain><range>u'visualArtForm'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u' {"Henry Moore", "painting"} {"Cindy Sherman", "drawing"} {"Leonardo da Vinci", "photography"} {"Edvard Munch", "sculpture"} {"Vincent van Gogh", "installation art"}'</knownNegatives><inverse>u'visualArtFormArtist'</inverse><seedInstances>u' {"Leonardo da Vinci", "painting"} {"Leonardo da Vinci", "drawing"} {"Pablo Picasso", "painting"} {"Pablo Picasso", "sculpture"} {"Vincent van Gogh", "painting"} {"Cindy Sherman", "photography"} {"Jasper Johns", "printmaking"} {"Andy Warhol", "printmaking"} {"Man Ray", "photography"} {"Man Ray", "collage"} {"Edgar Degas", "drawing"} {"Edvard Munch", "drawing"} {"Edvard Munch", "painting"} {"Damien Hirst", "installation art"} {"Henry Moore", "sculpture"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (of OR by) * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u"The type of visual art that a visualArtist produces. Also known as an artist's medium."</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/visual art/visual artist", "/visual art/visual artist/art forms": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'rename to visualArtistCreatesVisualArtForm'</comment><relationName>u'visualArtistArtMovement'</relationName><humanFormat>u'arg1 is {part of} the visual art movement arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'visualArtist'</domain><range>u'visualArtMovement'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u' {"Leonardo da Vinci","Surrealism"} {"Salvado Dali","Italian Renaissance"} {"Andy Warhol","Expressionism"} {"Claude Monet","Pop Art"} {"Vincent van Gogh","Cubism"}'</knownNegatives><inverse>u'visualArtMovementArtist'</inverse><seedInstances>u' {"Leonardo da Vinci","Italian Renaissance"} {"Pablo Picasso","Cubism"} {"Vincent van Gogh","Impressionism"} {"Vincent van Gogh","Expressionism"} {"Robert Rauschenberg","Postmodernism"} {"Frida Kahlo","Surrealism"} {"Claude Monet","Impressionism"} {"Ren\xe9 Magritte","Surrealism"} {"Andy Warhol","Pop Art"} {"Jasper Johns","Pop Art"} {"Jasper Johns","Neo-Dada"} {"Salvado Dali","Surrealism"} {"Salvado Dali","Cubism"} {"Man Ray","Dada"} {"Edgar Degas","Realism"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (inspired OR started OR created) * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'The art movements or styles that a visualArtist is associated with.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/visual art/visual artist", "/visual art/visual artist/associated periods or movements": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'rename to visualArtistPartOfVisualArtMovement'</comment><relationName>u'cityLiesOnRiver'</relationName><humanFormat>u'arg1 is a city that {lies on} the river arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atLocation'</generalizations><domain>u'city'</domain><range>u'river'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'locationLocatedWithinLocation'</mutexExceptions><knownNegatives>u'{"linz","hudson river"}{"San Francisco","Sacramento"}{"Pittsburgh","Hudson River"}'</knownNegatives><inverse>u'riverFlowsThroughCity'</inverse><seedInstances>u'{"linz","danube"}{"tikrit","tigris"}{"vienna","danube"}{"pisa","arno"}{"varanasi","ganges"}{"florence","arno"}{"drogheda","boyne"}{"tarragona","ebro"}{"nassau","lahn"}{"schaffhausen","rhine"}{"prague","elbe"}{"trier","moselle"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (in OR at OR of OR through) * arg1'</queryString><editDate>u'2010-06-17'</editDate><author>u'Tom Mitchell'</author><curator>u''</curator><description>u'Rivers that flow or through or immediately adjacent to the city.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/type/reflect/any reverse": [{ "link": "/geography/river/cities", "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'Freebase has the inverse relation: /geography/river/cities'</comment><relationName>u'animalPreysOn'</relationName><humanFormat>u'arg1 is an animal that {preys on} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentCompetesWithAgent'</generalizations><domain>u'animal'</domain><range>u'animal'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"rodents","pythons"}{"deer","bobcats"}{"rabbits","bobcats"}{"mice","copperheads"}{"crayfish","cranes"}{"insects","dragonflies"}{"mice","hawks"}{"chipmunks","weasels"}{"ants","anteaters"}{"birds","badgers"}{"rodents","barn owls"}{"ants","birds"}{"earthworms","birds"}{"birds","foxes"}'</knownNegatives><inverse>u'animalPredators'</inverse><seedInstances>u'{"pythons","rodents"}{"bobcats","deer"}{"bobcats","rabbits"}{"copperheads","mice"}{"cranes","crayfish"}{"dragonflies","insects"}{"hawks","mice"}{"praying mantids","insects"}{"weasels","chipmunks"}{"anteaters","ants"}{"badgers","birds"}{"barn owls","rodents"}{"birds","ants"}{"birds","earthworms"}{"foxes","birds"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (preys OR prey OR preyed OR preying) on * arg2'</queryString><editDate>u'2010-06-17'</editDate><author>u'Tom Mitchell'</author><curator>u''</curator><description>u'Animals that are hunted and eaten by this animal.'</description><freebaseID>u'none'</freebaseID><comment>u'rename to animalPreysOnAnimal'</comment><relationName>u'attractionOfCity'</relationName><humanFormat>u'arg1 is a tourist attraction {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'attraction'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'hotelInCity restaurantInCity airportInCity shoppingMallInCity trainStationInCity'</mutexExceptions><knownNegatives>u'{"circus maximus","constantinople"} {"trevi fountain","tel aviv"} {"the london eye","chicago"} {"national gallery","florence"} {"Tate Modern","dublin"} {"Statue of Liberty","washington"} {"Empire State Building","garden city"} {"rockerfeller center","london"} {"Staten Island Ferry", "trenton"}'</knownNegatives><inverse>u'cityAttractions'</inverse><seedInstances>u'{"Circus Maximus", "rome"},{"Arch of Titus","rome"},{"Colosseum","rome"},{"Trevi Fountain","rome"},{"Brandenburger Gate","rome"},{"Museum Island","Berlin"},{"Brookfield Zoo","chicago"},{"Lincoln Park Zoo", "chicago"},{"Millennium Park","chicago"},{"Union Station","chicago"},{"Empire State Building","new york"},{"Statue of Liberty","new york"},{"Grand Central Terminal","new york"},{"Rockefeller Center", "new york"},{" Ellis Island Immigration Museum","new york"},{" Staten Island Ferry","new york"},{"American Museum of Natural History","new york"},{"Central Park","new york"},{"British Museum","london"},{"Tate Modern","london"},{"National Gallery","london"},{"Natural History Museum","london"},{"The London Eye","london"},{"Science Museum","london"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-18'</editDate><author>u'Medhi (via Bryan)'</author><curator>u''</curator><description>u'The city that an attraction is located in'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/travel/tourist attraction", "/travel/tourist attraction/near travel destination": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u''</comment><relationName>u'museumInCity'</relationName><humanFormat>u'arg1 is a museum {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'attractionOfCity buildingLocatedInCity'</generalizations><domain>u'museum'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"The Andy Warhol Museum", "new york"} {"Toronto\'s Historic Museums", "berlin"} {"Bata Shoe Museum","los angeles"} {"Hollywood Wax Museum","tulsa"} {"Royal Ontario Museum","mexico city"} {"Carnegie Museum of Art","austin"} {"Austin Children Museum","houston"} {"Berlin Museum","moscow"} {"Boston Science Museum","springfield"}'</knownNegatives><inverse>u'cityMuseums'</inverse><seedInstances>u'{"American Indian Museum","new york"},{"Museum of Sex","new york"},{"New York City Police Museum","new york"},{"Museum of Jewish Heritage","new york"},{"Heritage Square Museum","los angeles"},{"Museum of Neon Art","los angeles"},{"Grammy Museum","los angeles"},{"Hollywood Wax Museum","los angeles"},{"Austin Museum of Art","austin"},{"Blanton Museum of Art","austin"},{"Austin Children Museum","austin"},{"Carnegie Museum of Art", "pittsburgh"},{"The Andy Warhol Museum","pittsburgh"},{"Boston Science Museum","boston"},{"Boston Children\'s Museum","boston"},{"Royal Ontario Museum", "toronto"},{"Toronto\'s Historic Museums","toronto"},{"Gardiner Museum","toronto"},{"Bata Shoe Museum","toronto"},{"Museum f\xfcr Naturkunde", "berlin"},{"Berlin Museum","berlin"}{"Museum of Modern Art","New York"},{"Melbourne Museum","Melbourne"},{"British Museum","London"},{"Natural History Museum","London"},{"Louvre Museum","Paris"},{"Anacostia Museum","Washington , D . C ."},{"National Museum of Iran","Tehran"},{"Gotoh Museum","Tokyo"},{"National Palace Museum","Taipei"},{"Zigong Dinosaur Museum","Zigong"},{"New York Transit Museum","New York"},{"Michigan Firehouse Museum","Ypsilanti"},{"Shanghai Museum","Shanghai"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-18'</editDate><author>u'Medhi (via Bryan)'</author><curator>u''</curator><description>u'The city that a museum is located in'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/architecture/museum", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u''</comment><relationName>u'zooInCity'</relationName><humanFormat>u'arg1 is a zoo {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'attractionOfCity'</generalizations><domain>u'zoo'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'aquariumInCity'</mutexExceptions><knownNegatives>u'{"Austin Zoo","London"} {"Battersea Park Zoo", "Chicago"} {"Licoln Park Zoo","Boston"} {"Riverdale Zoo", "Ottawa"} {"ZSL London Zoo","Washington"} {"Woodland Park Zoo", "Redmond"} {"Central Park", "Washington"}'</knownNegatives><inverse>u'cityZoos'</inverse><seedInstances>u'{"Austin Zoo","austin"},{"Riverdale Zoo","toronto"},{"Central Park", "new york"},{"Barking Zoo","new york"},{"Friends of the National Zoo","washington"},{"Smithsonian National Zoological Park","washington"},{"Woodland Park Zoo","seattle"},{"Woodland Park Zoo","seattle"},{"Battersea Park Zoo","london"},{"ZSL London Zoo","london"},{"London Sea Life Aquarium","london"},{"Lincoln Park Zoo","chicago"},{"Lincoln Park Zoo","chicago"},{"Pueblo\xa0Zoo","Pueblo"},{"Belfast Zoo","Belfast"},{"Bronx Zoo","New York"},{"Folsom Zoo","Folsom"},{"Kansas City Zoo","Kansas"},{"Bristol Zoo","Bristol"},{"Taronga Zoo","Sydney"},{"Zoo Basel","Basel"},{"Giza Zoo","Cairo"},{"Calgery Zoo","Calgery"},{"Toronto Zoo","Toronto"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-18'</editDate><author>u'Medhi (via Bryan)'</author><curator>u''</curator><description>u'The city a zoo is located in'</description><freebaseID>u'/zoos/zoo/location'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'parkInCity'</relationName><humanFormat>u'arg1 is a park {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'attractionOfCity'</generalizations><domain>u'park'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'aquariumInCity'</mutexExceptions><knownNegatives>u'{"frick park","carnegie"} {"washington square park","washington"} {"grant park","vienna"} {"central park","london"} {"battersea park","paris"} {"piers park sailing center","portland"} {"treptower park","munich"} {"holland park","holland"},{"Queen Elizabeth\xa0Park","Vancouver"},{"Sunset Park","New York"},{"Stanley Park","Vancouver"},{"Chinese Garden","Vancouver"},{"Edwards Gardens","Toronto"},{"Auburn Botanical Gardens","Auburn"},{"Moore Park","Sydney"},{"GuildWood Park","Toronto"},{"James Gardons","Toronto"},{"Waterfall Garden","Seattle"},{"Flagstaff Gardens","Melbourne"},{"Fitzroy Gardens","Melbourne"}'</knownNegatives><inverse>u'cityParks'</inverse><seedInstances>u'{"Central Park", "new york"},{"Madison Square Park Conservancy","new york"},{"Washington Square Park","new york"},{"Millenium Park","chicago"},{"Grant Park","chicago"},{"Piers Park Sailing Center","boston"},{"Peters Park","boston"},{"Charlesbank Park","boston"},{"Villa Borghese","rome"},{"Treptower Park","berlin"},{"Saint James\'s Park","london"},{"Hyde Park","london"},{"Battersea Park","london"},{"Holland Park","london"},{"Brockwell Park","london"},{"Vauxhall Park","london"},{"Schenley Park","pittsburgh"},{"Frick Park","pittsburgh"},{"Saint James Park","toronto"},{"High Park","toronto"},{"Christie Pits Park","toronto"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-18'</editDate><author>u'Medhi (via Bryan)'</author><curator>u''</curator><description>u'The city a park is located in.'</description><freebaseID>u'/location/location/containedby'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'hotelInCity'</relationName><humanFormat>u'arg1 is a hotel {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'buildingLocatedInCity'</generalizations><domain>u'hotel'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'attractionOfCity'</mutexExceptions><knownNegatives>u'{"chelsea hotel","washington"} {"congress plaza hotel","washington"} {"delta chelsea downtown","new york"} {"sheraton centre","chicago"} {"hudson hotel","hudson"} {"metro plaza hotel","london"} {"swissotel","zurich"} {"hotel mirage","los angeles"} {"paramount hotel","las vegas"}'</knownNegatives><inverse>u'cityHotels'</inverse><seedInstances>u'{"New York Marriott Downtown", "new york"},{"Paramount Hotel", "new york"},{"Chelsea Hotel","new york"},{"Hudson Hotel","new york"},{"The Blackstone Hotel","chicago"},{"Congress Plaza Hotel","chicago"},{"Swissotel","chicago"},{"Hotel Adlon Kempinski","berlin"},{"Estrel Hotel","berlin"},{"Hotel Mirage","las vegas"},{"Downtown Marriott Hotel","los angeles"},{"Metro Plaza Hotel","los angeles"},{"holiday inn","new york"},{"Hollywood Roosevelt","los angeles"},{"Figueroa Hotel","los angeles"},{"Delta Chelsea Downtown","toronto"},{"Sheraton Centre","toronto"},{"Metropolitan Hotel","toronto"},{"The Drake Hotel","toronto"},{"The Fairmont Royal York", "toronto"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-18'</editDate><author>u'Medhi (via Bryan)'</author><curator>u''</curator><description>u'The city a hotel is located in.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/travel/accommodation", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u''</comment><relationName>u'restaurantInCity'</relationName><humanFormat>u'arg1 is a restaurant {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'buildingLocatedInCity'</generalizations><domain>u'restaurant'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'attractionOfCity'</mutexExceptions><knownNegatives>u'{"Eiffel Tower Restauant","paris"} {"Fleur De Lys","los angeles"} {"Mooo Restaurant","harvrad"} {"Lucca Restaurant","rome"} {"White Trash Fast Food","new york"} {"Tojo\'s Restaurant","toronto"} {"Bridges Restaurant" "pittsburgh"} {"Boathouse Restaurants","new york"} {"Mistal Restaurant","las vegas"} {"Pecking Duck House Restaurant","berlin"} {"Mon Ami Gabi Restaurant","paris"} {"Threadgills Restaurant","houston"} {"Carmelo\'s Restaurant","las vegas"} {"Bonaparte Restaurant","paris"} {"Restaurant Globe","new york"}'</knownNegatives><inverse>u'cityRestaurants'</inverse><seedInstances>u'{"Eiffel Tower Restaurant","las vegas"},{"TAO Restaurant","las vegas"},{"Rosemary\'s Restaurant","las vegas"},{"Mon Ami Gabi Restaurant","las vegas"},{"Fleur De Lys", "las vegas"},{"Cicada Restaurant","los angeles"},{"J Restaurant and Lounge","los angeles"},{"Roy\'s Restaurant","los angeles"},{"Delmonico\'s Restaurant","los angeles"},{"Peking Duck House Restaurant","los angeles"},{"Joe\'s Shanghai Restaurant","los angeles"},{"Tom\'s Restaurant","los angeles"},{"Mooo Restaurant","boston"},{"Union Oyster House","los angeles"},{"Mistral Restaurant","los angeles"},{"Lucca Restaurant","los angeles"},{"Stella Restaurant","los angeles"},{"Threadgills Restaurant","austin"},{"Carmelo\'s Restaurant","austin"},{"Zur letzten Instanz Restaurant","berlin"},{"Restaurant Lafil","berlin"},{"White Trash Fast Food","berlin"},{"Vij\'s Restaurant","vancouver"},{"Boathouse Restaurants","vancouver"},{"Tojo\'s Restaurant","vancouver"},{"Bridges Restaurant","vancouver"},{"Restaurant Toqu\xe9","montreal"},{"Bonaparte Restaurant","montreal"},{"Restaurant Globe","montreal"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-18'</editDate><author>u'Medhi (via Bryan)'</author><curator>u''</curator><description>u'The city a restaurant is located in.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/dining/restaurant", "/business/business location/address": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u''</comment><relationName>u'universityInCity'</relationName><humanFormat>u'arg1 is a university {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationActsInLocation'</generalizations><domain>u'university'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityUniversities'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'The city a university is located in.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/education/university", "/education/educational institution/campuses": [{ "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }]'</freebaseID><comment>u''</comment><relationName>u'hospitalInCity'</relationName><humanFormat>u'arg1 is a hospital {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'buildingLocatedInCity'</generalizations><domain>u'hospital'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityHasHospital'</inverse><seedInstances>u'{"The Vancouver Clinic","Vancouver"},{"BC Children\'s\xa0Hospital","Vancouver"},{"Vancouver General Hospital","Vancouver"},{"Swedish Medical Center","Seattle"},{"Virginia Mason Medical Center","Seattle"},{"Bridgepoint Health","Toronto"},{"St. Joseph\'s Health Centre","Toronto"},{"Highlands Hospital","London"},{"Sydney Hospital","Sydney"},{"New York Presbyterian\xa0Hospital","New York"},{"Allegheny General\xa0Hospital","Pittsburgh"},{"Children\'s Hospital","Pittsburgh"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'The city a hostpital is located in.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/medicine/hospital", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'lakeInState'</relationName><humanFormat>u'arg1 is a lake {in the state or province} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'lake'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateHasLake'</inverse><seedInstances>u'{"Emerald Lake","British Columbia"},{"Kootenay Lake","British Columbia"},{"Wollaston Lake","Saskatchewan"},{"Cree Lake","Saskatchewan"},{"Lake Merritt","California"},{"Lake Granby","Colorado"},{"Lake Burton","Georgia"},{"Blue Lake","South Australia"},{"Lake District","North West England"},{"Stockton Lake","Missouri"},{"Angle Lake","Nevada"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'The state/province a river is in.'</description><freebaseID>u'/location/location/containedby'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'trainStationInCity'</relationName><humanFormat>u'arg1 is  a train station {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'trainStation'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'attractionOfCity'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityHasTrainStation'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u''</author><curator>u''</curator><description>u'The city a train station is in.'</description><freebaseID>u'/location/location/containedby'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'languageOfCountry'</relationName><humanFormat>u'arg1 is the {language of} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'language'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryLanguage'</inverse><seedInstances>u'{"Arabic","Egypt"},{"English","United State"},{"English","Canada"},{"Chinese","Singapore"},{"French","France"},{"German","Austria"},{"German","Switzerland"},{"Greek","Greece"},{"Persian","Iran"},{"Polish","Poland"},{"English","Australia"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * spoken in * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'Typical language spoken in a country (official or otherwise)'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/language/human language", "/language/human language/countries spoken in": [{ "name": null, "/common/topic/alias": [], "type": "/location/country" }] }]'</freebaseID><comment>u''</comment><relationName>u'languageOfCity'</relationName><humanFormat>u'arg1 is {spoken in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'language'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'languageSchoolInCity isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityLanguage'</inverse><seedInstances>u'{"French","Montreal"},{"German","Zurich"},{"French","Paris"},{"English","Pittsburgh"},{"English","Toronto"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * spoken in * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'Typical language spoken in a city (official or otherwise)'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/language/human language", "/language/human language/region": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'airportInCity'</relationName><humanFormat>u'arg1 is an airport {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'buildingLocatedInCity'</generalizations><domain>u'airport'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'attractionOfCity'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityHasAirport'</inverse><seedInstances>u'{"London City Airport","London"},{"Manchester Airport\u200e","Manchester"},{"London Heathrow Airport","London"},{"London Luton Airport","London"},{"Bremen Airport","Bremen"},{"Edinburgh Airport","Edinburgh"},{"Copenhagen Airport","Copenhagen"},{"Birmingham International Airport","Birmingham"},{"Vienna International\u200e airport","Vienna"},{"Chicago O\'Hare International Airport","Chicago"},{"Los Angeles International Airport","Los Angeles"},{"McCarran International Airport","Las Vegas"},{"LaGuardia Airport","New York City"},{"John F. Kennedy International Airport","New York"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'The city an airport is located in.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/aviation/airport", "/aviation/airport/serves": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u''</comment><relationName>u'shoppingMallInCity'</relationName><humanFormat>u'arg1 is a shopping mall {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'buildingLocatedInCity'</generalizations><domain>u'shoppingMall'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'attractionOfCity'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityHasShoppingMall'</inverse><seedInstances>u'{"Manhattan Mall Shopping Center","New York"},{"Canal Shopping Center","New York"},{"Beverly Center Shopping Mall","Los Angeles"},{"California Market Center","Los Angeles"},{"Del Amo Fashion Center","Los Angeles"},{"Lakewood Center","Los Angeles"},{"Oaks Mall","Los Angeles"},{"Franklin Mills Mall","Philadelphia"},{"Roosevelt Mall Shopping Center","Philadelphia"},{"Toronto Eaton Centre","Toronto"},{"Shops at Don Mills","Toronto"},{"Dufferin Mall","Toronto"},{"Atrium Mall","Chicago"},{"The 900 Shops","Chicago"},{"Water Tower Place","Chicago"},{"West Edmonton Mall","Edmonton"},{"Potsdamer Platz Arkaden","Berlin"},{"Schloss Charlottenburg","Berlin"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'The city a shopping mall is located in.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/business/shopping center", "/business/shopping center/address": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }]'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'aquariumInCity'</relationName><humanFormat>u'arg1 is an aquarium {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'attractionOfCity'</generalizations><domain>u'aquarium'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'buildingLocatedInCity zooInCity parkInCity'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityAquariums'</inverse><seedInstances>u'{"Georgia Aquarium","Atlanta"},{"Shedd Aquarium","Chicago"},{"New York Aquarium","New York"},{"Kyoto Aquarium","Los Angeles"},{"National Aquarium","Washington DC"},{"Aquarium und Zoologischer Garten","Berlin"},{"Aquarium Berlin","Berlin"},{"New England Aquarium Home","Boston"},{"Dallas Aquarium","Dallas"},{"Dallas World Aquarium","Dallas"},{"Spadina Aquarium","Toronto"},{"Vancouver Aquarium","Vancouver"},{"National Aquarium, Baltimore","Baltimore"},{"L\'aquarium De Barcelona","barcelona"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'The city an aquarium is located in.'</description><freebaseID>u'/zoos/zoo/location'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'mountainInState'</relationName><humanFormat>u'arg1 is a mountain {in the state or province} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'mountain'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateHasMountain'</inverse><seedInstances>u'{"Cheaha Mountain","Alabama"},{"Red Mountain","Alabama"},{"Mount McKinley","Alaska"},{"South Peak","Alaska"},{"Sierra Nevada","California"},{"White Mountains","California"},{"Alachua","Florida"},{"Sugarloaf Mountain","Florida"},{"Charles Mound","Illinois"},{"Benton Mound"," Illinois"},{"Sugarloaf Mountain","Maryland"},{"Mount Arvon","Michigan"},{"Mount Carwood","Michigan"},{"Campbell Hill","Ohio"},{"Mount Miserable","Ohio"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'State/province a mountain is located in.'</description><freebaseID>u'/location/location/containedby'</freebaseID><comment>u'Freebase mapping not quite an exact match.'</comment><relationName>u'languageOfUniversity'</relationName><humanFormat>u'arg1 is a language {used in} the university arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'language'</domain><range>u'university'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'universityOperatesInLanguage'</inverse><seedInstances>u'{"French", "Sorbonne University"},{"Lithuanian", "Vilnius University"},{"German", "Basel University"},{"English", "McGill University"},{"French","EPFL"},{"English","University of Washington"},{"English","University of Hong kong"},{"Arabic","Birzeit University"},{"German","University of Munich"},{"French","University of Geneva"},{"German","University of Zurich"},{"German","University of Bern"},{"Finnish","University of Helsinki"},{"English", "University of Florida"},{"English","University of Michigan"},{"Finnish", "University of Turku"}, {"English","Harvard University"},{"English","University of California, Berkeley"},{"English","Stanford"},{"English","Cornell"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (teaches OR teach OR taught OR teaching) in * arg1'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'Language spoken at a college/university.'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'transportationInCity'</relationName><humanFormat>u'arg1 is a transportation system {located in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'attractionOfCity'</generalizations><domain>u'transportation'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityHasTransportation'</inverse><seedInstances>u'{"commuter rail"\xa0,"Washington, DC"},{"commuter rail","southern Vancouver Island"},{"commuter rail","Toronto"},{"commuter rail","\xa0Montr\xe9al"},{"Commuter rail","Los Angeles"},{"Metrolink","Los Angeles"},{"commuter rail","Tacoma"},{"Commuter rail","Auckland"},{"Melbourne\xa0-\xa0Commuter rail","Melbourne"},{"commuter rail","London"},{"Metro","Paris"},{"commuter rail","Paris"},{"light rail","Z\xfcrich"},{"light rail","Paris"},{"tram lines","Paris"},{"Suburban\xa0Light Rail","Paris"},{"light rail","downtown Vancouver"},{"Skytrain\xa0light rail", "Vancouver"},{"Airtrain\xa0Light Rail","New York"},{"Light Rail ","Los Angeles"},{"Light Rail","Sydney"},{"Monorail services","Sydney"},{"monorail","Melbourne"},{"Tram","Melbourne"},{"light rail","Melbourne"},{"Light Rail","Toronto"},{" MetroSubway","Washington DC"},{"Metro\xa0system","Montreal"},{"MetroRail","Los Angeles"},{"metropolitan rail","Toronto"}{"metropolitan rail","New York"}{"metropolitan rail","Sydney"},{"metropolitan rail","Paris"},{\xa0"metropolitan rail","Melbourne"},{"Metra rail","Chicago"}{"Metropolitan Rail","Naperville"},{"metropolitan rail\xa0","Brisbane"},{"Metro","Kaula Lumpur"}{"SkyTrain","Vancouver"},{"Skytrain","Bangkok"},{"suburban rail","London"},{"commuter rail","Helsinki "},{"Suburban Rail","Belfast"},{"Regional Rail","Philadelphia"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-06'</editDate><author>u'Mehdi (via Bryan)'</author><curator>u''</curator><description>u'City of a transportation system.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/metropolitan transit/transit system", "/metropolitan transit/transit system/area served": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u"This has nrOfValues=1 because its generalization, attractionOfCity, does.  If we wind up wanting to capture intercity transporation instances, then we'll need an intermediate generalization with nrOfValues=any generalization of attractionInCity."</comment><relationName>u'animalIsTypeOfAnimal'</relationName><humanFormat>u'arg1 is an animal that is a {kind of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'specializationOf'</generalizations><domain>u'animal'</domain><range>u'animal'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"crayfish","annelids"}{"bass","social insects"}{"herons","bream"}{"loons","echinoderms"}{"impala","monkeys"}'</knownNegatives><inverse>u'animalTypeHasAnimal'</inverse><seedInstances>u'{"crayfish","crustaceans"}{"grubs","invertebrates"}{"amphipods","crustaceans"}{"trilobites","arthropods"}{"copepods","invertebrates"}{"sea anemones","cnidarians"}{"honey bees","social insects"}{"starfish","echinoderms"}{"water fleas","zooplankton"}{"leatherjackets","grubs"}{"grubs","insect larvae"}{"earthworms","annelids"}{"sea squirts","bryozoans"}{"honeybees","social insects"}{"copepods","zooplankton"}{"termites","social insects"}{"insect larvae","crustaceans"}{"horseshoe crabs","arthropods"}{"crustacea","arthropods"}{"crayfish","arthropods"}{"zoanthids","corals"}{"chimps","primates"}{"chimpanzees","primates"}{"kangaroos","marsupials"}{"chimpanzees","apes"}{"cetaceans","marine mammals"}{"chimpanzee","primates"}{"gorillas","great apes"}{"orangutans","primates"}{"great apes","primates"}{"baboons","primates"}{"sea otters","marine mammals"}{"jaguars","mammals"}{"bison","herbivores"}{"walrus","marine mammals"}{"walruses","marine mammals"}{"hyenas","carnivores"}{"wildebeest","herbivores"}{"porpoises","marine mammals"}{"jaguars","big cats"}{"llamas","camelids"}{"otters","marine mammals"}{"donkeys","farm animals"}{"manatees","marine mammals"}{"chimps","apes"}{"orangutans","apes"}{"kangaroo","marsupials"}{"beaver","furbearers"}{"donkeys","equines"}{"eland","antelopes"}{"harbor seals","marine mammals"}{"pumas","big cats"}{"chimpanzee","apes"}{"tigers","felines"}{"wallabies","marsupials"}{"muskrat","furbearers"}{"raccoons","carnivores"}{"colobus monkeys","primates"}{"impala","antelopes"}{"lemurs","primates"}{"bowhead whales","marine mammals"}{"hens","farm animals"}{"camels","ruminants"}{"chinchillas","herbivores"}{"koalas","marsupials"}{"caribou","ungulates"}{"killer whales","marine mammals"}{"macaques","monkeys"}{"raccoon","furbearers"}{"monkeys","apes"}{"kudu","antelopes"}{"warblers","songbirds"}{"herons","water birds"}{"waterfowl","water birds"}{"gulls","seabirds"}{"loons","waterfowl"}{"pheasant","game birds"}{"egrets","wading birds"}{"waterfowl","waterbirds"}{"pheasants","game birds"}{"waterfowl","game birds"}{"flamingoes","water birds"}{"plovers","shorebirds"}{"herons","waterbirds"}{"cormorants","seabirds"}{"bluebirds","cavity nesters"}{"shorebirds","waterfowl"}{"petrels","seabirds"}{"loons","water birds"}{"thrushes","songbirds"}{"snow geese","waterfowl"}{"boobies","seabirds"}{"loons","waterbirds"}{"crows","corvids"}{"shorebirds","waterbirds"}{"grebes","waterfowl"}{"albatrosses","seabirds"}{"cockatoos","parrots"}{"egrets","waterfowl"}{"egrets","water birds"}{"cormorants","water birds"}{"mergansers","waterfowl"}{"partridge","game birds"}{"pheasants","upland game birds"}{"teal","waterfowl"}{"egrets","shorebirds"}{"sparrows","songbirds"}{"amazons","parrots"}{"macaws","parrots"}{"warblers","passerines"}{"grouse","game birds"}{"kittiwakes","seabirds"}{"herons","shorebirds"}{"chickadees","songbirds"}{"gulls","water birds"}{"gulls","waterbirds"}{"cormorants","waterbirds"}{"storks","water birds"}{"finches","songbirds"}{"sandpipers","shorebirds"}{"egrets","waterbirds"}{"marlin","billfish"}{"perch","panfish"}{"crappie","panfish"}{"bluegill","panfish"}{"bluegill","sunfish"}{"crappies","panfish"}{"bluegills","panfish"}{"perch","pan fish"}{"swordfish","billfish"}{"barracuda","pelagics"}{"manta rays","pelagics"}{"guppies","livebearers"}{"whale sharks","pelagics"}{"mackerel","pelagics"}{"smallmouth bass","game fish"}{"crappie","pan fish"}{"hammerheads","pelagics"}{"rainbow trout","salmonids"}{"lake trout","salmonids"}{"neons","tetras"}{"bluegill","pan fish"}{"sailfish","billfish"}{"mantas","pelagics"}{"northern pike","game fish"}{"crappie","sunfish"}{"sunfish","panfish"}{"mantas","rays"}{"rock bass","panfish"}{"marlin","pelagics"}{"yellowfin","tunas"}{"bull trout","salmonids"}{"tetras","characins"}{"swordfish","tunas"}{"yellow perch","panfish"}{"marlins","game fish"}{"brook trout","salmonids"}{"albacore","tunas"}{"carp","cyprinids"}{"lingcod","bottomfish"}{"stingrays","rays"}{"shad","minnows"}{"largemouth bass","panfish"}{"manta rays","rays"}{"crappie","bream"}{"carp","minnows"}{"lingcod","rockfish"}{"tiger barbs","barbs"}{"bluegills","sunfish"}{"cutthroat trout","salmonids"}{"bluegill","bream"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (is OR are) * arg2'</queryString><editDate>u'2010-06-28'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'Type-specific generalization of animals.'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'vehicleIsTypeOfVehicle'</relationName><humanFormat>u'arg1 is a vehicle that is a {kind of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'specializationOf'</generalizations><domain>u'vehicle'</domain><range>u'vehicle'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"fire trucks","buggies"}{"dump trucks","ATVs"}{"ambulances","merchant ships"}{"forklifts","emergency vehicles"}{"golf carts","terrain vehicles"}'</knownNegatives><inverse>u'vehicleTypeHasVehicle'</inverse><seedInstances>u'{"ambulances","emergency vehicles"}{"fire trucks","emergency vehicles"}{"police cars","emergency vehicles"}{"fire apparatus","emergency vehicles"}{"tankers","merchant ships"}{"ambulance","emergency vehicles"}{"dump trucks","construction equipment"}{"battleships","warships"}{"graders","construction equipment"}{"ambulances","fire trucks"}{"bombers","aircrafts"}{"police cars","ambulances"}{"buggies","farm equipment"}{"farm machinery","farm equipment"}{"forklifts","construction equipment"}{"golf carts","buggies"}{"phevs","evs"}{"snowmobiles","terrain vehicles"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (is OR are) * arg2'</queryString><editDate>u'2010-06-29'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'Type-specific generalization of vehicles.'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'professionIsTypeOfProfession'</relationName><humanFormat>u'arg1 is a profession that is a {kind of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'specializationOf'</generalizations><domain>u'profession'</domain><range>u'profession'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"portfolio managers","craftsmen"}{"sales managers","government employees"}{"special educators","stylists"}{"copywriters","classroom teachers"}'</knownNegatives><inverse>u'professionTypeHasProfession'</inverse><seedInstances>u'{"portfolio managers","investment professionals"}{"goldsmiths","craftsmen"}{"oncologists","cancer specialists"}{"illustrators","creative professionals"}{"pathologists","medical experts"}{"superintendents","school leaders"}{"cabinetmakers","craftsmen"}{"goldsmiths","artisans"}{"dispatchers","support personnel"}{"glassblowers","artisans"}{"pathologists","laboratory professionals"}{"shoemakers","artisans"}{"special education teachers","school personnel"} {"silversmiths","craftsmen"}{"cabinetmakers","artisans"}{"jewelry designers","artisans"}{"silversmiths","artisans"}{"school psychologist","school personnel"}{"sales managers","sales professionals"}{"civil servants","government employees"}{"artisans","craftsmen"}{"music teachers","music professionals"}{"copywriters","creative professionals"}{"music teachers","classroom teachers"} {"classroom teachers","teaching artists"}{"school psychologists","school personnel"} {"special educators","paraprofessionals"}{"makeup artists","stylists"}{"shoemakers","craftsmen"}{"fashion designers","stylists"}{"artisans","craftspeople"}{"fabricators","craftsmen"}{"watchmakers","artisans"}{"archivists","conservators"}{"watchmakers","craftsmen"}{"illustrators","graphic artists"}{"insurance professionals","industry experts"}{"school principals","district administrators"}{"district administrators","school personnel"}{"craftsmen","tradesmen"}{"decorators","craftsmen"} {"website designers","web developers"}{"state employees","government employees"}{\u201cartisans\u201d,"craftspeople"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (is OR are) * arg2'</queryString><editDate>u'2010-06-30'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'Type-specific generalization of professions.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/profession", "/people/profession/specialization of": [{ "name": null, "/common/topic/alias": [], "type": "/people/profession" }] }]'</freebaseID><comment>u''</comment><relationName>u'chemicalIsTypeOfChemical'</relationName><humanFormat>u'arg1 is a chemical that is a {kind of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'specializationOf'</generalizations><domain>u'chemical'</domain><range>u'chemical'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'chemicalTypeHasChemical'</inverse><seedInstances>u'{"greenhouse gases","pollutants"}{"nitrogen oxides","pollutants"}{"dioxins","pollutants"}{"greenhouse gas emissions","pollutants"}{"formaldehyde","pollutants"}{"dioxin","pollutants"}{"benzene","pollutants"}{"greenhouse gases","air pollutants"}{"arsenic","pollutants"}{"sulfur dioxide","air pollutants"}{"particulate matter","pollutants"}{"particulates","air pollutants"}{"water vapor","greenhouse gases"}{"chlorine","pollutants"}{"carbondioxide","greenhouse gases"}{"nitrogen dioxide","pollutants"}{"particulate matter","air pollutants"}{"chlorine","oxidizers"}{"greenhouse gasses","pollutants"}{"particulates","pollutants"}{"benzene","air pollutants"}{"norepinephrine","catecholamines"}{"greenhouse gas emissions","air pollutants"}{"serotonin","monoamines"}{"nitrogen oxide","pollutants"}{"adrenaline","catecholamines"}{"histamine","amines"}{"dioxins","organochlorines"}{"dopamine","catecholamines"}{"halocarbons","chlorine"}{"histamine","biogenic amines"}{"cadmium","pollutants"}{"dopamine","monoamines"}{"formaldehyde","air pollutants"}{"norepinephrine","monoamines"}{"water vapor","trace gases"}{"sulfur oxides","pollutants"}{"sulfur dioxide","pollutants"}{"cyanide","pollutants"}{"dioxin","organochlorines"}{"serotonin","neurotransmitter"}{"dopamine","neurotransmitter"}{"serotonin","amines"}{"greenhouse gas","pollutants"}{"sulfates","pollutants"}{"chlorofluorocarbons","pollutants"}{"serotonin","monoamine neurotransmitters"}{"epinephrine","catecholamines"}{"chlorofluorocarbons","greenhouse gases"}{"trichloroethylene","pollutants"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * such as * arg1'</queryString><editDate>u'2010-06-31'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'"indicates that one chemical is special case of another chemical"'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'streetInCity'</relationName><humanFormat>u'arg1 is a street {in the city} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'street'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityHasStreet'</inverse><seedInstances>u'{"washington road","augusta"}{"kalakaua avenue","honolulu"}{"st . charles avenue","new orleans"}{"princes street","edinburgh"}{"peachtree street","atlanta"}{"west broadway","vancouver"}{"temple street","new haven"}{"middlesex turnpike","bedford"}{"princess street","edinburgh"}{"king street","charleston"}{"west street","annapolis"}{"high street","edinburgh"}{"piedmont road","atlanta"}{"auburn avenue","atlanta"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-32'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'"this street is at least partly inside this city"'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'academicProgramAtUniversity'</relationName><humanFormat>u'arg1 is an academic program {at the university} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'academicField'</domain><range>u'university'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan academicFieldConcernsSubject'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'universityHasAcademicProgram'</inverse><seedInstances>u'{"environmental education","antioch new england graduate school"}{"graphic design","art center college of design"}{"physical education","brock university"}{"exercise physiology","st . scholastica"}{"fisheries","uaf"}{"organizational management","ashford university"}{"special education","unc"}{"physical therapy","chatham university"}{"international business","columbia business school"}{"special education","grand canyon university"}{"physical therapy","long island university"}{"graphic design","california college"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * program * arg2'</queryString><editDate>u'2010-06-32'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'"this academic program is offered by this university"'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/education/university", "/education/university/departments": [{ "/education/department/field": [{ "name": null, "/common/topic/alias": [], "type": "/education/field of study" }] }] }]'</freebaseID><comment>u''</comment><relationName>u'professionUsesTool'</relationName><humanFormat>u'arg2 is a tool {used in} the profession arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'profession'</domain><range>u'tool'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"project managers","scalpels"}{"therapists","power drills"}{"surgeons","web browsers"}{"hair stylists","project management software"}'</knownNegatives><inverse>u'toolUsedByProfession'</inverse><seedInstances>u'{"surgeons","scalpels"}{"project managers","project management software"}{"instructors","discussion board"}{"instructors","rubrics"}{"home buyers","calculator"}{"web designers","web browser"}{"therapists","checklists"}{"instructors","discussion boards"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * used by * arg1'</queryString><editDate>u'2010-06-32'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'"those who practice this profession use this tool"'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'bodypartContainsBodypart'</relationName><humanFormat>u'arg2 is a {subpart} of the body within arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'superpartOf'</generalizations><domain>u'bodypart'</domain><range>u'bodypart'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bodypartWithinBodypart'</inverse><seedInstances>u'{"temporal lobe","auditory cortex"}{"temporal lobe","hippocampus"}{"medial temporal lobe","hippocampus"}{"occipital lobe","visual cortex"}{"parietal lobe","postcentral gyrus"}{"hippocampus","dentate gyrus"}{"ear canal","ear drum"}{"nephron","glomerulus"}{"external ear","auricle"}{"left atrium","mitral valve"}{"frontal lobe","prefrontal cortex"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-06-32'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'"indicates that one body part is contained inside another"'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'autoMakerProducesModel'</relationName><humanFormat>u'arg1 {makes} the automobile arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'producesProduct'</generalizations><domain>u'automobileMaker'</domain><range>u'automobileModel'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Volkswagen","Corolla"}{"Toyota","Escort"}{"Ford","Accord"}{"Honda","Caprice"}{"Chevrolet","Passat"}'</knownNegatives><inverse>u'autoModelProducedByMaker'</inverse><seedInstances>u'{"Toyota","Corolla"}{"Toyota","Camry"}{"Ford","Escort"}{"Ford","F150"}{"Honda","Accord"}{"Honda","Civic"}{"Chevrolet","Caprice"}{"Chevrolet","Nova"}{"Honda","CR-V"}{"Volkswagen","Passat"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (produces OR produce OR produced OR producing) * arg2'</queryString><editDate>u'2010-06-32'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'"this automobile manufacturer produces this particular automobile make or model"'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/automotive/company", "/automotive/company/make s": [{ "/automotive/make/model s": [{ "name": null, "/common/topic/alias": [], "type": "/automotive/model" }] }] }]'</freebaseID><comment>u''</comment><relationName>u'organizationCreatedAtDate'</relationName><humanFormat>u'arg1 is an organization {created} at the date arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atDate'</generalizations><domain>u'organization'</domain><range>u'date'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'organizationDissolvedAtDate'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'dateOfOrganizationCreation'</inverse><seedInstances>u'{\u201cAbu Sayyaf\u201d, \u201cthe early 1990s\u201d} {\u201cNational Rifle Association\u201d, \u201c1871\u201d} {\u201cFree Thinking Film Society\u201d, \u201c2007\u201d} {\u201cCreative Coalition\u201d, \u201c1989\u201d} {\u201cCentury Regional Detention Center\u201d, \u201c1994\u201d} {\u201cNew York Mets\u201d, \u201c1962\u201d} {\u201cFEMA\u201d, \u201c1979\u201d} {\u201cUNAIDS\u201d, \u201c1995\u201d} {\u201cInternational Steel Group\u201d, \u201c2002\u201d} {\u201cPeter D. Hart Research Associates\u201d, \u201c1971\u201d} {\u201cNFC South\u201d, \u201c2002\u201d} {\u201cRed Sox\u201d, \u201c1901\u201d} {\u201cZagat\u201d, \u201c1979\u201d} {\u201cTianjin Lions\u201d, \u201c2002\u201d} {\u201cScorpions\u201d, \u201c1999\u201d} {\u201cSafe Passage\u201d, \u201c1999\u201d} {\u201cSAC\u201d, \u201c1951\u201d} {\u201cMoro National Liberation Front\u201d, \u201c1972\u201d} {\u201cInternational Monetary Fund\u201d, \u201c1944\u201d} {\u201cFocus on the Family\u201d, \u201c1977\u201d} {\u201cChina National Aviation Corporation\u201d, \u201c2002\u201d} {\u201cBarnes Foundation\u201d, \u201c1922\u201d} {\u201cAsian Development Bank\u201d, \u201c1966\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (created OR founded) * arg2'</queryString><editDate>u''</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The date on which a given organization was founded'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'organizationDissolvedAtDate'</relationName><humanFormat>u'arg1 is an organization {dissolved} at the date arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atDate'</generalizations><domain>u'organization'</domain><range>u'date'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'organizationCreatedAtDate'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'dateOfOrganzationDissolution'</inverse><seedInstances>u'{\u201cCompaq\u201d, \u201c2002\u201d} {\u201cLeague of Nations\u201d, \u201c1946\u201d} {\u201cDaily News\u201d, \u201c2003\u201d} {\u201cAmerican Basketball Association\u201d, \u201c1976\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * dissolved * arg2'</queryString><editDate>u''</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The date on which a given organization was dissolved'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personBirthDate'</relationName><humanFormat>u'arg1 is a person {born on} the date arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atDate'</generalizations><domain>u'person'</domain><range>u'dateLiteral'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Mark Twain","1967"} {"Christ","1957"} {"Willam Howard Taft","1909"} {"Levi Strauss","1853"}{"Brad Pitt","2008"}{"Condi Rice","2008"} {"Aaron Burr","1807"} {"FDR","1945"}{"Mahatma Gandhi","1947"}{"Jonas Salk","1995"} {\u201cHank Williams\u201d, \u201cSeptember 17\u201d} {\u201cAugustus II\u201d, \u201c1727\u201d}'</knownNegatives><inverse>u'dateOfPersonBirth'</inverse><seedInstances>u'{"McCain","1936"}{"Mother Teresa","1910"} {"Obama","1961"} {"Princess Margaret","1930"} {"Queen Victoria","1819"}{"Johannes Brahms","1833"} {"Charles Darwin","1809"}{"Adolf Hitler","1889"}{"Rembrandt","1606"}{"John Quincy Adams","1825"} {\u201cEmile Lahoud\u201d, \u201c1936\u201d} {\u201cCorey Bohan\u201d, \u201c1982\u201d} {\u201cAmy MacDonald\u201d, \u201c1987\u201d} {\u201cBarry Goldwater\u201d, \u201c1909\u201d} {\u201cOspel\u201d, \u201c1950\u201d} {\u201cHank Williams\u201d , \u201cSeptember 17\u201d} {\u201cAugustus II\u201d, \u201cMay 12\u201d} {\u201cWilliam Verity\u201d, \u201c1917\u201d} {\u201cVernon Bellecourt\u201d, \u201c1931\u201d} {\u201cTheodor Kollek\u201d, \u201c1911\u201d} {\u201cRobert McNair\u201d, \u201c1923\u201d} {\u201cRichmond Flowers\u201d, \u201c1918\u201d} {\u201cRandall Forsberg\u201d, \u201c1943\u201d} {\u201cPamela Ahearn\u201d, \u201c1954\u201d} {\u201cOscar Peterson\u201d, \u201c1925\u201d} {\u201cMichael Deaver\u201d, \u201c1938\u201d} {\u201cLorraine Rothman\u201d, \u201c1932\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * born * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"the date on which this person was born"'</description><freebaseID>u'/people/person/date of birth'</freebaseID><comment>u'Added for DARPA NFL &amp; IC ontologies.  Seed with better dates when all-pairs gets better dates.'</comment><relationName>u'personDeathDate'</relationName><humanFormat>u'arg1 is a person who {died on} the date arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atDate'</generalizations><domain>u'person'</domain><range>u'dateLiteral'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Sarah Palin","2008"}{"Michael Schumacher","2006"}{"Condi Rice","2008"}{"Lincoln","1962"} {"William Howard Taft","1909"} {"John Quincy Adams","1825"}{"Rembrandt","1606"}{"Adolf Hitler","1889"}{"Charles Darwin","1809"}{"Johannes Brahms","1833"} '</knownNegatives><inverse>u'dateOfPersonDeath'</inverse><seedInstances>u'{"FDR","1945"}{"Franklin D . Roosevelt","1945"} {"Mahatma Gandhi","1947"}{"John Bonham","1980"}{"Kim Il Sung","1994"}{"Emperor Meiji","1912"}{"Jonas Salk","1995"}{"Pope John Paul II","April 2005"} {\u201cHank Williams\u201d, \u201c1953\u201d} {\u201cAhmed Shah Massoud\u201d, \u201cSeptember 2001\u201d} {\u201cBarry Goldwater\u201d, \u201c1998\u201d} {\u201cFraser Robinson\u201d, \u201c1990\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * (dies OR die OR died OR dying) * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"the date on which this person died"'</description><freebaseID>u'/person/deceased person/date of death'</freebaseID><comment>u'Added for DARPA NFL &amp; IC ontologies.  Seed with better dates when all-pairs gets better dates.'</comment><relationName>u'sportsGameDate'</relationName><humanFormat>u'arg1 is a sports game that {took place on} the date arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'eventDate'</generalizations><domain>u'sportsGame'</domain><range>u'dateLiteral'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"1967 World Series", "2006"} {"2002 World Cup","2008"}{"Super Bowl XLIII","1983"}{"2006 FA Cup","2008"}'</knownNegatives><inverse>u'dateOfSportsGame'</inverse><seedInstances>u'{"Paralympic Games","2010"} {"World Cup","2008"}{"All-Star Game","2006"}{"Hollywood Bowl","2005"}{"Tournament","2002"}{"first playoff","2002"}{"Super Bowl XXXVII","2002"}{"Super Bowl XLIII","February 1,2009"} {"Super Bowl XVII","January 30,1983"}{"2006 World Series","October 2006"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR on) * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"the date on which this game occurred"'</description><freebaseID>u'none'</freebaseID><comment>u'Added for DARPA NFL &amp; IC ontologies'</comment><relationName>u'personHasAge'</relationName><humanFormat>u'arg1 is a person who {has age} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'nonNegInteger'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"Mozart","14"} {"Buddha","18"} {"Bono","2"} {"President Bush","25"} {"George Washington", "26"} {"Barack Obama","27"}{"Hillary Clinton","28"} {"George Lucas","10"} {"Jesus Christ", "40"} {"Paris Hilton","50"} {"Roger Federer","10"} {"Michael Jackson","80"} {"Snoop Dog", "50"} {"Sting","50"}'</knownNegatives><inverse>u'ageOfPerson'</inverse><seedInstances>u'{"John McCain", "72"} {"Kobe Bryant", "30"} {"Barack Obama", "47"} {"Arizona senator","72"} {"Federer","27"}{"Farve","39"}{"Benedict","81"}{"President","48"}{"Chelsea","28"}{"Nelson Mandela","90"}{"Abreu","35"}{"Moyer","46"} {\u201cMegawati Sukarnoputri\u201d, \u201c49\u201d} {\u201cMichael Jackson\u201d, \u201c50\u201d} {\u201cTom Lehman\u201d, \u201cfifty\u201d} {\u201cHiram Monserrate\u201d, \u201c41\u201d} {\u201cJared Cotter\u201d, \u201c25\u201d} {\u201cDiane Olson\u201d, \u201c54\u201d} {\u201cEmile Lahoud\u201d, \u201c71\u201d} {\u201cAlli Sims\u201d, \u201c26\u201d} {\u201cAnnise Parker\u201d, \u201c52\u201d} {\u201cClive Davis\u201d, \u201c76\u201d} {\u201cArsene Wenger\u201d, \u201c60\u201d} {\u201cAmy MacDonald\u201d, \u201c21\u201d} {\u201cDanny Moder\u201d, \u201c38\u201d} {\u201cKurt Westergaard\u201d, \u201c75\u201d} {\u201cLevi Johnston\u201d, \u201c18\u201d} {\u201cHolly Madison\u201d, \u201c28\u201d} {\u201cLinda Hogan\u201d, \u201c46\u201d} {\u201cDavid Coleman Headley\u201d, \u201c49\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (is OR are OR was OR were) * arg2'</queryString><editDate>u'2010-07-13'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"the age of this person"'</description><freebaseID>u'none'</freebaseID><comment>u'Added for DARPA NFL &amp; IC ontologies.  The value of this relation will be different next year, so should be deleted from the ontology?'</comment><relationName>u'personDiedAtAge'</relationName><humanFormat>u'arg1 is a person who {died at the age of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'nonNegInteger'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"Mozart","14"} {"Buddha","18"} {"Bono","2"} {"President Bush","25"} {"George Washington", "26"} {"Barack Obama","27"}{"Hillary Clinton","28"} {"George Lucas","10"} {"Jesus Christ", "40"} {"Paris Hilton","50"} {"Roger Federer","10"} {"Michael Jackson","80"} {"Snoop Dog", "50"} {"Sting","50"}'</knownNegatives><inverse>u'deathAgeOfPerson'</inverse><seedInstances>u'{"Anna Nicole Smith","39"}{"Mary Shelley","19"}{"Michael Crichton","66"}{"Patrick McGoohan","80"}{"Yves Saint Laurent","71"}{"Gerald Ford","93"}{"Bernie Mac","50"}{"Richard Pryor","65"}{"George Carlin","71"}{"Heath Ledger","28"}{"Tim Russert","58"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (dies OR die OR died OR dying) * arg2'</queryString><editDate>u'2010-07-13'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"the age at which this person died"'</description><freebaseID>u'none'</freebaseID><comment>u'Added for pre-emptive bounding of personHasAge'</comment><relationName>u'sportsGameScore'</relationName><humanFormat>u'the {final score of} the sports game arg1 was arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sportsGame'</domain><range>u'gameScore'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"conference","16-19"} {"halftime","17-15"} {"conference","2005-2006"} {"Conference","21-23"} {"half","24-7"} {"event","27-30"} {"first half","28-16"}'</knownNegatives><inverse>u'scoreOfSportsGame'</inverse><seedInstances>u'{"season opener", "0-1"} {"finals","0-2"} {"match" "15-11"} {"Athletic Conference", "2-4"} {"championship","8-6"} {"final game","0-15"} {"Eastern Conference", "3-2"} {"Wembley", "3-2"} {"first game", "4-2"} {"semi-finals","6-1"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * final score * arg2'</queryString><editDate>u'2010-07-05'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"the score of this game"'</description><freebaseID>u'/american football/football game score'</freebaseID><comment>u"Added for DARPA NFL &amp; IC ontologies.  I couldn't find better seeds, but these should produce on-target extractionPatterns for micro-reading."</comment><relationName>u'latitudeLongitude'</relationName><humanFormat>u'the {lattitude and longitude} of arg1 is arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'llCoordinate'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'latitudeLongitudeOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-09-29'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"the latitude and longitude of this location, or the latitude and longitude typically associated with this thing"'</description><freebaseID>u'/location/location/geolocation'</freebaseID><comment>u'Populated only by the LatLong tinker toy.  We might change the format etc. in the future.'</comment><relationName>u'organizationAlsoKnownAs'</relationName><humanFormat>u'arg1 is an organization {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'synonymFor'</generalizations><domain>u'organization'</domain><range>u'organization'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationAlsoKnownAs'</inverse><seedInstances>u"{\u201cQuds Force\u201d, \u201cQuds Army\u201d} {\u201cQuds Force\u201d, \u201cIRCG-QF\u201d} {\u201cQuds Force\u201d, \u201cal-Quds Brigade\u201d} {\u201cCingular\u201d, \u201cCingular Wireless LLC\u201d} {\u201cCingular\u201d, \u201cAT&amp;T Mobility LLC\u201d} {\u201cNew York Mets\u201d, \u201cMets\u201d} {\u201cNew York Mets\u201d, \u201cAmazin' Mets\u201d} {\u201cHarkat-ul-Mujahideen\u201d, \u201cMovement of Holy Warriors\u201d} {\u201cMedecins Sans Frontieres\u201d, \u201cDoctors Without Borders\u201d} {\u201cZagat\u201d, \u201cZagat Survey\u201d} {\u201cWalmart\u201d, \u201cWal-Mart\u201d} {\u201cTyco Healthcare\u201d, \u201cCovidien\u201d} {\u201cSafe Passage\u201d, \u201cCamino Seguro\u201d}"</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * known as * arg1'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'\u201cthis is another name for this organization\u201d'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'organizationAcronymHasName'</relationName><humanFormat>u'arg2 is an organization {known by the acronym} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationAlsoKnownAs'</generalizations><domain>u'organization'</domain><range>u'organization'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'companyAlsoKnownAs teamAlsoKnownAs'</mutexExceptions><knownNegatives>u'{"IBM","Google"}{"HP","Epson"}{"CMU","MIT"}{"Google","IBM"}{"Epson","HP"}{"MIT","CMU"}{"Stanford","Harvard"}{"Stanford","MIT"}'</knownNegatives><inverse>u'organizationNameHasAcronym'</inverse><seedInstances>u'{"FDA","Federal Drug Administration"}{"IRS","Internal Revenue Service"}{"IBM", "International Business Machines"}{"GM","General Motors"}{"NBC","National Broadcasting Corporation"}{"HP","Hewlett Packard"}{"GE","General Electric"}{"NFL","National Football League"}{"UCLA","University of California Los Angeles"}{"CMU","Carnegie Mellon University"}{"BP","British Petroleum"}{"DARPA","Defense Advanced Research Projects Agency"}{"FAA","Federal Aviation Administration"}{"MIT","Massachusetts Institute of Technology"} {\u201cCIC\u201d, \u201cCanadian Islamic Congress\u201d} {\u201cCRDF\u201d, \u201cCentury Regional Detention Center\u201d} {\u201cWMO\u201d, \u201cWorld Meteorological Organization\u201d} {\u201cCJC\u201d, \u201cCanadian Jewish Congress\u201d} {\u201cFEMA\u201d, \u201cFederal Emergency Management Agency\u201d} {\u201cFMCSA\u201d, \u201cFederal Motor Carrier Safety Administration\u201d} {\u201cMSF\u201d, \u201cMedecins Sans Frontieres\u201d} {\u201cTACC\u201d, \u201cTechnical Assistance and Cooperation Committee\u201d} {\u201cSLDN\u201d, \u201cServicemembers Legal Defense Network\u201d} {\u201cUNC\u201d, \u201cUnited National Congress\u201d}'</seedInstances><seedExtractionPatterns>u'"arg1 is an acronym for arg2", "arg1 is short for arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * known as * arg1'</queryString><editDate>u'2010-07-07'</editDate><author>u'Tom Mitchell'</author><curator>u''</curator><description>u'"this short name or acronym refers to this organization"'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u"Clearly in need of an acronym category.  In order to play nice with requiredForDomain and requiredForRange, I suppose we'd need specifically an organizationAcronym subcategory to use here."</comment><relationName>u'teamAlsoKnownAs'</relationName><humanFormat>u'arg1 is a sports team {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationAlsoKnownAs'</generalizations><domain>u'sportsTeam'</domain><range>u'sportsTeam'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'organizationAcronymHasName'</mutexExceptions><knownNegatives>u'{"Yankees","Red Sox"}{"Mets","Yankees"}{"Giants","Jets"}{"USC","UCLA"}'</knownNegatives><inverse>u'teamAlsoKnownAs'</inverse><seedInstances>u'{"New York Mets","Mets"}{"New York Yankees","Yankees"}{"New York Giants","Giants"}{"Steelers","Pittsburgh Steelers"}{"Cubs","Cubbies"}{"Cubs","Chicago Cubs"}{"LA Lakers","Lakers"}{"Celtics","Boston Celtics"}{"Bruins","UCLA Bruins"}{"Tarheels","UNC Tarheels"}{"Blue Devils","Duke Blue Devils"}{"Green Bay Packers","Packers"}{"Chicago Bulls","Bulls"} {\u201cJacksonville Jaguars\u201d, \u201cJags\u201d} {\u201cRed Sox\u201d, \u201cOlde Towne Team\u201d}'</seedInstances><seedExtractionPatterns>u'"arg2 is short for arg1", "arg1 is short for arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-07-07'</editDate><author>u'Tom Mitchell'</author><curator>u''</curator><description>u'"this is another name for this team"'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u'synonyms for team name'</comment><relationName>u'companyAlsoKnownAs'</relationName><humanFormat>u'arg1 is a company {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'organizationAlsoKnownAs'</generalizations><domain>u'company'</domain><range>u'company'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'organizationAcronymHasName'</mutexExceptions><knownNegatives>u'{"General Motors", "Ford"}{"Adobe", "Apple"}{"Dell", "Cisco"}{"United Airlines", "American Airlines"}{"American Airlines", "Southwest Airlines"}'</knownNegatives><inverse>u'companyAlsoKnownAs'</inverse><seedInstances>u'{"General Motors","GM"}{"Adobe Systems", "Adobe"}{"Apple","Apple Computer"}{"Dell", "Dell Computer"}{"Cisco", "Cisco Systems"}{"Southwest Airlines","Southwest"}{"Biogen","Biogen IDEC"}{"Dow Chemical Company","Dow Chemical"}{"United", "United Airlines"}{"Shell", "Shell Oil"} {\u201cAQR Capital Management\u201d, \u201cAQR\u201d} {\u201cBNC Mortgage\u201d, \u201cBNC\u201d} {\u201cDefensor Sporting\u201d, \u201cDefensor\u201d} {\u201cDenso\u201d, \u201cNipponDenso\u201d} {\u201cDirecTV\u201d, \u201cDirecTV Group\u201d} {\u201cEnergySolutions\u201d, \u201cEnvirocare of Utah\u201d} {\u201cFMR Corp.\u201d, \u201cFidelity Management and Resarch Co.\u201d} {\u201cFyffes PLC\u201d, \u201cFyffes\u201d} {\u201cHighland Capital Partners\u201d, \u201cHighland\u201d} {\u201cHindalco Industries\u201d, \u201cHindalco\u201d} {\u201cHong Kong Disneyland\u201d, \u201cHK Disneyland\u201d} {\u201cKonica Minolta\u201d, \u201cKonica Minolta Holding Inc\u201d} {\u201cMF GLobal\u201d, \u201cMF Global LLC\u201d} {\u201cMarkit\u201d, \u201cMarkit Group\u201d} {\u201cNEC Corp.\u201d, \u201cNEC\u201d} {\u201cPhiladelphia Inquirer\u201d, \u201cThe Inquirer\u201d} {\u201cRoyal Caribbean\u201d, \u201cRCCL\u201d} {\u201cTyco Healthcare\u201d, \u201cCovidien\u201d} {\u201cZagat\u201d, \u201cZagat Survey\u201d} {\u201cPhiladelphia Inquirer\u201d, \u201cPhillyInquirer\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-08-18'</editDate><author>u'Jayant'</author><curator>u''</curator><description>u''</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u''</comment><relationName>u'cityAlsoKnownAs'</relationName><humanFormat>u'arg1 is a city {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'synonymFor'</generalizations><domain>u'city'</domain><range>u'city'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Pittsburgh", "Philadelphia"}{"St. Petersburg", "St. Louis"}{"Los Angeles", "New York City"}{"Fort Lauderdale", "Miami"}{"Paris","Madrid"}'</knownNegatives><inverse>u'cityAlsoKnownAs'</inverse><seedInstances>u'{"New York City","New York"}{"Los Angeles","L.A."}{"Philadelphia","Philly"}{"Rio de Janeiro","Rio"}{"Mumbai","Bombay"}{"Washington D.C.", "D.C."}{"Salt Lake", "Salt Lake City"}{"St. Petersburg", "St Petersburg"}{"St Louis","St. Louis"}{"Fort Lauderdale", "Ft. Lauderdale"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-08-18'</editDate><author>u'Jayant'</author><curator>u''</curator><description>u'"this is another name for this city"'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u''</comment><relationName>u'personAlsoKnownAs'</relationName><humanFormat>u'arg1 is a person {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'synonymFor'</generalizations><domain>u'person'</domain><range>u'person'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personAlsoKnownAs'</inverse><seedInstances>u'{\u201cthe Donald\u201d, \u201cDonald Trump\u201d} {\u201cOprah\u201d, \u201cOprah Winfrey\u201d} {\u201cAbdurrahman Wahid\u201d, \u201cGus Dur\u201d} {\u201cRudolf Wanderone\u201d, \u201cMinnesota Fats\u201d} {\u201cBob Wilson\u201d, \u201cBob Primrose Wilson\u201d} {"Charlie Hustle", "Pete Rose"} {"Tricky Dick", "Richard Nixon"} {"Honest Abe", "Abraham Lincoln"} {"Doctor Death", "Jack Kevorkian"} {"Buffalo Bill", "William Cody"} {"Sarko", "Nicolas Sarkozy"} {"King of Pop", "Michael Jackson"} {\u201cHiram Monserrate\u201d, \u201cHiram Slasher Monserrate\u201d} {\u201cSteve Schalchlin\u201d, \u201cSteve Shalchlin\u201d} {\u201cSteve Schalchlin\u201d, \u201cSteve Schlachlin\u201d} {\u201cKimora Lee Simmons\u201d, \u201cKimora Lee Perkins\u201d} {\u201cLinda Hogan\u201d, \u201cLinda Marie Bollea\u201d} {\u201cDavid Coleman Headley\u201d, \u201cDawood Jilani\u201d} {\u201cDavid Coleman Headley\u201d, \u201cDaood Gilani\u201d} {\u201cAbdul Rahim Noor\u201d, \u201cAbdul Rahim\u201d} {\u201cAbu Zubaydah\u201d, \u201cAbu Zubeidah\u201d} {\u201cAl Hubbard\u201d, \u201cAllan Hubbard\u201d} {\u201cAlberto Gonzales\u201d, \u201cAl Gonzales\u201d} {\u201cBarry Goldwater\u201d, \u201cMr . Conservative\u201d} {\u201cBarry Goldwater\u201d, \u201cUncle Barry\u201d} {\u201cBill McAllister\u201d, \u201cWilliam McAllister\u201d} {\u201cChristopher Bentley\u201d, \u201cChrist Bentley\u201d} {\u201cHu Sheng\u201d, \u201cHu Sheng-cheng\u201d} {\u201cHussein Kamel\u201d, \u201cHussein Kamel Hassan\u201d} {\u201cJames B . Stewart\u201d, \u201cJames Stewart\u201d} {\u201cJerome Robbins\u201d, \u201cJerome Wilson Rabinowitz\u201d} {\u201cJohn Kerry\u201d, \u201cJohn F . Kerry\u201d} {\u201cJuliette Binoche\u201d, \u201cLa Binoche\u201d} {\u201cYolanda King\u201d, \u201cYoki\u201d} {\u201cWilliam Verity\u201d, \u201cCalvin Verity Jr .\u201d} {\u201cVernon Bellecourt\u201d, \u201cDaybreak\u201d} {\u201cThomas Meskill\u201d, \u201cTough Tommy\u201d} {\u201cTheodor Kollek\u201d, \u201cTeddy Kollek\u201d} {\u201cRobert McNair\u201d, \u201cRobert M . Flowers\u201d} {\u201cRemy Ma\u201d, \u201cRemy Martin\u201d} {\u201cPaavo Nurmi\u201d, \u201cFlying Finn\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'\u201cthis is another name for this person\u201d'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'athleteAlsoKnownAs'</relationName><humanFormat>u'arg1 is an athlete {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personAlsoKnownAs'</generalizations><domain>u'athlete'</domain><range>u'athlete'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Arnold Palmer","Tiger Woods"}{"David Ortiz", "Manny Ramirez"}{"Ken Griffey Jr.","Barry Bonds"}{"Ben Rothlisberger","Brett Favre"}{"Shaq","Kobe Bryant"}'</knownNegatives><inverse>u'athleteAlsoKnownAs'</inverse><seedInstances>u'{"Ken Griffey Jr", "Ken Griffey Jr."}{"O.J. Simpson", "O J Simpson"}{"Arnold Palmer", "legendary Arnold Palmer"}{"Cabell Robinson", "Cabell B. Robinson"}{"Catcher Ivan Rodriguez", "Ivan Rodriguez"}{"Herrera Craig Brazell", "Craig Brazell"}{"Luis G Rivera", "Luis Rivera"}{"Marion Barber III", "Marion Barber"}{"Mr. Travis Tobaben", "Travis Tobaben"}{"Shaq","Shaquille O\u2019Neal"} {"Elroy Hirsch", "Crazy Legs"} {"Hands of Stone", "Roberto Duran"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-08-18'</editDate><author>u'Jayant'</author><curator>u''</curator><description>u'"this is another name for this athlete"'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u''</comment><relationName>u'coachAlsoKnownAs'</relationName><humanFormat>u'arg1 is a sports coach {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personAlsoKnownAs'</generalizations><domain>u'coach'</domain><range>u'coach'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'coachAlsoKnownAs'</inverse><seedInstances>u'{"Bobby Johnson","Coach Johnson"}{"Mike Mularkey","Coach Mularkey"}{"Gary Kubiak","Head Coach Gary Kubiak"}{"Bill Parcells","Parcells"}{"Chris Thompson","Coach Thompson"}{"Coach Wooden","John Wooden"}{"Phil Garner","Manager Phil Garner"}{"Dusty Baker","Manager Dusty Baker"}{"Bobby Williams","Bob Williams"}{"Bob Stoops","Head Coach Bob Stoops"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-08-18'</editDate><author>u'Jayant'</author><curator>u''</curator><description>u'"this is another name for this coach"'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u''</comment><relationName>u'stadiumAlsoKnownAs'</relationName><humanFormat>u'arg1 is a stadium or event venue {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'synonymFor'</generalizations><domain>u'stadiumOrEventVenue'</domain><range>u'stadiumOrEventVenue'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stadiumAlsoKnownAs'</inverse><seedInstances>u'{"Navasota Rattler Stadium", "Rattler Stadium"}{"TD Waterhouse Center", "TD Waterhouse Centre"}{"Lake Charles Civic Center Arena", "Lake Charles Civic Center"}{"Meadowlands Complex","Meadowlands Sports Complex"}{"Mile High Stadium","Invesco Field at Mile High"}{"Classic Center Theatre","Classic Center"}{"Kimbrough Memorial Stadium","Kimbrough Stadium"}{"Shubert Theatre", "Shubert Theater"}{"Dodger Stadium", "Dodgers Stadium"}{"Brown Stadium", "Browns Stadium"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-08-18'</editDate><author>u'Jayant'</author><curator>u''</curator><description>u'"this is another name for this stadium or event venue"'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u''</comment><relationName>u'countryAlsoKnownAs'</relationName><humanFormat>u'arg1 is a country {also known as} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'synonymFor'</generalizations><domain>u'country'</domain><range>u'country'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"United States", "United Kingdom"}{"North Korea", "South Korea"}{"France", "Germany"}{"United States of America", "Canada"}{"Mexico", "Spain"}'</knownNegatives><inverse>u'countryAlsoKnownAs'</inverse><seedInstances>u'{"Dominican Republic", "The Dominican Republic"}{"U.S.A.", "United States of America"}{"Somali Republic","Somalia"}{"Yugoslav Federation", "Yugoslavia"}{"Bosnia", "Bosnia Herzegovina"}{"S Korea", "South Korea"}{"The Philippines","Philippines"}{"Laos", "Laos People\u2019s Democratic Republic"}{"Tadjikistan", "Tajikistan"}{"The United Kingdom","United Kingdom"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * known as * arg2'</queryString><editDate>u'2010-08-18'</editDate><author>u'Jayant'</author><curator>u''</curator><description>u'"this is another name for this country"'</description><freebaseID>u'/common/topic/alias'</freebaseID><comment>u''</comment><relationName>u'atDate'</relationName><humanFormat>u'arg1 {happened at} the date arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'date'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan academicFieldConcernsSubject'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'dateOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR on) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'assigns dates to things.'</description><freebaseID>u'none'</freebaseID><comment>u'Umbrella relation for assigning dates to things.'</comment><relationName>u'atLocation'</relationName><humanFormat>u'the {location of} arg1 is arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'mutualProxyFor subpartOf isTallerThan isShorterThan academicFieldConcernsSubject'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locatedAt'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * located (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'assigns locations to things.'</description><freebaseID>u'none'</freebaseID><comment>u'Umbrella relation for assigning locations to things.'</comment><relationName>u'agentInvolvedWithItem'</relationName><humanFormat>u'arg1 is an agent that has {something to do with} the item arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'agent'</domain><range>u'item'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentCreated agentControls agentOwns mutualProxyFor isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'itemInvolvedWithAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * involved with * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u"Most general agent-to-item relation.  As with agentInteractsWithAgent, we'll use this for states of being as well as actions, at least for now."</description><freebaseID>u'none'</freebaseID><comment>u"Most general agent-to-item relation.  As with agentInteractsWithAgent, we'll use this for states of being as well as actions, at least for now."</comment><relationName>u'agentRelatedToLocation'</relationName><humanFormat>u'arg1 is an agent that has {something to do with} the location arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'atLocation'</generalizations><domain>u'agent'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationRelatedToAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Most general agent-to-location relation'</description><freebaseID>u'none'</freebaseID><comment>u'Most general agent-to-location relation'</comment><relationName>u'agentActsInLocation'</relationName><humanFormat>u'arg1 is an agent that can be {found in or does something in} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'agentRelatedToLocation'</generalizations><domain>u'agent'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationActedInByAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'As with agentInteractsWithAgent, we take existing at a location to be an action at that location.'</description><freebaseID>u'none'</freebaseID><comment>u'As with agentInteractsWithAgent, we take existing at a location to be an action at that location, at least for now.'</comment><relationName>u'agentCompetesWithAgent'</relationName><humanFormat>u'arg1 {competes with} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'agentInteractsWithAgent'</generalizations><domain>u'agent'</domain><range>u'agent'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'agentCompetesWithAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (competes OR compete OR competed OR competing) with * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Non-cooperative interaction.  Primary alternative to agentCollaboratesWithAgent.'</description><freebaseID>u'none'</freebaseID><comment>u'Non-cooperative interaction.  Primary alternative to agentCollaboratesWithAgent.'</comment><relationName>u'agentParticipatedInEvent'</relationName><humanFormat>u'arg1 {participated in} the event arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'subpartOf'</generalizations><domain>u'agent'</domain><range>u'event'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentCausedEvent'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'eventHasParticipantAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (participates OR participate OR participated OR participating) in * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'identifies participants in events'</description><freebaseID>u'none'</freebaseID><comment>u'Umbrella relation for identifying participants in events'</comment><relationName>u'agentCausedEvent'</relationName><humanFormat>u'arg1 {caused} the event arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentCreated'</generalizations><domain>u'agent'</domain><range>u'event'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentParticipatedInEvent'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'eventCausedByAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (causes OR cause OR caused OR causing) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u"Companion to agentParticipatedInEvent.  Note that one needn't participate in an event in order to be a causal factor."</description><freebaseID>u'none'</freebaseID><comment>u"Companion to agentParticipatedInEvent.  Note that one needn't participate in an event in order to be a causal factor."</comment><relationName>u'agentRepresentsOrganization'</relationName><humanFormat>u'arg1 {represents} the organization arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'agentBelongsToOrganization proxyFor'</generalizations><domain>u'humanAgent'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personBelongsToOrganization'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationRepresentedByAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (represents OR represent OR represented OR representing) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Specialization of proxyFor for agent-to-organization relations. populate=false only because presumed to be uninteresting'</description><freebaseID>u'none'</freebaseID><comment>u'Specialization of proxyFor for agent-to-organization relations. populate=false only because presumed to be uninteresting'</comment><relationName>u'agentOwns'</relationName><humanFormat>u'arg1 {owns} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'humanAgent'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentControls agentCreated agentInvolvedWithItem subpartOf agentContributedToCreativeWork isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'ownedByAgent'</inverse><seedInstances>u'{"Barak Obama", "Wii"} {"Google", "blogging platform"}'</seedInstances><seedExtractionPatterns>u'"arg1 owns a arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (owns OR own OR owned OR owning) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'"an agent owns any object, animal, product, company, etc."'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agentCreated'</relationName><humanFormat>u'arg1 {created} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'agent'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentControls agentOwns agentInvolvedWithItem subpartOf agentContributedToCreativeWork isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'createdByAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (creates OR create OR created OR creating) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'general relation to identify creation and authorships'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agentCreatedOrganization'</relationName><humanFormat>u'arg1 {created} the organziation arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentCreated'</generalizations><domain>u'person'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationCreatedByPerson'</inverse><seedInstances>u'{\u201cAbubakar Abdurajak Janjalani\u201d, \u201cAbu Sayyaf\u201d}, {\u201cCol. William C. Church\u201d, \u201cNational Rifle Association\u201d} {\u201cGen. George Wingate\u201d, \u201cNational Rifle Association\u201d} {\u201cRon Silver\u201d, \u201cCreative Coalition\u201d} {\u201cAlec Baldwin\u201d, \u201cCreative Coalition\u201d} {\u201cSusan Sarandon\u201d, \u201cCreative Coallition\u201d} {\u201cKevin Jennings\u201d, \u201cGLSEN\u201d} {\u201cRonny Naftaniel\u201d, \u201cCIDI\u201d} {\u201cJimmy Carter\u201d, \u201cFEMA\u201d} {\u201cWilbur L. Ross Jr.\u201d, \u201cInternational Steel Group\u201d} {\u201cPeter Hart\u201d, \u201cPeter D. Hart Research Associates\u201d} {\u201cClifford Asness\u201d, \u201cAQR Capital Management\u201d} {\u201cRev. Al Sharpton\u201d, \u201cNational Action Network\u201d} {\u201cTim Zagat\u201d, \u201cZagat\u201d} {\u201cNina Zagat\u201d, \u201cZagat\u201d} {\u201cCornelius Vander Starr\u201d, \u201cThe Starr Foundation\u201d} {\u201cPercy Sonn\u201d, \u201cScorpions\u201d} {\u201cHanley Denning\u201d, \u201cSafe Passage\u201d} {\u201cNur Misuari\u201d, \u201cMoro National Liberation Front\u201d} {\u201cJames Dobson\u201d, \u201cFocus on the Family\u201d} {\u201cAlec Baldwin\u201d, \u201cCreative Coalition\u201d} {\u201cKen Nelson\u201d, \u201cCountry Music Association\u201d} {\u201cPeter Akinola\u201d, \u201cConvocation of Anglicans in North America\u201d} {\u201cTed Arison\u201d, \u201cCarnival Cruise Lines\u201d} {\u201cRay Daniels\u201d, \u201cAnthem Records\u201d} {\u201cKurt Huang\u201d, \u201cBitPass\u201d} {\u201cDries Buytaert\u201d, \u201cDrupal\u201d} {\u201cSilvio Scaglia\u201d, \u201cFastweb\u201d} {\u201cChung Ju-yung\u201d, \u201cHyundai Motor Company\u201d} {\u201cFelix Dzerzhinsky\u201d, \u201cNKVD\u201d} {\u201cJimmy Lai\u201d, \u201cNext Media\u201d} {\u201cPhil Knight\u201d, \u201cNike\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (creates OR create OR created OR creating) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The person, organization, or geopoiltical entity that founded the given organization'</description><freebaseID>u''</freebaseID><comment>u'Rename to personCreatedOrganization'</comment><relationName>u'agentLeadsOrganization'</relationName><humanFormat>u'arg1 {leads} the organization arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'agentRepresentsOrganization, agentControls'</generalizations><domain>u'humanAgent'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationLeadByAgent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * lead by * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'General relation as with certain political positions, we have an agent that controls the thing that he works for'</description><freebaseID>u'none'</freebaseID><comment>u"As with certain political positions, we have an agent that controls the thing that he works for.  Should we say that he is both hierarchically above and below the organization?  I'm skirting that for now by not saying that he's hierarchically above it.  populate=false because personLeadsOrganization probably captures everything useful."</comment><relationName>u'locationExistsAtDate'</relationName><humanFormat>u'arg1 {exists at date} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'atDate'</generalizations><domain>u'location'</domain><range>u'date'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'dateAtWhichExistsLocation'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR on) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Most general location-to-date relation.  Note that locations are not eternal.'</description><freebaseID>u'none'</freebaseID><comment>u'Most general location-to-date relation.  Note that locations are not eternal.'</comment><relationName>u'locationLocatedWithinLocation'</relationName><humanFormat>u'arg1 is a location {located within} arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'atLocation subpartOf'</generalizations><domain>u'location'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'cityLiesOnRiver'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationContainsLocation'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'a location that is a subpart of another location'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/location/location", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }]'</freebaseID><comment>u''</comment><relationName>u'itemInvolvedInEvent'</relationName><humanFormat>u'arg1 is an item {involved with} the event arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'subpartOf'</generalizations><domain>u'item'</domain><range>u'event'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'eventInvolvedItem'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (involves OR involve OR involved OR involving) * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Umbrella relation for identifying items in events.'</description><freebaseID>u'none'</freebaseID><comment>u'Umbrella relation for identifying items in events.'</comment><relationName>u'itemExistsAtDate'</relationName><humanFormat>u'arg1 is an item that {existed at} date arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'atDate'</generalizations><domain>u'item'</domain><range>u'date'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'dateAtWhichExistsItem'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR on) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'a item exists in a determined time (or date)'</description><freebaseID>u'none'</freebaseID><comment>u'See what sticks...'</comment><relationName>u'itemUsedWithItem'</relationName><humanFormat>u'arg1 is an item that is {used with} arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'item'</domain><range>u'item'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'mutualProxyFor subpartOf agriculturalProductContainChemical isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'itemUsedWithItem'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * used with * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Most general item-to-item relation.'</description><freebaseID>u'none'</freebaseID><comment>u'Most general item-to-item relation.'</comment><relationName>u'itemUsedAtLocation'</relationName><humanFormat>u'arg1 is an item {used at} the location arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'atLocation'</generalizations><domain>u'item'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'itemExistsAtLocation'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationOfItemUse'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * used (in OR at OR by) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'an item used in a specific place'</description><freebaseID>u'none'</freebaseID><comment>u'Note that this is use rather than existence.  See itemExistsAtLocation'</comment><relationName>u'itemExistsAtLocation'</relationName><humanFormat>u'arg1 is an item {found at} the location arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'atLocation'</generalizations><domain>u'item'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'itemUsedAtLocation'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationOfItemExistence'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-05-25'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'An item that is typically found in a particular place.  While most any item could concievably exist at most any place, the intent for this relation and its children is to capture \u201ccommon knowledge\u201d about what would be expected to be found where.'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'eventCausedEvent'</relationName><humanFormat>u'arg2 is an event {caused by} the event arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'event'</domain><range>u'event'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'mutualProxyFor isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'eventCausedByEvent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * caused by * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Any events that is caused by another event'</description><freebaseID>u'none'</freebaseID><comment>u'Chains of events'</comment><relationName>u'eventSubEventOf'</relationName><humanFormat>u'arg1 is a {sub-event within} the event arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'subpartOf'</generalizations><domain>u'event'</domain><range>u'event'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'mutualProxyFor'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'eventSuperEventOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'event that is happened as a sub-event of another event'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/time/event", "/time/event/included in event": [{ "name": null, "/common/topic/alias": [], "type": "/time/event" }] }]'</freebaseID><comment>u'Granularity of events'</comment><relationName>u'eventAtLocation'</relationName><humanFormat>u'arg1 is an event {at the location} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atLocation'</generalizations><domain>u'event'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationOfEvent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the location that an event is happened at'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/time/event", "/time/event/locations": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }]'</freebaseID><comment>u''</comment><relationName>u'organizationActsInLocation'</relationName><humanFormat>u'arg1 is an organization that {exists or does something} at the location arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'agentActsInLocation'</generalizations><domain>u'organization'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationActedInByOrganization'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'location of an organization or company'</description><freebaseID>u'none'</freebaseID><comment>u'As with agentActsInLocation, existence is taken to be an action.  populate=false beacuse agentActsInLocation is populate=true'</comment><relationName>u'personBelongsToOrganization'</relationName><humanFormat>u'arg1 is a person who {belongs to} the organization arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentBelongsToOrganization'</generalizations><domain>u'person'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentRepresentsOrganization'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationHasPerson'</inverse><seedInstances>u'{"Gregory", "Warrington"} {"Mike Gregory", "Great Britain rugby"} {"Labine", "Los Angeles Dodgers"} {"Steve Fenwick", "Cardiff"} {"Manuel Galrinho Bento", "Portugal"} {"Burdette", "Milwaukee Braves"} {"Ian Porterfield", "Sunderland"} {"Sardesai", "India"} {"Ray Gravell", "Wales"}{"Mickey Mantle", "Hall of Fame"} {"New England Patriots defensive end", "New England Patriots"} {"Gregory", "Great Britain"} {"Bruce Hay", "Scotland"} {"Willie Mays", "Hall of Fame"} {"Ray Gravell", "Irish Lions"} {"Sir Stanley Matthews", "Stoke side"} {"Woodruff", "US Army"} {"Dougan", "the midlands club"} {"Alan Ball", "World Cup side"} {"Piquet", "Renault"}{"Heikki Kovalainen", "McLaren"}{"racer", "Sauber"} {"Heidfeld", "Sauber"} {"Kovalainen", "the French team"} {"Rosberg", "team"} {"Coulthard", "Williams"} {\u201cJenson Button", "BAR"} {"Barrichello", "Ferrari"} {"Michael Schumacher", "Ferrari"} {"Massa", "Sauber"}{"Heidfeld", "Prost"} {"Massa", "Ferrari"} {"Heikki Kovalainen", "Renault"}{"Sutil", "Midland"} {"Trulli", "Renault"} {"Coulthard", "McLaren"} {"Coulthard", "Red Bull"} {"Webber", "Minardi"}{"Raikkonen", "Sauber"} {"Raikkonen", "Ferrari"} {"Button", "Honda"} {"Fisichella", "Renault"} {"Chris Paul", "New Orleans Hornets"} {"Saitiev", "Russia\'s national squad"}{"Tishchenko", "Russia\'s Olympic team"} {"Pau Gasol", "Los Angeles Lakers"} {"Natalia Bessmertnova", "Bolshoi Theatre"} {"Christodoulos", "Greek Orthodox Church"} {"Alexy II", "Russian Orthodox Church"} {"Alexy II", "Russian Orthodox Church"} {"George Habash", "Popular Front for the Liberation of Palestine"} {"Natalia Bessmertnova", "Bolshoi Theatre"} {"Manuel Marulanda Velez", "FARC"} {"Christodoulos", "Greek Orthodox Church"} {"Viso", "Minardi"} {"Briscoe", "Penske Racing"} {"Milka Duno", "SAMAX Motorsports"} {"Justin Wilson", "RuSport team"} {"Perera", "Japanese company"} {"Sebastien Bourdais", "Newman/Haas/Lanigan Racing"} {"Helio Castroneves", "Penske Racing"} {"Oriol Servia", "KV Racing Technology"} {"Jay Howard", "Roth Racing"} {"Marty Roth", "Roth Racing"}{"Scott Dixon", "Target Chip Ganassi Racing"} {"Kanaan", "AGR"} {"Danica Patrick", "Andretti Green Racing"} {"Bruno Junqueira", "Target Chip Ganassi Racing"} {"Enrique Bernoldi", "Conquest Racing"} {"Frank Perera", "Conquest Racing"} {"Bernoldi", "Arrows"} {"Hideki Mutoh", "Andretti Green Racing"} {"Ernesto Jose Viso", "HVM Racing"} {"Bruno Junqueira", "Newman/Haas Racing"} {"Rice", "Rahal Letterman Racing"} {"Marco Andretti", "Andretti Green Racing"} {"Peter Fitzwilliam", "House of Lords"} {"Josh Bolton", "White House"} {"Martinez", "New York Mets"} {"Phyllis Curtin", "City Opera"} {"Sills", "New York City Opera"} {"Sills", "City Opera"} {"Sills", "New York City Opera"} {"Sills", "City Opera"} {"Israel Hernandez", "campaign staff"} {"Clay Johnson", "transition team"} {"Montgomery", "Presidential Inaugural Committee"} {"Brian Montgomery", "gubernatorial campaign"} {"Todd Beyer", "gubernatorial inaugural committee"} {"Lloyd F. MacMahon", "US District Court for the Southern District of New York"} {"Peter F. Vallone Sr.", "Democrat"} {"Mark Green", "Democrat"} {"Wen Jiabao", "China"} {"Wang Xiaofeng", "China\'s State Council"} {"Hu Jintao", "China"} {"Jones", "Atlanta Braves"} {"Guo", "China"} {"Bardem", "Spanish rugby team"} {"Argentine", "team"} {"GUO JINGJING", "Chinese national team"} {"Gingrich", "Republican Party"} {"Carl Levin", "Democrats"} {"Jesse Helms", "Republicans"} {"Pete V. Domenici", "Senate"} {"Pete V. Domenici", "Republican"} {"Slade Gorton", "Senate"} {"Pete V. Domenici", "Senate Energy and Natural Resources Committee"} {"Newt Gingrich", "House"} {"Richard H. Bryan", "Senate"} {"Joseph A. Jeffries", "320th Psychological Operations Company"} {"Jeffrey D. Kettle", "2nd Battalion, 7th Special Forces Group"} {"Jimmy Carabello", "10th Mountain Division"} {"Dick Tracewski", "Tigers"} {"Ozzie Virgil", "Tigers"} {"Ozzie Virgil", "the Tigers"} {"Armando Galarraga", "Tigers"} {"Marsans", "Yankees"} {"Rick Porcello", "Tigers"} {"Jackie Robinson", "the Brooklyn Dodgers"} {"Rafael Almeida", "Cincinnati"} {"Tony Fernandez", "Blue Jays"} {"Todd Jones", "Tigers"} {"Samuel", "the Phillies"} {"Armando Marsans", "Cincinnati"} {"Samuel", "Tigers"} {"Robinson", "Dodgers"} {"Pudge Rodriguez", "Yankees"} {"Tom DeLay", "House"} {"Sig Rogich", "Republican"} {"McCain", "Senate Indian Affairs Committee"} {"Ralph Reed", "Christian Coalition"} {"Richard F. Velky", "Schaghticokes"} {"G.G. Ware", "the bond and taxation committee of the state chamber of commerce"} {"Trong", "CPVCC"} {"Trong", "Central Theoretical Council"} {"Trong", "Hanoi Party Committee"} {"Trong", "Political Bureau"} {"Trong", "NA"} {"Nguyen Duc Kien", "Economics Affairs and Budget Commission"} {"Nguyen Van An", "NA"} {"Nguyen Phu Trong", "National Assembly (NA) of Vietnam"} {"Tong Thi Phong", "Commission for Mass Mobilization"} {"Baghdasaryan", "National Assembly"} {"Baghdasaryan", "Orinats Yerkir (Rule of Law) Party"} {"Mugabe", "ZANU-PF"} {"Makoni", "ZANU-PF Politburo"} {"Mugabe", "National Democratic Party"} {"He", "Southern African Development Community"} {"Mugabe", "ZANU"} {"Arthur Mutambara", "MDC"} {"Makoni", "ZANU-PF Politburo"} {"Joshua Nkomo", "Zimbabwe African Peoples Union"} {"Herbert Chitepo", "Zimbabwe African National Union"} {"Xiao Haopeng", "Chinese shooting squad"} {"Dichter", "Knesset"} {"Dichter", "Kadima"} {"Sheetrit", "Likud"} {"Sheetrit", "Knesset"} {"Sheetrit", "newly formed party"} {"Yang", "People\'s Liberation Army"} {\u201cAditya Parameswaran\u201d, \u201cUIUC\u201d} {\u201cIllah Nourbakhsh\u201d, \u201cCMU\u201d} {\u201cJoel Spencer\u201d, \u201cNYU\u201d} {\u201cNadia Heninger\u201d, \u201cUniversity of Pennsylvania\u201d} {\u201cJeremiah Blocki\u201d, \u201cCMU\u201d} {\u201cNoah Snavely\u201d, \u201cCornell\u201d} {\u201cTuomas Sandholm\u201d, \u201cCMU\u201d} {\u201cJessica Cantlon\u201d, \u201cUniversity of Rochester\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (in OR at OR on OR of) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'organization or company that person is belonged to'</description><freebaseID>u'none'</freebaseID><comment>u'person-specific version of its parent'</comment><relationName>u'personLeadsOrganization'</relationName><humanFormat>u'arg1 is a person who {leads} the organization arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'agentLeadsOrganization'</generalizations><domain>u'person'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personGraduatedSchool'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationLeadByPerson'</inverse><seedInstances>u'{"Thoraya Obaid", "Population Fund"} {"Al Gore", "US"} {"Slobodan Milosevic", "Yugoslav"} {"Toomas Hendrik Ilves", "Estonia"} {"Hanna Gronkiewicz-Waltz", "Warsaw"} {"Mohammad Khatami", "Iran"} {"Antoinette Batumubwira", "Burundi"} {"Mikhail Gorbachev", "Soviet"} {"Frank-Walter Steinmeier", "German"} {"Philippe Val", "Charlie Hebdo"} {"Ramush Haradinaj", "Kosovo"} {"Robert Mugabe", "Zimbabwe"} {"Zoran Djindjic", "Serbia"} {"batsman", "South Africa"} {"Silvio Berlusconi", "Italian"}{"Derwall", "West Germany"} {"Ski jump guru", "Germany"} {"Nikolai Khromov", "Russia\'s Olympic team"} {"V.P. Singh", "Indian"} {"Suharto", "Indonesian"} {"Levy Mwanawasa", "Zambian"} {"Alexy II", "Russian Orthodox Church"} {"Hua Guofeng", "Chinese"} {"Archbishop Christodoulos", "Greek Orthodox Church"} {"Christodoulos", "Greek Orthodox Church"} {"V.P. Singh", "Indian"} {"Alexy II", "Russian Orthodox Church"} {"Kanaan", "AGR"} {"Joseph M. Tucci", "EMC"} {"George F. Colony", "Forrester Research"} {"Bill Gates", "Microsoft"} {"Castello", "Xoma"} {"Samuel D. Isaly", "OrbiMed Advisors"} {"John L. Castello", "Xoma"} {"John "Honey Fitz" Fitzgerald", "Boston"} {"Cole", "Maui Land and Pineapple"} {"David Cole", "Maui Land and Pineapple"} {"Sarah Caldwell", "Opera Company of Boston"} {"Sills", "City Opera"} {"Tom LaSorda", "Chrysler"} {"Ronald Kolka", "Chrysler"} {"Tom LaSorda", "Chrysler"} {"Juergen Hubbert", "Mercedes Car Group"} {"Ron Kutz", "Dallas Dodge Chrysler Jeep"} {"Gerald Meyers", "American Motors Corp."} {"Eckhard Cordes", "Mercedes Car Group"} {"Israel Hernandez", "U.S. and foreign commercial service"} {"Clay Johnson", "transition team"} {"David N. Dinkins", "Manhattan borough"} {"Stanley Friedman", "Bronx Democratic"} {"Hu Jintao", "China"} {"Lang Cheng", "Immigration Bureau"} {"Richard Taylor", "International Hydropower Association"} {"Wen Jiabao", "China"} {"Zhang", "China Hydropower Engineering Society"} {"KEVIN RUDD", "Australia"} {"Sarkozy", "Neuilly"} {"NICOLAS SARKOZY", "France"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "Dubai"} {"John Howard", "Australia"} {"FIDEL", "Cuba"} {"Millard S. Drexler", "Gap"} {"Brian Reed", "Puccini Group"} {"Jeroen van der Veer", "Royal Dutch Shell"} {"Newt Gingrich", "House"}{"Lee R. Raymond", "Exxon Mobil"} {"Mike Jackson", "AutoNation"} {"O\'Reilly", "Chevron"} {"Hamid Karzai", "transitional administration"} {"Fidel Castro", "Cuba"} {"Al Avila", "Tigers"} {"Dave Dombrowski", "Tigers"} {"Randy Smith", "Tigers"} {"McCain", "Indian Affairs Committee"} {"Lanni", "MGM Mirage"} {"McCain", "Indian Affairs Committee"} {"John Engler", "Michigan"} {"Richard F. Velky", "Schaghticokes"} {"Ralph Reed", "Christian Coalition"} {"Susan Newman", "It"} {"Lou Piniella", "Tampa Bay Devil Rays"} {"Joe Maddon", "Tampa Bay Rays"} {"Charlie Crist", "Florida"} {"Joe Maddon", "Tampa Bay Rays"} {"Sarah Palin", "Alaska"} {"Lou Piniella", "Tampa Bay Devil Rays"} {"Alex Sink", "Florida"} {"G.G. Ware", "the bond and taxation committee of the state chamber of commerce"} {"Nguyen Phu Trong", "National Assembly (NA) of Vietnam"} {"Tong Thi Phong", "Commission for Mass Mobilization"} {"Nguyen Van An", "NA"} {"Nguyen Duc Kien", "Economics Affairs and Budget Commission"} {"Trong", "Central Theoretical Council"} {"Xie Fuzhan", "NBS"} {"Ter-Petrosyan", "Republic of Armenia"} {"Levon Ter-Petrosyan", "Armenia"} {"Levon Ter- Petrosyan", "Armenia"} {"Mugabe", "ZANU"} {"Herbert Chitepo", "Zimbabwe African National Union"} {"Robert Mugabe", "southern African country"} {"Joshua Nkomo", "Zimbabwe African Peoples Union"} {"Arthur Mutambara", "MDC"} {"Mugabe", "Zimbabwe"} {"Kwame Nkrumah", "Ghanian"} {"Mugabe", "Zimbabwe"} {"Arthur Mutambara", "MDC"} {"Julius Nyerere", "Tanzania"} {"Kenneth Kaunda", "Zambia"} {"Mugabe", "ZANU-PF"} {"Xu Haifeng", "Chinese national shooting team"} {"Xiao Haopeng", "Chinese shooting squad"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * lead by * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'person leading an organization/company'</description><freebaseID>u'none'</freebaseID><comment>u'person-specific version of its parent'</comment><relationName>u'personHasResidenceInLocation'</relationName><humanFormat>u'arg1 is a person who {has residence in} the location arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'agentActsInLocation'</generalizations><domain>u'person'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personBornInLocation personDiedInLocation'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationResidenceOfPerson'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (live OR lives OR ilved OR living) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the location that person has residence in'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/places lived": [{ "type": "/people/place lived", "/people/place lived/location": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }] }]'</freebaseID><comment>u'A person may exist in places beyond those in which he has residence'</comment><relationName>u'personHasResidenceInGeopoliticalLocation'</relationName><humanFormat>u'arg1 is a person who {has residence in} the geopolitical location arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personHasResidenceInLocation'</generalizations><domain>u'person'</domain><range>u'geopoliticalLocation'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'geopoliticalLocationResidenceOfPersion'</inverse><seedInstances>u'{"Silvio Berlusconi", "Italian"} {"Aime Cesaire", "Martinique"} {"Hua Guofeng", "Chinese"} {"Suharto", "Indonesian"} {"Richard Widmark", "American"} {"Jesse Helms", "US"} {"Mildred Jeter Loving", "Virginia"} {"Jesse Helms", "North Carolina"} {"V.P. Singh", "Indian"} {"Richard Widmark", "Connecticut"} {"Barack Obama", "US"} {"Bobby Fischer", "Iceland"} {"Arthur C. Clarke", "Sri Lanka"} {"Levy Mwanawasa", "Zambian"} {"Aime Cesaire", "Martinique"} {"Bobby Fischer", "Iceland"} {"Arthur C. Clarke", "Sri Lanka"} {"Isaac Hayes", "American"} {"Hua Guofeng", "Chinese"} {"V.P. Singh", "Indian"} {"Suharto", "Indonesian"} {"Mildred Jeter Loving", "Virginia"} {"Richard Widmark", "Connecticut"} {"wife", "Seattle"} {"Rose", "Dorchester"} {"Rose", "Concord"} {"Kathleen", "France"} {"Kick", "England"} {"Christine Moellering", "Ypslanti"} {"Alix Goldsmith", "Mexico"} {"Alix Goldsmith", "Jalisco"} {"Goffredo Marcaccini", "Mexico"} {"Goffredo Marcaccini", "Jalisco"} {"John Gilderbloom", "Louisville"} {"Nan Wang", "China"} {"John Gilderbloom", "Ky."} {"Christine Moellering", "Mich."} {"Mark Moellering", "Ypslanti"} {"Mark Feng", "Taiwan"} {"Mark Moellering", "Mich."} {"James Goldsmith", "Jalisco"} {"James Goldsmith", "Mexico"} {"Christine Moellering", "Mich."} {"Oliver Meade", "College Park"} {"Mark Moellering", "Ypsilanti"} {"James Goldsmith", "Cuixmala"} {"Oliver Meade", "Md."} {"Christine Moellering", "Ypsilanti"} {"Christine Moellering", "Ypslanti"} {"Vivian Yu", "Los Angeles"} {"Lillian Gordon", "Pembroke Pines"} {"Shirley Gordon", "Tallahassee"} {"Gordon", "St. Petersburg"} {"her", "Manhattan"} {"Nancy Bliss", "N.Y."} {"Nancy Bliss", "Woodstock"} {"Sills", "Cleveland"} {"Diana Greenough", "Mass."} {"Lindley Thomasett", "Bedford"} {"Lindley Thomasett", "N.Y."} {"Diana Greenough", "Lancaster"} {"Lu Youbing", "Jianmin Village"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "Dubai"} {"QUSAI KHIDR", "Saudi Arabia"} {"Mukwege", "Congo"} {"JAVIER BARDEM", "Spain"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "United Arab Emirates"} {"GUO JINGJING", "Beijing"} {"GUO JINGJING", "China"} {"LORENA OCHOA", "Mexico"} {"Mukwege", "Bukavu"} {"LIONEL MESSI", "Spain"} {"RAJENDRA PACHAURI", "India"} {"RAJENDRA PACHAURI", "New Delhi"} {"FIDEL", "Havana"} {"FIDEL", "Cuba"} {"CARLOS REYGADAS", "Mexico City"} {"JOSE PADILHA", "Brazil"} {"Sue Miller", "Boston"} {"Dagoberto Gilb", "Texas"} {"Meg Rosoff", "London"} {"Kostow", "Chicago"} {"Corbo", "Outer Richmond"} {"Edward J. Markey", "Mass"} {"Domenici", "New Mexico"} {"Charles E. Schumer", "N.Y."} {"Carl Levin", "Michigan"} {"Frank H. Murkowski", "Alaska"} {"Jesse Helms", "North Carolina"} {"Slade Gorton", "Wash"} {"Richard H. Bryan", "Nev"} {"John D. Dingell", "Detroit"} {"Mike Castle", "Del"} {"Cheryl", "Mich."} {"Cheryl", "Cheboygan"} {"Jeffrey D. Kettle", "Texas City"} {"Betsy Jeffries", "Beaverton"} {"Bryan A. Brewster", "Calif."} {"Betsy Jeffries", "Ore."} {"Terry Blaskowski", "Cheboygan"} {"Emmanuel Hernandez", "Yauco"} {"Jeffrey D. Kettle", "Texas"} {"Andrews", "Maine"} {"Andrews", "Solon"} {"Bryan A. Brewster", "Fontana"} {"Larry I. Rougle", "West Jordan"} {"Larry I. Rougle", "Utah"} {"Terry Blaskowski", "Mich."} {"Michael J. Kelley", "Scituate"} {"Michael J. Kelley", "Mass."} {"his", "Venezuela"} {"his", "Dominican Republic"} {"governor", "Connecticut"} {"John Engler", "Michigan"} {"senator", "Arizona"} {"Sig Rogich", "Nevada"} {"Tom DeLay", "Texas"} {"Morris K. Udall", "Arizona"} {"Sig Rogich", "Nevada"} {"Kent Hance", "Texas"} {"Wes Gullett", "Phoenix"} {"Paul Newman", "Westport"} {"Arthur", "Shaker Heights"} {"Paul", "Shaker Heights"} {"Newman", "Hollywood"} {"Arthur", "Ohio"} {"Paul", "Ohio"} {"Woodward", "Conn"} {"Newman", "Conn. "} {"Woodward", "Westport"} {"Newman", "Westport"} {"Woodward", "Hollywood"} {"Paul Newman", "Conn"} {"Barack Obama", "Illinois"} {"Alex Sink", "Florida"} {"Sarah Palin", "Alaska"} {"Charlie Crist", "Florida"} {"Barack Obama", "U.S."} {"Addison Mizner", "Boca Raton"} {"Yan Guangxin", "Panshi city"} {"Julius Nyerere", "Tanzania"} {"Kenneth Kaunda", "Zambia"} {"Robert Mugabe", "southern African country"} {"Kwame Nkrumah", "Ghanian"} {"Mugabe", "Zimbabwe"} {"Noguchi", "Ise"} {"Noguchi", "Mie"} {"Olga Dovgun", "Kazakhstan"} {"Sheetrit", "Israel"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (live OR lives OR ilved OR living) * arg2'</queryString><editDate>u'2011-10-13'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the geopolitical location that person has residence in'</description><freebaseID>u''</freebaseID><comment>u'Added for P3 KBP (personHasResidenceInLocation predates the exitence of geopoliticalLocation as a possible range)'</comment><relationName>u'personHasResidenceInCountry'</relationName><humanFormat>u'arg1 is a person who {has residence in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personHasResidenceInLocation'</generalizations><domain>u'person'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryResidenceOfPerson'</inverse><seedInstances>u'{\u201cAbdurrahman Wahid\u201d, \u201cIndonesia\u201d} {\u201cAl Gore\u201d, \u201cUnited States\u201d} {\u201cAnnise Parker\u201d, \u201cU.S.\u201d} {\u201cCorey Bohan\u201d, \u201cAustralia\u201d} {\u201cArsene Wenger\u201d, \u201cJapan\u201d} {\u201cArsene Wenger\u201d, \u201cEngland\u201d} {\u201cArsene Wenger\u201d, \u201cMonaco\u201d} {\u201cMasi Oka\u201d, \u201cJapan\u201d} {\u201cMasi Oka\u201d, \u201cUS\u201d} {\u201cKurt Westergaard\u201d, \u201cDenmark\u201d} {\u201cKimora Lee Simmons\u201d, \u201cUnited States\u201d} {\u201cRichard Goldstone\u201d, \u201cSouth Africa\u201d} {\u201cAbu Zubaydah\u201d, \u201cSaudi Arabia\u201d} {\u201cAhmad Qattan\u201d, \u201cSaudi Arabia\u201d} {\u201cAlberto Gonzales\u201d, \u201cUnited States\u201d} {\u201cBarry Goldwater\u201d, \u201cUnited States\u201d} {\u201cHussein Kamel\u201d, \u201cJordan\u201d} {\u201cJohn Kerry\u201d, \u201cU . S .\u201d} {\u201cJohn Negroponte\u201d, \u201cBritain\u201d} {\u201cM . Enkhbold\u201d, \u201cMongolia\u201d} {\u201cMurat Krnaz\u201d, \u201cGermany\u201d} {\u201cPaavo Nurmi\u201d, \u201cFinland\u201d} {\u201cMohammad Baqer Qalibaf\u201d, \u201cIran\u201d} {\u201cEhud Barak\u201d, \u201cIsraeli\u201d} {\u201cWilliam Verity\u201d, \u201cUS\u201d} {\u201cWillam Anderson\u201d, \u201cUS\u201d} {\u201cTheodor Kollek\u201d, \u201cIsreal\u201d} {\u201cTheodor Kollek\u201d, \u201cAustria\u201d} {\u201cSteven Derounian\u201d, \u201cUS\u201d} {\u201cShah Mahmood\u201d, \u201cItaly\u201d} {\u201cRandall Forsberg\u201d, \u201cUS\u201d} {\u201cPhilip Kaiser\u201d, \u201cSenegal\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (live OR lives OR ilved OR living) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the country that a person has residence in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personHasResidenceInStateOrProvince'</relationName><humanFormat>u'arg1 is a person who {has residence in} the state or province arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personHasResidenceInLocation'</generalizations><domain>u'person'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateOrProvinceResidenceOfPerson'</inverse><seedInstances>u'{\u201cAl Gore\u201d, \u201cTennessee\u201d} {\u201cJared Cotter\u201d, \u201cNJ\u201d} {\u201cAlli Sims\u201d, \u201cCA\u201d} {\u201cOrly Taitz\u201d, \u201cCalifornia\u201d} {\u201cAnnise Parker\u201d, \u201cTexas\u201d} {\u201cCorey Bohan\u201d, \u201cCalifornia\u201d} {\u201cSteve Schalchlin\u201d, \u201cArkansas\u201d} {\u201cLevi Johnston\u201d, \u201cAlaska\u201d} {\u201cHolly Madison\u201d, \u201cAlaska\u201d} {\u201cHolly Madison\u201d, \u201cOregon\u201d} {\u201cKimora Lee Simmons\u201d, \u201cNew Jersey\u201d} {\u201cGeorge Tiller\u201d, \u201cKansas\u201d} {\u201cDionne Warwick\u201d, \u201cNew Jersey\u201d} {\u201cAl Hubbard\u201d, \u201cIndiana\u201d} {\u201cAlberto Gonzales\u201d, \u201cTexas\u201d} {\u201cBarbara Boxer\u201d, \u201cCalifornia\u201d} {\u201cBarry Goldwater\u201d, \u201cArizona\u201d} {\u201cGeorge Sheldon\u201d, \u201cN . J .\u201d} {\u201cJerome Robbins\u201d, \u201cNew York\u201d} {\u201cJohn Kerry\u201d, \u201cMassachusettes\u201d} {\u201cMohamed ElBaradei\u201d, \u201cNew York\u201d} {\u201cPaul Watson\u201d, \u201cNew Brunswick\u201d} {\u201cRoy Scheider\u201d, \u201cNew Jersey\u201d} {\u201cGeorge W. Bush\u201d, \u201cMaine\u201d} {\u201cYolanda King\u201d, \u201cCalifornia\u201d} {\u201cYolanda King\u201d, \u201cAlabama\u201d} {\u201cWilliam Anderson\u201d, \u201cTennessee\u201d} {\u201cThomas Meskill\u201d, \u201cConnecticut\u201d} {\u201cSteven Derounian\u201d, \u201cTexas\u201d} {\u201cSteven Derounian\u201d, \u201cNew York\u201d} {\u201cSilvestre Herrera\u201d, \u201cArizona\u201d} {\u201cRobert McNair\u201d, \u201cSouth Carolina\u201d} {\u201cRichmond Flowers\u201d, \u201cAlabama\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (live OR lives OR ilved OR living) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the state or province that a person has residence in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personHasResidenceInCity'</relationName><humanFormat>u'arg1 is a person who {has residence in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personHasResidenceInLocation'</generalizations><domain>u'person'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityResidenceOfPerson'</inverse><seedInstances>u'{\u201cAl Gore\u201d, \u201cNashville\u201d} {\u201cHiram Monserrate\u201d, \u201cJackson Heights\u201d} {\u201cJared Cotter\u201d, \u201cWest Orange\u201d} {\u201cEmile Lahoud\u201d, \u201cBaabda\u201d} {\u201cJose Peralta\u201d, \u201cQueens\u201d} {\u201cAlli Sims\u201d, \u201cL.A.\u201d} {\u201cAlli Sims\u201d, \u201cMalibu\u201d} {\u201cOrly Taitz\u201d, \u201cNiguel\u201d} {\u201cAnnise Parker\u201d, \u201cHouston\u201d} {\u201cCorey Bohan\u201d, \u201cBrisbane\u201d} {\u201cArsene Wenger\u201d, \u201cLondon\u201d} {\u201cArsene Wenger\u201d, \u201cStrasbourg\u201d} {\u201cMasi Oka\u201d, \u201cLos Angeles\u201d} {\u201cMasi Oka\u201d, \u201cTokyo\u201d} {\u201cDanny Moder\u201d, \u201cTaos\u201d} {\u201cDanny Moder\u201d, \u201cVenice Beach\u201d} {\u201cKurt Westergaard\u201d, \u201cAarhus\u201d} {\u201cLevi Johnston\u201d, \u201cWasilla\u201d} {\u201cHolly Madison\u201d, \u201cSt Helens\u201d} {\u201cHolly Madison\u201d, \u201cLos Angeles\u201d} {\u201cKimora Lee Simmons\u201d, \u201cSaddle River\u201d} {\u201cLinda Hogan\u201d, \u201cMiami Beach\u201d} {\u201cLinda Hogan\u201d, \u201cBelleair\u201d} {\u201cLinda Hogan\u201d, \u201cClearwater Beach\u201d} {\u201cGeorge Tiller\u201d, \u201cWichita\u201d} {\u201cDavid Coleman Headley\u201d, \u201cChicago\u201d} {\u201cDionne Warwick\u201d, \u201cSouth Orange\u201d} {\u201cDionne Warwick\u201d, \u201cEast Orange\u201d} {\u201cGeorge W. Bush\u201d, \u201cKennebunkport\u201d} {\u201cRoy Scheider\u201d, \u201cSag Harbor\u201d} {\u201cRoy Scheider\u201d, \u201cOrange\u201d} {\u201cYolanda King\u201d, \u201cMontgomery\u201d} {\u201cYolanda King\u201d, \u201cCulver City\u201d} {\u201cWilliam Verity\u201d, \u201cBeaufort\u201d} {\u201cVernon Bellecourt\u201d, \u201cSt. Paul\u201d} {\u201cVernon Bellecourt\u201d, \u201cDenver\u201d} {\u201cThomas Meskill\u201d, \u201cEast Berlin\u201d} {\u201cThomas Meskill\u201d, \u201cDelray Beach\u201d} {\u201cTheodor Kollek\u201d, \u201cVienna\u201d} {\u201cTheodor Kolek\u201d, \u201cJerusalem\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (live OR lives OR ilved OR living) * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the city that a person has residence in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personHasCitizenship'</relationName><humanFormat>u'arg1 {has citizenship in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentRelatedToLocation'</generalizations><domain>u'person'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryHasCitizen'</inverse><seedInstances>u'{\u201cNelson Mandela\u201d, \u201cSouth Africa\u201d}, {\u201cCleopatra\u201d, \u201cEgypt\u201d}, {\u201cJeje Odongo\u201d, \u201cUganda\u201d}, {\u201cBoutros Boutros Ghali\u201d, \u201cEgypt\u201d}, {\u201cHamid Karzai\u201d, \u201cAfghanistan\u201d}, {\u201cJackie Chan\u201d, \u201cChina\u201d} {\u201cTojo Hideki\u201d, \u201cJapan\u201d} {\u201cReza Pahlavi\u201d, \u201cIran\u201d} {\u201cKareena Kapoor\u201d, \u201cIndia\u201d} {\u201cKhun Lo\u201d, \u201cLaos\u201d} {\u201cKublai Khan\u201d, \u201cMongolia\u201d} {\u201cJulia Gillard\u201d, \u201cAustralia\u201d} {\u201cRupert Murdoch\u201d, \u201cAustralia\u201d} {\u201cSteve Irwin\u201d, \u201cAustralia\u201d} {\u201cBryan Adams\u201d, \u201cCanada\u201d} {\u201cCeline Dion\u201d, \u201cCanada\u201d} {\u201cStephen Harper\u201d, \u201cCanada\u201d} {\u201cJosef Haydn\u201d, \u201cAustria\u201d} {\u201cArchimedes\u201d, \u201cSicily\u201d} {\u201cWerner Reinhart\u201d, \u201cSwitzerland\u201d} {\u201cDiego Rivera\u201d, \u201cMexico\u201d} {\u201cPita Amor\u201d, \u201cMexico\u201d} {\u201cPrincess Isabel\u201d, \u201cBrazil\u201d}{\u201cAndres Escobar\u201d, \u201cColombia\u201d} {\u201cLeonardo Boff\u201d, \u201cBrazil\u201d} {\u201cBill Gates\u201d, \u201cUnited States\u201d} {\u201cBob Dylan\u201d, \u201cUnited States\u201d} {\u201cAndy Warhol\u201d, \u201cUnited States\u201d} {\u201cCarla Del Ponte\u201d, \u201cSwitzerland\u201d} {\u201cZacarias Moussaoui\u201d, \u201cFrance\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * of * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the citizenship of a person'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'personBornInLocation'</relationName><humanFormat>u'arg1 was {born in} the location arg2'</humanFormat><populate>1</populate><visible>0</visible><generalizations>u'agentActsInLocation'</generalizations><domain>u'person'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personHasResidenceInLocation personDiedInLocation'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationOfPersonBirth'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * born * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the location that a person is born in'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/place of birth": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }]'</freebaseID><comment>u"This would generalize to agentRelatedToLocation if agentActsInLocation didn't capture the existence of that person in that location at some point in time."</comment><relationName>u'personBornInCity'</relationName><humanFormat>u'arg1 was {born in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBornInLocation'</generalizations><domain>u'person'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityOfPersonBirth'</inverse><seedInstances>u'{"Willie Aames","los angeles"},{"Drew Barrymore ","los angeles"},{"Alex Band ","los angeles"},{"Aaliyah","new york"},{"Carmelo Anthony","new york"},{"Barbara Boxer","new york"},{"George Carlin","new york"},{"Alanis Morissette","Ottawa"},{"Glenn Gould","Ottawa"},{"Pl\xe1cido Domingo","Madrid"},{"Enrique Iglesias","Madrid"} {\u201cHank Williams\u201d, \u201cMount Olive West\u201d} {\u201cTom Lehman\u201d, \u201cAustin\u201d} {\u201cJared Cotter\u201d, \u201cKew Gardens\u201d} {\u201cEmile Lahoud\u201d, \u201cBaabdat\u201d} {\u201cAnnise Parker\u201d, \u201cHouston\u201d} {\u201cClive Davis\u201d, \u201cBrooklyn\u201d} {\u201cCorey Bohan\u201d, \u201cBrisbane\u201d} {\u201cArsene Wenger\u201d, \u201cStrasbourg\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * born * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the city that a person was born in'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/place of birth": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]'</freebaseID><comment>u''</comment><relationName>u'personBornInStateOrProvince'</relationName><humanFormat>u'arg1 was {born in} the state or province arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBornInLocation'</generalizations><domain>u'person'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateOrProvinceOfPersonBirth'</inverse><seedInstances>u'{\u201cJared Cotter\u201d, \u201cNY\u201d} {\u201cAnnise Parker\u201d, \u201cTexas\u201d} {\u201cHolly Madison\u201d, \u201cOregon\u201d} {\u201cStephen Harper\u201d, \u201cOntario\u201d} {\u201cJohn Kerry\u201d, \u201cColorado\u201d} {\u201cRoy Scheider\u201d, \u201cNew Jersey\u201d} {\u201cYolanda King\u201d, \u201cAlabama\u201d} {\u201cWilliam Verity\u201d, \u201cOhio\u201d} {\u201cVernon Bellecourt\u201d, \u201cMinnesota\u201d} {\u201cRobert McNair\u201d, \u201cSouth Carolina\u201d} {\u201cAustin Dean Coobs\u201d, \u201cIowa\u201d} {\u201cBobby Gilbert\u201d, \u201cPennsylvania\u201d} {\u201cCharles Chapman\u201d, \u201cIllinois\u201d} {\u201cDubb Tubb\u201d, \u201cTexas\u201d} {\u201cEvan Solomon\u201d, \u201cCalifornia\u201d} {\u201cFrancis Moore\u201d, \u201cNew York\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * born * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the state or province that a person was born in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personBornInCountry'</relationName><humanFormat>u'arg1 was {born in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBornInLocation'</generalizations><domain>u'person'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryOfPersonBirth'</inverse><seedInstances>u'{\u201cAbu Musab Al-Zarqawi\u201d, \u201cJordan\u201d} {\u201cMartin Burnham\u201d, \u201cAmerica\u201d} {\u201cGlenn Gould\u201d, \u201cCanada\u201d} {\u201cAlanis Morissette\u201d, \u201cCanada\u201d} {\u201cGeorge Carlin\u201d, \u201cUS\u201d} {\u201cBarbara Boxer\u201d, \u201cUSA\u201d} {\u201cEnrique Iglesias\u201d, \u201cSpain\u201d} {\u201cAndy Warhol\u201d, \u201cUnited States\u201d} {\u201cLeonardo Boff\u201d, \u201cBrazil\u201d} {\u201cAnnise Parker\u201d, \u201cU.S.\u201d} {\u201cCorey Bohan\u201d, \u201cAustralia\u201d} {\u201cArsene Wenger\u201d, \u201cFrance\u201d} {\u201cTheodor Kollek\u201d, \u201cHungary\u201d} {\u201cSteven Derounian\u201d, \u201cBulgaria\u201d} {\u201cAaron Zeitlin\u201d, \u201cBelarus\u201d} {\u201cBenjamin Law\u201d, \u201cEngland\u201d} {\u201cCharles Gorman\u201d, \u201cUnited States\u201d} {\u201cDerek Freeman\u201d, \u201cAustralia\u201d} {\u201cEmily Lodge\u201d, \u201cEngland\u201d} {\u201cFrank Burton\u201d, \u201cMexico\u201d} {\u201cGeorge Cook\u201d, \u201cUnited States\u201d} {\u201cHarry Boyle\u201d, \u201cCanada\u201d} {\u201cIan Ferguson\u201d, \u201cCanada\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * born * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the country that a person was born in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personDiedInLocation'</relationName><humanFormat>u'arg1 {died in} the location arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentActsInLocation'</generalizations><domain>u'person'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personBornInLocation personHasResidenceInLocation'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationOfPersonDeath'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * died * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the location that a person died in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personDiedInCity'</relationName><humanFormat>u'arg1 {died in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personDiedInLocation'</generalizations><domain>u'person'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityOfPersonDeath'</inverse><seedInstances>u'{\u201cJay Smith\u201d, \u201cWilkes-Barre\u201d} {\u201cGeorge Tiller\u201d, \u201cWichita\u201d} {\u201cHussein Kamel\u201d, \u201cBaghdad\u201d} {\u201cYolanda King\u201d, \u201cSanta Monica\u201d} {\u201cWilliam Verity\u201d, \u201cBeaufort\u201d} {\u201cVernon Bellecourt\u201d, \u201cMinneapolis\u201d} {\u201cThomas Meskill\u201d, \u201cDelray Beach\u201d} {\u201cTheodor Kollek\u201d, \u201cJerusalem\u201d} {\u201cSilvestre Herrera\u201d, \u201cGlendale\u201d} {\u201cRichmond Flowers\u201d, \u201cDothan\u201d} {\u201cPascal Yoadimadji\u201d, \u201cParis\u201d} {\u201cPamela Ahearn\u201d, \u201cAlexandria\u201d} {\u201cMichael Deaver\u201d, \u201cBethesda\u201d} {\u201cMary Crisp\u201d, \u201cPhoenix\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * died * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the city that a person died in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personDiedInStateOrProvince'</relationName><humanFormat>u'arg1 {died in} the state or province arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personDiedInLocation'</generalizations><domain>u'person'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateOrProvinceOfPersonDeath'</inverse><seedInstances>u'{\u201cMohammed Khan\u201d, \u201cNorth West Fronteir Province\u201d} {\u201cJay Smith\u201d, \u201cTexas\u201d} {\u201cGeorge Tiller\u201d, \u201cKansas\u201d} {\u201cYolanda King\u201d, \u201cCalifornia\u201d} {\u201cWilliam Verity\u201d, \u201cSouth Carolina\u201d} {\u201cWilliam Anderson\u201d, \u201cVA\u201d} {\u201cThomas Meskill\u201d, \u201cFlorida\u201d} {\u201cSilvestre Herrera\u201d, \u201cArizona\u201d} {\u201cRichmond Flowers\u201d, \u201cAlabama\u201d} {\u201cRichard Nolte\u201d, \u201cNH\u201d} {\u201cPaul Gillmor\u201d, \u201cVirginia\u201d} {\u201cPamela Ahearn\u201d, \u201cVA\u201d} {\u201cMichael Deaver\u201d, \u201cMD\u201d} {\u201cAlden Caldwell\u201d, \u201cFlorida\u201d} {\u201cBruno Bettelheim\u201d, \u201cColorado\u201d} {\u201cCliff Schmautz\u201d, \u201cOregon\u201d} {\u201cDon Heck\u201d, \u201cNew York\u201d} {\u201cElsie Allen\u201d, \u201cCalifornia\u201d} {\u201cFredric Schenk\u201d, \u201cPennsylvania\u201d} {\u201cGerome Ragni\u201d, \u201cNew York\u201d} {\u201cHenry Sylvester\u201d, \u201cCalifornia\u201d} {\u201cJames Adams\u201d, \u201cNew Jersey\u201d} {\u201cKennekuk\u201d, \u201cKansas\u201d} {\u201cLewis Brown\u201d, \u201cNew York\u201d} {\u201cDave McKenna\u201d, \u201cPennsylvania\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * died * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the state or province that a person died in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personDiedInCountry'</relationName><humanFormat>u'arg1 {died in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personDiedInLocation'</generalizations><domain>u'person'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryOfPersonDeath'</inverse><seedInstances>u'{\u201cAhmed Said Khadr\u201d, \u201cPakistan\u201d} {\u201cMohammed Khan\u201d, \u201cPakistan\u201d} {\u201cHussein Kamel\u201d, \u201cIraq\u201d} {\u201cAlbert Butz\u201d, \u201cUnited States\u201d} {\u201cBenjamin Law\u201d, \u201cAustralia\u201d} {\u201cCharles Young\u201d, \u201cEngland\u201d} {\u201cDavid Stirling\u201d, \u201cEngland\u201d} {\u201cEiar Vaage\u201d, \u201cNorway\u201d} {\u201cFrank Marshall\u201d, \u201cScotland\u201d} {\u201cGasper Grima\u201d, \u201cMalta\u201d} {\u201cHarold Lowe\u201d, \u201cWales\u201d} {\u201cInger Gleerup\u201d, \u201cBulgaria\u201d} {\u201cJoan Webb\u201d, \u201cEngland\u201d} {\u201cKyle Owen\u201d, \u201cUnited States\u201d} {\u201cLeo Maguire\u201d, \u201cGreat Britain\u201d} {\u201cMargin Johnston\u201d, \u201cAustralia\u201d} {\u201cNick Berg\u201d, \u201cIraq\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * died * arg2'</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'the country that a person died in'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'hasFamilyMember'</relationName><humanFormat>u'arg1 and arg2 are {family members}'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentInteractsWithAgent'</generalizations><domain>u'person'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'hasFamilyMember'</inverse><seedInstances>u'{\u201cHank Williams\u201d, \u201cHank Williams III\u201d} {\u201cKhalid Sheikh Mohammed\u201d, \u201cRamzi Youssef\u201d} {\u201cDiane Olson\u201d, \u201cCulbert L. Olson\u201d} {\u201cAlli Sims\u201d, \u201cBritney Spears\u201d} {\u201cAlli Sims\u201d, \u201cJamie Lynn Spears\u201d} {\u201cSteve Schalchlin\u201d, \u201cWhitney Houston\u201d} {\u201cSteve Schalchlin\u201d, \u201cSissy Houston\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * family of * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'two persons are family members'</description><freebaseID>u'none'</freebaseID><comment>u'Used to be alaceholder umbrella relation for family relationships, but now is of direct interest for TAC KBP 2012'</comment><relationName>u'parentOfPerson'</relationName><humanFormat>u'arg1 is the {parent of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasFamilyMember'</generalizations><domain>u'person'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personHasParent'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * parent of * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'parent of a person'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/parents": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }]'</freebaseID><comment>u''</comment><relationName>u'motherOfPerson'</relationName><humanFormat>u'arg1 is the {mother of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'parentOfPerson'</generalizations><domain>u'female'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personHasMother'</inverse><seedInstances>u'{\u201cVirgin Mary\u201d, \u201cJesus Christ\u201d} {\u201cMary\u201d, \u201cJesus\u201d} {\u201cHagar\u201d, \u201cIshmael\u201d} {\u201cRohini\u201d, \u201cBalarama\u201d} {\u201cCleopatra\u201d, \u201cCaesarion\u201d} {\u201cDemeter\u201d, \u201cPersephone\u201d} {\u201cDemeter\u201d, \u201cKore\u201d} {\u201cMichelle Obama\u201d, \u201cMalia\u201d} {\u201cSuniti\u201d, \u201cDhruva\u201d} {\u201cElectra\u201d, \u201cDardanus\u201d} {\u201cAlcmene\u201d, \u201cHercules\u201d} {\u201cHapshetsut\u201d, \u201cAhmose\u201d} {\u201cPavarti\u201d, \u201cGanesha\u201d} {\u201cKunti\u201d, \u201cArjuna\u201d} {\u201cKimora Lee Simmons\u201d, \u201cMing Lee\u201d} {\u201cKimora Lee Simmons\u201d, \u201cAoki\u201d} {\u201cKimora Lee Simmons\u201d, \u201cKenzo\u201d} {\u201cLinda Hogan\u201d, \u201cNick Hogan\u201d} {\u201cDionne Warwick\u201d, \u201cDamon Elliot\u201d} {\u201cRosa Hernandez\u201d, \u201cJose Peralta\u201d} {\u201cSherry Johnston\u201d, \u201cLevi Johnston\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * mother of * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'mother of a person'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/gender": "Female", "/people/person/children": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }]'</freebaseID><comment>u''</comment><relationName>u'fatherOfPerson'</relationName><humanFormat>u'arg1 is the {father of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'parentOfPerson'</generalizations><domain>u'male'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personHasFather'</inverse><seedInstances>u'{"Harivansh Rai Bachchan","Amitabh Bachchan"},{"Rakesh Roshan","Hrithik Roshan"},{"Darryl Strawberry","D.J. Strawberry"},{"Archie Manning","Eli Manning"},{"Yogi Berra","Dale Berra"},{"Mel Stottlemyre","Todd Stottlemyre"},{"Cecil Fielder","Prince Fielder"},{"Motilal Nehru","Jawaharlal Nehru"},{"Prithviraj Kapoor","Raj Kapoor"},{"Sunil Dutt","Sanjay Dutt"} {\u201cConstantine\u201d, \u201cCrispus\u201d} {\u201cNat King Cole\u201d, \u201cNatalie Cole\u201d} {\u201cZulfikar Ali Bhutto\u201d, \u201cBenazir Bhutto\u201d} {\u201cJon Voight\u201d, \u201cAngelina Jolie\u201d} {\u201cMatthew Knowles\u201d, \u201cBeyonce\u201d} {\u201cEnoch\u201d, \u201cMethuselah\u201d} {\u201cAbraham\u201d, \u201cIsaac\u201d} {\u201cBilly Ray Cyrus\u201d, \u201cMiley Cyrus\u201d} {\u201cShu\u201d, \u201cGeb\u201d} {\u201cAgamemnon\u201d, \u201cIphigenia\u201d} {\u201cThor\u201d, \u201cThrud\u201d} {\u201cJacob\u201d, \u201cDinah\u201d} {\u201cNoah\u201d, \u201cShem\u201d} {\u201cBarack Obama\u201d, \u201cMalia\u201d} {\u201cAdam\u201d, \u201cCain\u201d} {\u201cHank Williams\u201d, \u201cHank Williams Jr.\u201d} {\u201cHank Williams Jr.\u201d, \u201cKatie Williams\u201d} {\u201cEmile Lahoud\u201d, \u201cEmile Emile Lahoud\u201d} {\u201cDanny Moder\u201d, \u201cHenry Daniel Moder\u201d} {\u201cDanny Moder\u201d, \u201cPhinneaus Walter Moder\u201d} {\u201cSukarno\u201d, \u201cMegawati Sukarnoputri\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * father of * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'father of a person'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/gender": "Male", "/people/person/children": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }]'</freebaseID><comment>u''</comment><relationName>u'biologicalMotherOfPerson'</relationName><humanFormat>u'arg1 is the {biological mother of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'motherOfPerson agentCreated'</generalizations><domain>u'female'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personHasBiologicalMother'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * biological mother of * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'is biological mother of a person'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'biologicalFatherOfPerson'</relationName><humanFormat>u'arg1 is the {biological father of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'fatherOfPerson agentCreated'</generalizations><domain>u'male'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personHasBiologicalFather'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 * biological father of * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'is biological father of a person'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'hasSibling'</relationName><humanFormat>u'arg1 and arg2 are {siblings}'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasFamilyMember'</generalizations><domain>u'person'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'hasSibling'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * sibling of * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'two persons are siblings'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/sibling s": [{ "/people/sibling relationship/sibling": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }] }]'</freebaseID><comment>u'NOTE: because of the reified "sibling relationship" type in Freebase, this query will yield instances saying a person is a sibling with himself. These need to be ruled out by a post-processing script'</comment><relationName>u'hasBrother'</relationName><humanFormat>u'arg1 {has brother} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasSibling'</generalizations><domain>u'person'</domain><range>u'male'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'brotherOf'</inverse><seedInstances>u'{\u201cTecumseh\u201d, \u201cTenskwatawa\u201d} {\u201cFidel Castro\u201d, \u201cRaul\u201d} {\u201cCicero\u201d, \u201cQuintus\u201d} {\u201cJulia Roberts\u201d, \u201cEric Roberts\u201d} {\u201cAhmed Shah Massoud\u201d, \u201cAhmed Wali Massoud\u201d} {\u201cYolanda King\u201d, \u201cMartin Luther King\u201d} {\u201cYolanda King\u201d, \u201cDexter King\u201d} {\u201cVernon Bellecourt\u201d, \u201cClyde Bellecourt\u201d} {\u201cRoy Scheider\u201d, \u201cGlenn Scheider\u201d} {\u201cRichard Nolte\u201d, \u201cCharles Nolte\u201d} {\u201cPamela Ahearn\u201d, \u201cJames Gardner\u201d} {\u201cMichael Deaver\u201d, \u201cBill Deaver\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * brother of * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'person has a brother'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/sibling s": [{ "/people/sibling relationship/sibling": [{ "name": null, "/common/topic/alias": [], "/people/person/gender": "Male", "type": "/people/person" }] }] }]'</freebaseID><comment>u'NOTE: because of the reified "sibling relationship" type in Freebase, this query will yield instances saying a person is a brother to himself. These need to be ruled out by a post-processing script'</comment><relationName>u'hasSister'</relationName><humanFormat>u'arg1 {has sister} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasSibling'</generalizations><domain>u'person'</domain><range>u'female'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'sisterOf'</inverse><seedInstances>u'{\u201cApollo\u201d, \u201cArtemis\u201d} {\u201cNephthys\u201d, \u201cIsis\u201d} {\u201cLuke Skywalker\u201d, \u201cPrincess Leia\u201d} {\u201cEric Roberts\u201d, \u201cJulia Roberts\u201d} {\u201cElizabeth Blackwell\u201d, \u201cEmily\u201d} {\u201cAnnie Liebovitz\u201d, \u201cBarbara Leibovitz\u201d} {\u201cDionne Warwick\u201d, \u201cDee Dee Warwick\u201d} {\u201cYolanda King\u201d, \u201cBernice King\u201d} {\u201cWillaim Verity\u201d, \u201cJean Verity Woodhull\u201d} {\u201cWilliam Verity\u201d, \u201cBetsy Verity Blakey\u201d} {\u201cThomas Meskill\u201d, \u201cRuth Prior\u201d} {\u201cThomas Meskill\u201d, \u201cLaura Marie\u201d} {\u201cRichard Nolte\u201d, \u201cJacqueline Jones\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * sister of * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'person has a sister'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/sibling s": [{ "/people/sibling relationship/sibling": [{ "name": null, "/common/topic/alias": [], "/people/person/gender": "Female", "type": "/people/person" }] }] }]'</freebaseID><comment>u'NOTE: because of the reified "sibling relationship" type in Freebase, this query will yield instances saying a person is a sister to herself. These need to be ruled out by a post-processing script'</comment><relationName>u'hasSpouse'</relationName><humanFormat>u'arg1 {has spouse} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasFamilyMember'</generalizations><domain>u'person'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'hasSpouse'</inverse><seedInstances>u'{"Jack", "Jackie"} {"Billy Cavendish", "Kick"} {"Alix Goldsmith", "Goffredo Marcaccini"} {"Mark Moellering", "Christine Moellering"} {"Greg Buchanan", "Gordon"} {"Earl Presley Sr .", "Gordon"} {"Gregory Buchanan", "Gordon"} {"Bonimo\'s son", "Gordon"} {"The groom", "The bride"} {"Greg Buchanan", "Gordon"}{"Jerry", "Hughes"} {"Deanie Hickox Fox", "Jeremy Fox"} {"Cindy", "McCain"} {"Woodward", "Newman"} {"Joanne Woodward", "Newman"} {"Woodward", "Newman"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * spouse of * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'person has a spouse'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/spouse s": [{ "/people/marriage/spouse": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }] }]'</freebaseID><comment>u'NOTE: because of the reified "spouse relationship" type in Freebase, this query will yield instances saying a person is married to himself. These need to be ruled out by a post-processing script'</comment><relationName>u'hasHusband'</relationName><humanFormat>u'arg1 {has husband} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasSpouse'</generalizations><domain>u'person'</domain><range>u'male'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'husbandOf'</inverse><seedInstances>u'{\u201cMonet\u201d, \u201cCamille Doncieux\u201d} {\u201cMichelle Obama\u201d, \u201cBarack Obama\u201d} {\u201cBathsheba\u201d, \u201cKing David\u201d} {\u201cHagar\u201d, \u201cAbraham\u201d} {\u201cVipsania\u201d, \u201cTiberius\u201d} {\u201cMetis\u201d, \u201cZeus\u201d} {\u201cMaat\u201d, \u201cThoth\u201d} {\u201cMadona\u201d, \u201cSean Penn\u201d} {\u201cAmestris\u201d, \u201cXerces\u201d} {\u201cMariah Carey\u201d, \u201cNick Cannon\u201d} {\u201cKatherine Parr\u201d, \u201cThomas Seymour\u201d} {\u201cRenee Zellweger\u201d, \u201cKenny Chesney\u201d} {\u201cBasemath\u201d, \u201cEsau\u201d} {\u201cBillie Jean Jones\u201d, \u201cHank Williams\u201d} {\u201cRuth Rickover\u201d, \u201cHyman Rickover\u201d} {\u201cDiane Olson\u201d, \u201cRobin Tyler\u201d} {\u201cKimora Lee Simmons\u201d, \u201cRussell Simmons\u201d} {\u201cLinda Hogan\u201d, \u201cHulk Hogan\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * husband of * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'person has a husband'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/spouse s": [{ "/people/marriage/spouse": [{ "name": null, "/people/person/gender": "Male", "/common/topic/alias": [], "type": "/people/person" }] }] }]'</freebaseID><comment>u'NOTE: because of the reified "spouse relationship" type in Freebase, this query will yield instances saying a person is a husband to himself. These need to be ruled out by a post-processing script'</comment><relationName>u'hasWife'</relationName><humanFormat>u'arg1 {has wife} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasSpouse'</generalizations><domain>u'person'</domain><range>u'female'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'wifeOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * wife of * arg1'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'person has a wife'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/spouse s": [{ "/people/marriage/spouse": [{ "name": null, "/people/person/gender": "Female", "/common/topic/alias": [], "type": "/people/person" }] }] }]'</freebaseID><comment>u'NOTE: because of the reified "spouse relationship" type in Freebase, this query will yield instances saying a person is a wife to herself. These need to be ruled out by a post-processing script'</comment><relationName>u'personAttendsSchool'</relationName><humanFormat>u'arg1 is a person who {has attended} the school arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'person'</domain><range>u'school'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'worksFor'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'schoolAttendedByPerson'</inverse><seedInstances>u'{"Walter Gropius","Harvard"},{"Kim Clark","Harvard"},{"Fitzroy Carrington","Harvard"},{"Eileen Collins","Stanford"},{"Ehud Barak","Stanford"},{"Herbert Hoove","Stanford"},{"Tariq Ali","Oxford"},{"Edmund Blunden","Oxford"},{"Helen Fielding","Oxford"},{"Art Clokey","usc"},{"John Nash","Carnegie Mellon"},{"Bill Bordley","University of Southern California"},{"John Milius","USC"} {"Zhang", "Shichahai School"} {"Chandramohan", "Maharaja Sayajirao University"} {"Sills", "the professional school"} {"Greenough", "School of Journalism"} {"Clay Johnson", "Phillips Academy"} {"Clay Johnson", "Yale University"} {"Hernandez", "Texas A &amp; M"} {"Alan J . Placa", "Bishop Loughlin Memorial High School"} {"Powers", "New York University Law School"} {"Powers", "Manhattan College"} {"Peter J . Powers", "Bishop Loughlin Memorial High School"} {"Khidr", "University of Central Florida"} {"Khidr", "business school"} {"Jonnatan Leiva", "High school"} {"Newman", "racing school"} {"Newman", "Kenyon College"} {"Newman", "Actors Studio"} {"Mugabe", "University of Fort Hare"} {"Mugabe", "University of London"}{"Mugabe", "University of Fort Hare"} {"Mugabe", "University of South Africa"} {\u201cRoy Lubove\u201d, \u201cColumbia College\u201d} {\u201cRoy Lubove\u201d, \u201cCornell University\u201d} {\u201cTom Lehman\u201d, \u201cUniversity of Minnesota\u201d} {\u201cJared Cotter\u201d, \u201cFive Towns College\u201d} {\u201cAlli Sims\u201d, \u201cLSU\u201d} {\u201cClive Davis\u201d, \u201cHarvard Law School\u201d} {\u201cClive Davis\u201d, \u201cNew York University\u201d} {\u201cArsene Wenger\u201d, \u201cStrasbourg University\u201d} {\u201cMasi Oka\u201d, \u201cBrown University\u201d} {\u201cLevi Johnston\u201d, \u201cWasilla High School\u201d} {\u201cHolly Madison\u201d, \u201cPortland State University\u201d} {\u201cHolly Madison\u201d, \u201cLoyola Marymount University\u201d} {\u201cAl Hubbard\u201d, \u201cHarvard Law School\u201d} {\u201cChen Zhu\u201d, \u201cShangai Second Medical University\u201d} {\u201cDanny Glover\u201d, \u201cSan Francisco State\u201d} {\u201cJohn Kerry\u201d, \u201cYale\u201d} {\u201cJohn Negroponte\u201d, \u201cExeter Academy\u201d} {\u201cJuliette Binoche\u201d, \u201cNational Conservatory of Dramatic Arts\u201d} {\u201cMohamed ElBaradei\u201d, \u201cUniversity of Cairo\u201d} {\u201cRichard Perle\u201d, \u201cHollywood High School\u201d} {\u201cRoy Scheider\u201d, \u201cRutgers\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * (attend OR attends OR attended OR attending OR enroll OR enrolls OR enrolled OR enrolling) * arg2'</queryString><editDate>u'2010-08-30'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'person has attended a school'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/education": [{ "/education/education/institution":[{ "name": null, "/common/topic/alias": [], "type": "/education/educational institution" }] }] }]'</freebaseID><comment>u''</comment><relationName>u'bookWriter'</relationName><humanFormat>u'arg2 {wrote} the book arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'creativeWorkContributedToByAgent'</generalizations><domain>u'book'</domain><range>u'writer'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Harry Potter And The Goblet Of Fire","Dan Brown"} {"Ulysses","Aldous Huxley"} {"The Great Gatsby","John Steinbeck"} {"Brave New World","James Joyce"} {"The Grapes of Wrath","F . Scott Fitzgerald"}'</knownNegatives><inverse>u'writerWroteBook'</inverse><seedInstances>u'{"Freakonomics", "Stephen Dubner"} {"Rich Dad Poor Dad","Robert Kiyosaki"} {"The South Beach Diet","Arthur Agatston"} {"The Da Vinci Code","Dan Brown"} {"Harry Potter And The Goblet Of Fire","J.K. Rowling"} {"The Purpose Driven Life","Rick Warren"} {"Ulysses","James Joyce"} {"The Great Gatsby","F . Scott Fitzgerald"} {"Brave New World","Aldous Huxley"} {"The Grapes of Wrath","John Steinbeck"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * written by * arg2'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'author of a book'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/book/book", "/book/written work/author": [{ "name": null, "/common/topic/alias": [], "type": "/book/author" }] }]'</freebaseID><comment>u''</comment><relationName>u'sportsGameTeam'</relationName><humanFormat>u'arg2 is a sports team that {played in} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'eventHasParticipantAgent'</generalizations><domain>u'sportsGame'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'teamInGame'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg2 * (in OR at OR of OR on) * arg1'</queryString><editDate>u''</editDate><author>u''</author><curator>u''</curator><description>u'Specifies the teams that played in a particular sports game'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicianUsHoldsOffice'</relationName><humanFormat>u'arg1 is a U.S. politician who {holds the office of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'politicianHoldsOffice'</generalizations><domain>u'politicianUs'</domain><range>u'politicalOffice'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"John McCain","United States President"} {"Barack Obama","New York City Mayor"}  {"Barack Obama","New York City Mayor"}  { "Clarence Thomas"  "U.S. Senate Majority Leader"} { "Harry Reid" "U.S. Supreme Court justice",}'</knownNegatives><inverse>u'officeHeldByPoliticianUs'</inverse><seedInstances>u'{"Barack Obama" "United States President"}  {"George W . Bush" "United States President"} {"Hillary Clinton" "State Secretary"} {"John G . Roberts" "Supreme Court Chief Justice"} {"Robert Gates" "Defence Secretary"} {"Michael Bloomberg" "New York City Mayor"} {"Arnold Schwarzenegger" "California Governor"} {"Ben Bernanke" "Federal Reserve Chair"} {"John McCain" "United States Senator"} { "Nancy Pelosi", "House Speaker"} { "Harry Reid" "U.S. Senate Majority Leader"} { "Clarence Thomas", "U.S. Supreme Court justice"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>1</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'U.S. Politician who holds an office'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/government/politician", "/government/politician/government positions held": [{ "/government/government position held/office position or title": [{ "name": null, "/common/topic/alias": [], "/government/government office or title/jurisdiction": [{ "/location/location/containedby": [{ "name": "United States of America" }] }] }] }] }]'</freebaseID><comment>u''</comment><relationName>u'politicianMemberOfPoliticsGroup'</relationName><humanFormat>u'arg1 is a politician who is a {member of} the political group arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'politician'</domain><range>u'politicsGroup'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'politicalGroupOfPolitician'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'Specifies that a particular politician belongs to a particular'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicianUsMemberOfPoliticalGroup'</relationName><humanFormat>u'arg1 is a U.S. politician who is a {member of} the political group arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'politicianMemberOfPoliticsGroup'</generalizations><domain>u'politicianUs'</domain><range>u'politicsGroup'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Barack Obama" "Supreme Court"} {"John McCain" "Federal Reserve"}  {"Barney Frank" "U.S. Senate"} {"John McCain" "Republican Party"} {"Antonin Scalia" "Democratic Party"} {"David Obey" "Supreme Court"} {"Barack Obama" "House Committee on Appropriations"}'</knownNegatives><inverse>u'politicalGroupOfPoliticianUs'</inverse><seedInstances>u'{"Barack Obama" "The White House"} {"John G . Roberts" "Supreme Court"} {"Ben Bernanke" "Federal Reserve"} {"John McCain" "U.S. Senate"} {"Barbara Boxer" "U.S. Senate"} {"Barney Frank" "U.S. House of Representatives"} {"Harry Reid" "U.S. Senate"} {"John McCain" "Republican Party"} {"Barbara Boxer" "Democratic Party"} {"Antonin Scalia" "Supreme Court"} {"David Obey" "House Committee on Appropriations"} {"Barack Obama", "Barack Obama \'s presidential campaign"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg1 * (in OR at OR of) * arg2'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'U.S. Politician who is member of a political group'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicsGroupConcernsIssue'</relationName><humanFormat>u'arg1 is a political group {concerned with} the issue of arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'politicsGroup'</domain><range>u'politicsIssue'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan subjectConcernedByAcademicField'</mutexExceptions><knownNegatives>u'{"Planned Parenthood" "gun control"} {"National Rifle Association" "pro choice"} {"ACLU" "fiscal policy"} {"American Bankers Association" "human rights"}  {"MoveOn.org" "Conservatism" } {"Greenpeace" "labor" } { "International Brotherhood of Teamsters" "environment"}'</knownNegatives><inverse>u'issueOfPoliticsGroup'</inverse><seedInstances>u'{"Planned Parenthood" "abortion"} {"Planned Parenthood" "pro choice"} {"ACLU" "human rights"} {"National Rifle Association" "gun control" } {"Cato Institute" "taxes"} {"American Bankers Association" "fiscal policy"} {"AFL-CIO" "race"}  {"MoveOn.org" "Liberalism"} { "Democratic Party" "Liberalism"} {"Republican Party" "Conservatism"} {"Greenpeace" "environment"} { "International Brotherhood of Teamsters" "labor"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg1 * (concerns OR concern OR concerned OR concerning) * arg2'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'Issues that a political group has concern about'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicsBillConcernsIssue'</relationName><humanFormat>u'arg1 is a legislative bill {to do with} the issue of arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'politicsBill'</domain><range>u'politicsIssue'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan subjectConcernedByAcademicField'</mutexExceptions><knownNegatives>u'{"Patient Safety and Quality Improvement Act" "national security"}{"Sarbanes-Oxley Act" "education"} {"PATRIOT Act" "health care"} {"Climate Stewardship Act" "civil rights"} {"American With Disabilities Act" "environment"} { "Social Security Act" "gun control" } {"Homeland Security Act" "environment"} '</knownNegatives><inverse>u'issueOfPoliticsBill'</inverse><seedInstances>u'{"Patient Safety and Quality Improvement Act" "health care"}{"Sarbanes-Oxley Act" "fiscal policy"} {"PATRIOT Act" "national security"} {"Climate Stewardship Act" "environment"} {"American With Disabilities Act" "labor"} {"1964 Civil Rights Act" "civil rights"} {"Health Insurance Portability and Accountability Act" "health care"} { "Social Security Act" "entitlement program" } { "Social Security Act" "health care"} {"Genetic Information Nondiscrimination Act" "civil rights" }  {"Genetic Information Nondiscrimination Act" "health care" } {"Homeland Security Act" "national security"} {"Educational Rights and Privacy Act" "education"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg1 * (concerns OR concern OR concerned OR concerning) * arg2'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'Issues that a legislative billl is concerned with.'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicsBillSponsoredByPolitician'</relationName><humanFormat>u'arg1 is a legislative bill {sponsored by} arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'relatedTo'</generalizations><domain>u'politicsBill'</domain><range>u'politician'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'politicianSponsoredPoliticsBill'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg2 * (sponsor OR sponsors OR sponsored OR sponsoring) * arg1'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'Politician(s) sponsoring a particular legislative bill'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicsBillSponsoredByPoliticianUs'</relationName><humanFormat>u'arg1 is a legislative bill {sponsored by} the U.S. politician arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'politicsBillSponsoredByPolitician'</generalizations><domain>u'politicsBill'</domain><range>u'politicianUs'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Health Insurance Portability and Accountability Act" "Antonin Scalia"}  {"Patient Safety and Quality Improvement Act" "Ed Rendell"}  {"Sarbanes-Oxley Act" "James Buckley"} {"PATRIOT Act" "Barack Obama"}  {"Educational Rights and Privacy Act" "Mitt Romney"} {"Homeland Security Act"  "Jimmy Carter" } '</knownNegatives><inverse>u'politicianUsSponsoredPoliticsBill'</inverse><seedInstances>u'{"Health Insurance Portability and Accountability Act" "Edward Kennedy"} {"Health Insurance Portability and Accountability Act" "Nancy Kassebaum"}  {"Patient Safety and Quality Improvement Act" "Jim Jeffords"}  {"Sarbanes-Oxley Act" "Paul Sarbanes"} {"Sarbanes-Oxley Act" "Mike Oxley"} {"Genetic Information Nondiscrimination Act" "Louise Slaughter"} {"PATRIOT Act" "Jim Sensenbrenner"} {"Climate Stewardship Act" "John McCain"} {"Climate Stewardship Acts" "Joseph Lieberman"} {"Educational Rights and Privacy Act" "James Buckley"} {"Homeland Security Act"  "Mac Thornberry" }  { "Public Health Security and Bioterrorism Preparedness and Response Act" "Billy Tauzin" }'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg2 * (sponsor OR sponsors OR sponsored OR sponsoring) * arg1'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'U.S. Politician sponsoring a particular legislative bill'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicianEndorsedByPolitician'</relationName><humanFormat>u'arg1 is a politician {endorsed by} the politician arg2'</humanFormat><populate>0</populate><visible>0</visible><generalizations>u'agentCollaboratesWithAgent'</generalizations><domain>u'politician'</domain><range>u'politician'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'politicianEndorsesPolitician'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg2 * (endorse OR endorses OR endorsed OR endorsing) * arg1'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'Politician that endorses another politician'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicianUsEndorsedByPoliticianUs'</relationName><humanFormat>u'arg1 is a U.S. politician {endorsed by} the U.S. politician arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'politicianEndorsedByPolitician'</generalizations><domain>u'politicianUs'</domain><range>u'politicianUs'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"Barack Obama" "Rudy Giuliani"} {"Barack Obama" "John McCain"} {"Hillary Clinton" "Al Gore"} {"Hillary  Clinton" "Dick Cheney"} {"John McCain" "Bill Clinton"}  {"John McCain" "Caroline Kennedy"} '</knownNegatives><inverse>u'politicianUsEndorsesPoliticianUs'</inverse><seedInstances>u'{"Barack Obama" "Chris Dodd"} {"Barack Obama" "Hillary Clinton"} {"Hillary Clinton" "John Glenn"} {"Hillary  Clinton" "Luke Ravenstahl"} {"John McCain" "George W . Bush"}  {"John McCain" "Fred Thompson"} {"Hillary  Clinton" "Bill Clinton"} {"Hillary Clinton" "Wesley Clark"} {"Barack Obama" "Caroline Kennedy"} {"Barack Obama" "Al Gore"} {"John McCain" "Dick Cheney"} {"John McCain" "Rudy Giuliani"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>u'arg2 * (endorse OR endorses OR endorsed OR endorsing) * arg1'</queryString><editDate>u'2010-08-31'</editDate><author>u'Tae (via Bryan)'</author><curator>u''</curator><description>u'U.S. Politician that endorses another U.S. politician'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'politicianRepresentsLocation'</relationName><humanFormat>u'arg1 {represents} the region arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentRelatedToLocation'</generalizations><domain>u'politician'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"John McCain", "New York"}{"Barack Obama","Germany"}{"Michael Bloomberg","Washington"}'</knownNegatives><inverse>u'locationRepresentedByPolitician'</inverse><seedInstances>u'{"John Murtha", "Johnstown"}{"Barack Obama", "United States"}{"John McCain", "Arizona"}{"Harry Reid", "Nevada"}{"Jim Webb", "Virginia"}{"Dick Durbin", "Illinois"}{"Michael Bloomberg", "New York City"}{"Barney Frank", "Wellesley"}{"Rudy Giuliani", "New York City"}{"Bill Clinton", "United States"}{"Joe Lieberman", "Connecticut"}{"Phil Gramm", "Texas"}{"Lindsey Graham", "South Carolina"}{"Jesse Helms", "North Carolina"}{"Helmut Kohl", "Germany"}{"John Major", "UK"}{"Francois Mitterrand", "France"}{"Dianne Feinstein", "California"}'</seedInstances><seedExtractionPatterns>u'"arg1 represents arg2" "arg1 \' s home district is arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u''</queryString><editDate>u'2010-12-08'</editDate><author>u'Tom'</author><curator>u''</curator><description>u'Describes the city, state, country or other location represented by a politician'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'placeOfWorshipPracticesReligion'</relationName><humanFormat>u'arg1 is a place of worship {that practices} the religion of arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locatedAt'</generalizations><domain>u'placeOfWorship'</domain><range>u'religion'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' {"Kuopio Cathedral" "Buddhism"} {"Westminster Abbey" "Judaism"} {"Hagia Sophia" "Islam"} {"Htilominlo Temple" "Catholicism"} {"Muktinath" "Baptist"} {"San Francisco Zen Center" "Hinduism"} {"Ganden Monastery" "Islam"}'</knownNegatives><inverse>u'religionUsesPlaceOfWorship'</inverse><seedInstances>u' {"Kuopio Cathedral" "Lutheran"} {"Westminster Abbey" "Christianity"} {"Htilominlo Temple" "Buddhism"} {"Muktinath" "Hinduism"} {"San Francisco Zen Center" "Buddhism"} {"Ganden Monastery" "Buddhism"} {"Banteay Srei" "Hinduism"} {"East Ham Baptist Church" "Baptist"} {"Sleepy Hollow Presbyterian Church" "Presbyterianism"} {"The Great Mosque of Taza" "Islam"} {"The Hurva Synagogue" "Judaism"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2010-11-10'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'The religion practied in a place of worship.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/religion/place of worship", "/religion/place of worship/religion": [{ "name": null, "/common/topic/alias": [], "type": "/religion/religion" }] }]'</freebaseID><comment>u''</comment><relationName>u'personHasReligion'</relationName><humanFormat>u'arg1 {belongs to} the religion arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'religion'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'religionOfPerson'</inverse><seedInstances>u'{\u201cAbubakar Abdurajak Janjalani\u201d, \u201cMuslim\u201d} {\u201cTom Lehman\u201d, \u201cChristian\u201d} {\u201cDiane Olson\u201d, \u201cJewish\u201d} {\u201cEmile Lahoud\u201d, \u201cChristian\u201d} {\u201cSteve Schalchlin\u201d, \u201cBaptist\u201d} {\u201cAnnie Liebovitz\u201d, \u201cJewish\u201d} {\u201cRichard Goldstone\u201d, \u201cJewish\u201d} {\u201cAbdul Jalil Jan\u201d, \u201cIslam\u201d} {\u201cAbu Zubaydah\u201d, \u201cMuslim\u201d} {\u201cJohn Kerry\u201d, \u201cCatholic\u201d} {\u201cMurat Kurnaz\u201d, \u201cMuslim\u201d} {\u201cRichard Perle\u201d, \u201cJewish\u201d} {\u201cYolanda King\u201d, \u201cBaptist\u201d} {\u201cTheodor Kollek\u201d, \u201cJew\u201d} {\u201cSteve Schalchlin\u201d, \u201cBaptist\u201d} {\u201cIrene Kirkaldy\u201d, \u201cSeven-day Adventist\u201d} {\u201cHarry Dent\u201d, \u201cSouthern Baptist\u201d} {\u201cCarolyn Goodman\u201d, \u201cJew\u201d} {\u201cAndre Carson\u201d, \u201cIslam\u201d} {\u201cAlice Goodman\u201d, \u201cAnglican\u201d} {\u201cBarry Knight\u201d, \u201cBaptist\u201d} {\u201cCuthbert Scott\u201d, \u201cRoman Catholic\u201d} {\u201cDavid Roskies\u201d, \u201cJudaism\u201d} {\u201cEmily Sunstein\u201d, \u201cJewish\u201d} {\u201cForrest Dunn\u201d, \u201cEpiscopal\u201d} {\u201cFredie Prinze\u201d, \u201cRoman Catholic\u201d} {\u201cGrigory Potemkin\u201d, \u201cRussian Orthodox\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The religion to which a person has belonged.'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'personHasEthnicity'</relationName><humanFormat>u'arg1 {belongs to} the ethnic group arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'ethnicGroup'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'ethnicGroupOfPerson'</inverse><seedInstances>u'{\u201cCarla Del Ponte\u201d, \u201cSwiss\u201d} {\u201cZacarias Moussaoui\u201d, \u201cFrench\u201d} {\u201cOrly Taitz\u201d, \u201cSoviet\u201d} {\u201cAnnise Parker\u201d, \u201cAmerican\u201d} {\u201cCorey Bohan\u201d, \u201cAustralian\u201d} {\u201cArsene Wenger\u201d, \u201cFrench\u201d} {\u201cMasi Oka\u201d, \u201cJapanese-American\u201d} {\u201cAmy MacDonald\u201d, \u201cScottish\u201d} {\u201cKurt Westergaard\u201d, \u201cDanish\u201d} {\u201cDavid Coleman Headley\u201d, \u201cPakistani-American\u201d} {\u201cAbudl Karim al-Khawinay\u201d, \u201cYemeni\u201d} {\u201cSpelman College\u201d, \u201cPalestinian\u201d} {\u201cBarbara Boxer\u201d, \u201cAmerican\u201d} {\u201cHussein Kamel\u201d, \u201cIraqi\u201d} {\u201cJerome Robbins\u201d, \u201cRussian-Jewish\u201d} {\u201cJuliette Binoche\u201d, \u201cFrench\u201d} {\u201cHia Farrow\u201d, \u201cAmerican\u201d} {\u201cMurat Kurnaz\u201d, \u201cTurkish\u201d} {\u201cOspel\u201d, \u201cSwiss\u201d} {\u201cPaavo Nurmi\u201d, \u201cFinnish\u201d} {\u201cPaul Watson\u201d, \u201cCanadian\u201d} {\u201cRichard Perle\u201d, \u201cIsraeli\u201d} {\u201cRoy Scheider\u201d, \u201cAmerican\u201d} {\u201cVernon Bellecourt\u201d, \u201cLakota\u201d} {\u201cTheodor Kollek\u201d, \u201cIsraeli\u201d} {\u201cSteven Derounian\u201d, \u201cArmenian\u201d} {\u201cSilvestre Heerrera\u201d, \u201cMexican\u201d} {\u201cRichard Nolte\u201d, \u201cAmerican\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The ethnicity of a person'</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'agentHasWebsite'</relationName><humanFormat>u'arg1 operates the {website} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentRelatedToLocation'</generalizations><domain>u'agent'</domain><range>u'website'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'hasWikipediaURL'</mutexExceptions><knownNegatives>u' {"Google" "yahoo.com"} {"WordPress" "fawm.org"} {"Wil Wheaton" "msn.com"} {"Miscrosoft" "backpackit.com"} {"Metaweb" "developers.facebook.com"}'</knownNegatives><inverse>u'websiteOperatedByAgent'</inverse><seedInstances>u'{"February Album Writing Month" "fawm.org"} {"Wil Wheaton" "wilwheaton.net"} {"Derek Powazek" "powazek.com"} {"Miscrosoft" "msn.com"} {"Dark Dark Dark" "brightbrightbright.com"} {"37signals" "backpackit.com"} {"Metaweb" "www.freebase.com"} {"Facebook" "developers.facebook.com"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u''</queryString><editDate>u'2010-11-10'</editDate><author>u'Burr'</author><curator>u''</curator><description>u'The organization that operates a website'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/internet/website owner", "/internet/website owner/websites owned": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u''</comment><relationName>u'hasWikipediaURL'</relationName><humanFormat>u'arg1 can be {found on Wikipedia} at arg2'</humanFormat><populate>0</populate><visible>1</visible><generalizations>u'atLocation'</generalizations><domain>u'everyPromotedThing'</domain><range>u'url'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agentHasWebsite'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'wikipediaURLOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-07-09'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The Wikipedia page for a given category instance'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'hasVisualAppearance'</relationName><humanFormat>u'arg1 has {visual appearance} arg2'</humanFormat><populate>0</populate><visible>1</visible><generalizations>u'atLocation'</generalizations><domain>u'visualizableThing'</domain><range>u'url'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'visualAppearanceOf'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-09-19'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'The NEIL-learned visual appearance of something'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'organizationHasOfficialWebsite'</relationName><humanFormat>u'arg1 has {official website} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentHasWebsite'</generalizations><domain>u'organization'</domain><range>u'website'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'officialWebsiteOfOrganization'</inverse><seedInstances>u' {"Google" "google.com"} {"YouTube" "youtube.com"} {"WordPress" "wordpress.com"} {"Miscrosoft" "microsoft.com"} {"Twitter" "twitter.com"} {"Facebook" "facebook.com"} {\u201cInternal Revenue Service\u201d, \u201cirs.gov\u201d} {\u201cNational Rifle Association\u201d, \u201cwww.nra.org\u201d} {\u201cFree Thinking Film Society\u201d, \u201cwww.freethinkingfilms.com\u201d} {\u201cCanadian Islamic Congress\u201d, \u201ccanadianislamiccongress.com\u201d} {\u201cGLSEN\u201d, \u201chttp://www.glsen.org\u201d} {\u201cCingular\u201d, \u201chttp://www.cingular.com\u201d} {\u201cFEMA\u201d, \u201cfema.gov\u201d} {\u201cLancome\u201d, \u201cwww.lancome.com\u201d} {\u201cPeter D. Hart Research Associates\u201d, \u201chttp://www.hartresearch.com\u201d} {\u201cAQR Capital Management\u201d, \u201cwww.aqr.com\u201d} {\u201cArmy Medical Command\u201d, \u201chttp://www.armymedicine.army.mil\u201d} {\u201cDenso\u201d, \u201chttp://www.densoaftermarket.com\u201d} {\u201cFMCSA\u201d, \u201cwww.fmcsa.dot.gov\u201d} {\u201cHong Kong Disneyland\u201d, \u201chttp://www.hongkongdisneyland.com\u201d} {\u201cMBIA\u201d, \u201chttp://www.mbia.com\u201d} {\u201cMarkit\u201d, \u201chttp://www.markit.com\u201d} {\u201cNational Action Network\u201d, \u201chttp://www.nationalactionnetwork.net\u201d} {\u201cSLDN\u201d, \u201cwww.sldn.org\u201d} {\u201cZagat\u201d, \u201czagat.com\u201d} {\u201cSafe Passage\u201d, \u201csafepassage.org\u201d} {\u201cNorwegian University of Science and Technology\u201d, \u201cntnu.no\u201d} {\u201cNew York Immigration Coalition\u201d, \u201cthenyic.org\u201d} {\u201cCountry Music Association\u201d, \u201ccmaworld.com\u201d} {\u201cAsian Development Bank\u201d, \u201cadb.org\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-02-15'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u"An official top-level URL for an organization's website"</description><freebaseID>u''</freebaseID><comment>u'TAC KBP 2012'</comment><relationName>u'drugWorkedOnByAgent'</relationName><humanFormat>u'arg1 is a drug {worked on} by arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemInvolvedWithAgent'</generalizations><domain>u'drug'</domain><range>u'humanAgent'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'producedBy typeProducedBy'</mutexExceptions><knownNegatives>u'{"Viagra", "Merk"} {"Mozobil", "Pfizer"} {"Viracept", "Hoffman LaRoche"} {"Viagra", "Hoffman LaRoche"} {"Viagra", "Anormed"}'</knownNegatives><inverse>u'agentWorkedOnDrug'</inverse><seedInstances>u'{"Mozobil", "Anormed"} {"Velcade", "Millenium"} {"celecoxib", "Searle"} {"Fabrazyme", "Genzyme"} {"Viagra", "Pfizer"} {"IL-12", "Hoffman LaRoche"} {"IL-12", "the company"} {"IL-12", "Hoffman LaRoche"} {"verapamil", "Monsanto Co .\'s G .D . Searle division"} {"Covera-HS", "the company"} {"Covera-HS", "Monsanto Co .\'s G .D . Searle division"} {"Viracept", "Agouron Pharmaceuticals Inc ."} {"TXB 1296", "Texas Biotechnology"} {"anti-cancer compound", "NZ scientists"} {"indinavir sulfate", "Merck"} {"a promising anticancer substance in a shrub", "Cerylid Biosciences"} {"a unique chemical in latex produced by the Bintangor tree", "Scientists"} {"Calanolide A", "Scientists"} {"Celebrex", "Talley"} {"three other so-called COX-2 inhibitors", "Talley"} {"Calanolide A", "MediChem Research"} {"a cancer drug", "ImClone Systems"} {"Erbitux", "ImClone Systems"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-02-08'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u"This predicate relates a substance and a HumanAgent who is responsible for it.  Responsibility is understoond relatively broadly, and includes people or organizations responsible for the substance's discovery or marketing and manufacturing.  Additionally, agents that own the rights to the substance are also eligible to participate in this relationship.  Note that the humanAgent category include organizations, including universities, companies, and government agencies."</description><freebaseID>u'none'</freebaseID><comment>u'Added for February 2011 BLITZ run'</comment><relationName>u'agentStudiesPhysiologicalCondition'</relationName><humanFormat>u'arg1 is a person who {studies} the physiological condition arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'physiologicalCondition'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'physiologicalConditionStudedByPerson'</inverse><seedInstances>u'{"Matti Viitanen", "Alzheimers disease"} {"Dr . Denis A . Evans", "Alzheimer \' s"} {"Dr . Creighton Phelps", "Alzheimers disease"} {"University of Southern California researchers", "Alzheimer \' s disease"} {"Samir Khleif", "cancer"} {"a US researcher", "cervical cancer"} {"John Schiller", "cervical cancer"} {"Dr Henri Joyeux", "cancer"} {"Michael Leitzmann", "cancer"} {"Maria Hedelin", "prostate cancer"} {"Rui", "cancer"} {"Rui Zheng", "cancer"} {"a researcher", "viruses armed with suicide genes"} {"Savio Woo", "viruses armed with suicide genes"} {"Leon Schwartzenberg", "cancer"} {"Zhang Hongfei", "infectious disease"} {"researchers at the Veterans Affairs Medical Center in New Mexico", "hepatocellular carcinoma"} {"Dr . Thierry Poynard", "cirrhosis"} {"Charles M . Rice", "hepatitis"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-02-08'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This predicate holds between a HumanAgent and a condition, and means that the HumanAgent performs research related to condition.'</description><freebaseID>u'none'</freebaseID><comment>u'Added for February 2011 BLITZ run'</comment><relationName>u'drugPossiblyTreatsPhysiologicalCondition'</relationName><humanFormat>u'arg1 is a drug that {might treat} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'drug'</domain><range>u'physiologicalCondition'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"AZT", "cancer"} {"AZT", "breast cancer"} {"antiretroviral", "stroke"} {"letrozole", "AIDS"} {"Taxol", "HIV"} {"shark cartilage", "HIV"} {"Avapro HCT", "cancer"} {"Crixivan", "high blood pressure"} {"lectins", "stroke"}'</knownNegatives><inverse>u'physiologicalConditionPossiblyTreatedByDrug'</inverse><seedInstances>u'{"Viracept", "HIV"} {"AZT", "AIDS"} {"Atripla", "AIDS"} {"anti-retroviral", "HIV/AIDS"} {"Crixivan", "AIDS"} {"antiretroviral", "AIDS"} {"antiretroviral (ARV)", "AIDS"} {"protease inhibitors", "HIV"} {"AZT", "AIDS"} {"tamoxifen", "breast cancer"} {"letrozole", "breast cancer"} {"GnRH analogues", "prostate cancer"} {"GnRH analogues", "breast cancer"} {"Erbitux", "cancer"} {"Taxol", "breast cancer"} {"doxorubicin", "breast cancer"} {"cyclophosphamide", "breast cancer"} {"shark cartilage", "cancer"} {"shark cartilage", "breast cancer"} {"Avapro HCT", "high blood pressure"} {"warfarin", "stroke"} {"lectins", "human lung cancer"} {"lectins", "mouse muscle cancer"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-02-08'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'relates a substance to a condition that it might treat. This relation includes conditions that the substance has been designed or approved to treat, as well as conditions for which it is being investigated as a possible treatment.  Common folk remedies would also be eligible for this relation.  For example, it would be reasonable to say that "chicken noodle soup" is a possible treatment for "colds".'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/medicine/drug", "/medicine/medical treatment/used to treat": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'Added for February 2011 BLITZ run'</comment><relationName>u'drugExpectedReleaseDate'</relationName><humanFormat>u'arg1 is {expected to come to market} on arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atDate'</generalizations><domain>u'drug'</domain><range>u'date'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'releaseDateExpectedForDrug'</inverse><seedInstances>u'{"Avastin", "Thursday"} {"Avastin", "2004-02-26"} {"Zoloft", "later this year"} {"Zoloft", "1999"} {"Cialis", "this year"} {"Cialis", "2002"} {"Forteo", "this year"} {"Forteo", "2002"} {"Atomexetine", "this year"} {"Atomexetine", "2002"} {"Duloxetine", "this year"} {"Duloxetine", "2002"} {"generic versions of Tiazac", "the end of the year"} {"generic versions of Tiazac", "2002"} {"NicoDerm CQ patch", "August"} {"NicoDerm CQ patch", "1996-08"} {"Nicotrol patch", "July"} {"Nicotrol patch", "1996-07"} {"Nicorette gum", "Earlier in the year"} {"Nicorette gum", "1996"} {"medication", "Earlier in the year"} {"medication", "1996"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-02-08'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This predicate represents the relationship between a pharmaceutical substance and the date when it is expected to be approved for legal marketing.  For our purposes, the date will typically correspond to a date for FDA approval, but the relationship itself is not restricted to approval for sale in the United States.'</description><freebaseID>u'none'</freebaseID><comment>u'Added for February 2011 BLITZ run'</comment><relationName>u'drugHasSideEffect'</relationName><humanFormat>u'arg1 is a {drug having the side effect} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'drug'</domain><range>u'physiologicalCondition'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"LSD", "constipation"} {"Vioxx", "bipolar disorder"} {"tylenol", "sexual dysfunction"} {"tylenol", "weight gain"} {"Celebrex", "birth defects"} {"LSD", "liver damage"}'</knownNegatives><inverse>u'sideEffectCausedByDrug'</inverse><seedInstances>u'{"thalidomide", "birth defects"} {"tylenol", "liver damage"} {"tamoxifen", "exhausted"} {"Vioxx", "cardiovascular problems"} {"Vioxx", "strokes"} {"Vioxx", "heart attacks"} {"Celebrex", "heart attacks"} {"Vioxx", "high blood pressure"} {"Vioxx", "edema"} {"Celebrex", "gastrointestinal bleeding"} {"Celebrex", "ulcers"} {"Vioxx", "heart problems"} {"LSD", "flashbacks"} {"the drugs", "bipolar disorder"} {"SSRIs", "bipolar disorder"} {"Prozac", "sexual dysfunction"} {"Elavil", "dry mouth"} {"Elavil", "constipation"} {"Elavil", "weight gain"} {"Imipramine", "dry mouth"} {"Imipramine", "constipation"} {"Imipramine", "weight gain"} {"Imipramine", "blurred vision"} {"Tofranil", "dry mouth"} {"Tofranil", "constipation"} {"Tofranil", "weight gain"} {"Tofranil", "blurred vision"} {"Elavil", "blurred vision"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-02-08'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This predicate indicates that the use of a drug has a physiologicalCondition as a side-effect.  Uses of this predicate may include both very common side-effects, and rare but reported side-effects.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/medicine/drug", "/medicine/medical treatment/side effects": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u'Added for February 2011 BLITZ run'</comment><relationName>u'farmLocatedInState'</relationName><humanFormat>u'arg1 is a farm {in the state or province} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'farm'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateContainsFarm'</inverse><seedInstances>u'{"Wood Prarie Farm" "Maine"} {"Heritage Farms" "Ohio"} {"Waltham Fields Community Farm" "Massachusetts"} {"Delta Farm" "Washington"} {"Jacobs Farm" "California"} {"Johnson Farm" "California"} {"Zenger Farm" "Oregon"} {"Rogers Farm" "Florida"} {"Maple View Farm" "North Carolina"} {"South Farm" "Ohio"} {"Roxbury Farm" "New York"} {"Cole Farms" "West Virginia"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-25'</editDate><author>u'Justin'</author><curator>u''</curator><description>u'The state/province a farm is located in'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'farmLocatedInCountry'</relationName><humanFormat>u'arg1 is a farm {in the country} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'farm'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryContainsFarm'</inverse><seedInstances>u'{"Wood Prarie Farm" "United States"} {"Heritage Farms" "United States"} {"Waltham Fields Community Farm" "United States"} {"Delta Farm" "United States"} {"Jacobs Farm" "United States"} {"Johnson Farm" "United States"} {"Zenger Farm" "United States"} {"Rogers Farm" "United States"} {"Maple View Farm" "United States"} {"South Farm" "United States"} {"Roxbury Farm" "United States"} {"Cole Farms" "United States"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-25'</editDate><author>u'Justin'</author><curator>u''</curator><description>u'The country a farm is located in'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'farmProducesAgriculturalProduct'</relationName><humanFormat>u'arg1 is a farm that {produces} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationOfItemExistence'</generalizations><domain>u'farm'</domain><range>u'agriculturalProduct'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'agriculturalProductProducedByFarm'</inverse><seedInstances>u'{"Roxbury Farm" "vegetables"} {"Roxbury Farm" "beets"} {"Roxbury Farm" "corn"} {"Roxbury Farm" "broccoli"} {"Maple View Farm" "ice cream"} {"Maple View Farm" "milk"} {"Maple View Farm" "dairy products"} {"Rogers Farm" "vegetables"} {"Rogers Farm" "fruit"} {"Rogers Farm" "berries"} {"Rogers Farm" "strawberries"} {"Zenger Farm" "vegetables"} {"Zenger Farm" "onions"} {"Johnson Farm" "Christmas trees"} {"Jacobs Farm" "herbs"} {"Waltham Fields Community Farm" "vegetables"} {"Heritage Farms" "pumpkins"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-25'</editDate><author>u'Justin'</author><curator>u''</curator><description>u'the agricultural products produced by a farm'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'marriedInYear'</relationName><humanFormat>u'arg1 got {married in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atDate'</generalizations><domain>u'person'</domain><range>u'year'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'yearOfMarriage'</inverse><seedInstances>u'{"Liam Gallagher", "1997"} {"Patsi Kensit", "1997"} {"Alvin E . Dodd", "1921"} {"she", "1921"} {"Catherine Filene Shouse", "1921"} {"Mandela", "1998"} {"Nelson Mandela", "1998"} {"he", "1995"} {"Imran Khan", "1995"} {"Jemima Goldsmith", "1995"} {"Michael Jackson", "1994"} {"Lisa Marie Presley", "1994"} {"They", "1982"} {"Patricia Verdier", "1982"} {"They", "1982"} {"Walter Bergman", "1982"} {"Mark Phillips", "1973"} {"Prince Charles", "1981"} {"Diana", "1981"} {"Selden", "1956"} {"David Selden", "1956"} {"Bernice Seach", "1956"} {"Woody Allen", "1997"} {"Soon-Yi Previn", "1997"} {"Kit Chalcraf", "1995"} {"Susanne Hal", "1995"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-28'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This relation holds when a person married some other person in the specified year.'</description><freebaseID>u'none'</freebaseID><comment>u'For BLITZ2'</comment><relationName>u'organizationHiredPerson'</relationName><humanFormat>u'arg1 {hired} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'worker'</generalizations><domain>u'organization'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'organizationTerminatedPerson'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personHiredByOrganization'</inverse><seedInstances>u'{"Affiliated Managers Group", "Brian Girvan"} {"Putnam", "Janis Miller"} {"The firm", "Gordon Hall"} {"Morgan Stanley &amp; Co", "Gordon Hall"} {"Oracle", "Ray Lane"} {"the Boston public school system", "I"} {"Quaker State", "He"} {"Quaker State", "William W . Tucker"} {"Cal", "Holmoe"} {"Cal", "Tom Holmoe"} {"Vietnam Veterans of America Foundation", "Williams"} {"Vietnam Veterans of America Foundation", "Jody Williams"} {"Jaguars", "Tom Coughlin"} {"Procter &amp; Gamble Co", "Fernandez"} {"Procter &amp; Gamble Co", "Leopoldo Fernandez"} {"the original Toronto production of ``Godspell .\'\'", "They"} {"the original Toronto production of ``Godspell .\'\'", "Gilda Radner"} {"the original Toronto production of ``Godspell .\'\'", "They"} {"the original Toronto production of ``Godspell .\'\'", "Martin Short"} {"Boston Bruins", "Tom McVie"} {"the organization", "Steve Kasper"} {"Boston Bruins", "Steve Kasper"} {"Lehman", "Philippe Burke"} {"Lehman Brothers Holdings Inc .", "Philippe Burke"} {"Dreyfus", "Michael Schonberg"} {"the force", "She"} {"the force", "Maurita Bryant"} {"the Pittsburgh police force", "She"} {"the Pittsburgh police force", "Maurita Bryant"} {"Triumph Motors", "Ward"} {"Triumph Motors", "Peter Ward"} {"Hofstra", "he"} {"Hofstra", "Robert Sobel"} {"Charles Scwhab Corp .", "Linnet Deily"} {"Mrs . Field \' s Cookies", "Tanner"} {"Mrs . Field \' s Cookies", "Mark Tanner"} {"French Army", "She"} {"French Army", "Batsheva de Rothschild"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-28'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This relation connects an organization to individuals that it hired.  It does include people hired as contractors, not just people hired as employees. It does not include elected officials. It does not include organizations that may be hired for some particular purpose. Typically, hiring someone does involve paying them, though that is seldom stated explicitly when the relation is mentioned. A hiring event (the actual initiation of the employment) must be mentioned for this relation to apply; if the text just says that Mary Smith works for IBM, that is not enough to assert a hired relation.'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/business/employer", "/business/employer/employees": [{ "/business/employment tenure/person": [{ "name": null, "/common/topic/alias": [] }] }] }]'</freebaseID><comment>u'For BLITZ2'</comment><relationName>u'organizationTerminatedPerson'</relationName><humanFormat>u'arg1 {terminated} the employment of arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'worker'</generalizations><domain>u'organization'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'organizationHiredPerson'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personTerminatedByOrganization'</inverse><seedInstances>u'{"Russian Defense Ministry", "Semyonov"} {"Russian Defense Ministry", "Vladimir Semyonov"} {"South Korea", "Lee Won-Jong"} {"Hydron Technologies", "Harvey Tauman"} {"Rams", "Rich Brooks"} {"Egypt", "Yehia Kazarian"} {"Egypt", "Tim Hatrich"} {"Kremlin", "Alexander Korzhakov"} {"Sri Lanka", "Arjuna Ranatunga"} {"bank", "Svetlana Kudryavtsev"} {"Bank of New York", "Svetlana Kudryavtsev"} {"Smith Barney Inc .", "Robert B . Maloney"} {"army", "Moshe Ben Zikri"} {"Israeli army", "Moshe Ben Zikri"} {"Army", "Bleckley"} {"Army", "Jessica Bleckley"} {"University of Pennsylvania", "Cochran"} {"University of Pennsylvania", "Thomas C . Cochran"} {"Hiscock &amp; Barclay", "partner"} {"Hiscock &amp; Barclay", "Albert Hessberg II"} {"Lotus Development Corp .", "Edwin Gillis"} {"49ers", "George Seifert"} {\u201cArmy\u201d, \u201cBleckley\u201d} {\u201cArmy\u201d, \u201cJessica Bleckley\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-28'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This relation holds when the organization has teminated the employment relationship. This includes firings, RIFs, resignations, and retirements. Normal ending of a contract does not constitute terminatedEmployment. A termination event (the endinf of the employment) must be mentioned for this relation to apply; if the text just says that Mary Smith used to work for IBM, that is not enough to assert a terminatedEmployment relation. '</description><freebaseID>u'none'</freebaseID><comment>u'For BLITZ2'</comment><relationName>u'personHasJobPosition'</relationName><humanFormat>u'arg1 {held the position of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'jobPosition'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'jobPositionHeldByPerson'</inverse><seedInstances>u'{"Timothy Harris", "vice president"} {"Timothy Harris", "managing director"} {"Datuk Lim Ah Lek", "Human Resources Minister"} {"Jack Atterberry", "director of campaign reporting"} {"Robert F . Wagner", "Mayor"} {"Doug Hannaway", "Police Superintendent"} {"He", "deputy superintendent of insurance"} {"Joseph Murphy", "deputy superintendent of insurance"} {"Bill Richardson", "Energy Secretary"} {"Enrique ter Horst", "special representative for Haiti"} {"Hayward", "vice admiral"} {"John Hayward", "vice admiral"} {"Charlene Barshefsky", "acting US trade representative"} {"Schottland", "chairman"} {"Charles Irwin Schottland", "chairman"} {"Eduardo Duhalde", "Governor"} {"Randolph Smoak Jr .", "secretary-treasurer"} {"George Tilley", "sheriff"} {"Mohammed", "prophet"} {"Hanna Gronkiewicz-Waltz", "mayor"} {"Mikhail Gorbachev", "leader"} {"Mohammad Khatami", "president"} {"Zoran Djindjic", "prime minister"} {"Haim Ramon", "justice minister"} {"Al Gore", "vice president"} {"Abu Izzadeen", "cleric"} {"Anwar Bunni", "activist"} {"Slobodan Milosevic", "president"} {"Ahmad Abdullah al-Sabah", "Sheikh"} {"Theo van Gogh", "columnist"} {"Toomas Hendrik Ilves", "President"} {"Paul Klebnikov", "journalist"} {"Diana", "Princess"} {"Anwar Bunni", "lawyer"} {"Abdullah Ocalan", "leader"} {"Leyla Zana", "members of Parliament"} {"Robert Mugabe", "President"} {"Michel Kilo", "writer"} {"Frank-Walter Steinmeier", "Foreign Minister"} {"Arnaldo Otegi", "leader"} {"Ramush Haradinaj", "prime minister"} {"Theo van Gogh", "filmmaker"} {"Zaddick Elimelech Weissblum", "leader"} {"Ahmad Abdullah al-Sabah", "health minister"} {"Philippe Val", "director of publications"} {"Jose Bove", "activist"} {"Thich Nhat Hanh", "leader"} {"Andris Piebalgs", "Energy Commissioner"} {"Mahmud Issa", "activist"} {"Todor Jivkov", "dictator"} {"Michel Kilo", "analyst"} {"Otylia Jedrzejczak", "swimmer"} {"Thoraya Obaid", "executive director"} {"Antoinette Batumubwira", "Minister of Foreign Affairs"} {"Georg Buschner", "defender"} {"Oerter", "track and field athlete"} {"Alan Ball", "captain"} {"Konno", "prop forward"} {"Woodruff", "lieutenant colonel"} {"Jack Newton", "golfer"} {"Bruce Devlin", "golfer"} {"Joe Montana", "quarterback"} {\u201cBruce Crampton", "golfer"} {"Sir Stafford Cripps", "Chancellor of the Exchequer"} {"Woodruff", "athlete"} {"Sardesai", "batsman"} {"Silvio Berlusconi", "Prime Minister"} {"Derwall", "coach"} {"Woodruff", "officer"} {"Ski jump guru", "coach"} {"George Steinbrenner", "owner"} {"Burdette", "pitcher"} { "Charles O. Finley", "owner"} {"Manuel Galrinho Bento", "goalkeeper"} {"Coulthard", "test driver"} {"Massa", "tester"} {"Sutil", "pianist"} {"Rosberg", "tester"} {"Rezazadeh", "lifter"} {"Chris Paul", "guard"} {"Tishchenko", "boxer"} {"Mirza", "tennis player"} {"Tony Estanguet", "kayakar"} {"Nikolai Khromov", "manager"} {"Prapawadee Charoenrattanatharakul", "lifter"} {"Germaine Tillion", "anthropologist"} {"Youssef Chahine", "filmmaker"} {"Suharto", "dictator"} {"Miriam Makeba", "singer"} {"Joern Utzon", "architect"} {"Chingiz Aitmatov", "writer"} {"Richard Widmark", "actor"} {"Cyd Charisse", "dancer"} {"Sister Emmanuelle", "charity worker"} {"Alexander Solzhenitsyn", "writer"} {"Yma Sumac", "Soprano"} {"Joerg Haider", "politician"} {"Mahmud Darwish", "poet"} {"Levy Mwanawasa", "president"} {"Jesse Helms", "senator"} {"Dith Pran", "journalist"} {"Christodoulos", "Archbishop"} {"Sydney Pollack", "film director"} {"Alexy II", "patriarch"} {"Albert Hofmann", "chemist"} {"Charlton Heston", "film star"} {"Heath Ledger", "actor"} {"Barack Obama", "president-elect"} {"Arthur C. Clarke", "writer"} {"Dino Risi", "director"} {"Isaac Hayes", "musician"} {"Papa Wendo", "musician"} {"Aime Cesaire", "poet"} {"Paul Newman", "film star"} {"Sister Emmanuelle", "nun"} {"Yves Saint Laurent", "fashion designer"} {"Roy Scheider", "actor"} {"Cyd Charisse", "actress"} {"V.P. Singh", "prime minister"} {"Natalia Bessmertnova", "prima ballerina"} {"Miriam Makeba", "singer"} {"Sydney Pollack", "director"} {"Natalia Bessmertnova", "ballerina"} {"Isaac Hayes", "musician"} {"Mahmud Darwish", "poet"} {"Eartha Kitt", "actress"} {"Dino Risi", "director"} {"Youssef Chahine", "filmmaker"} {"Alexy II", "patriarch"} {"Richard Widmark", "actor"} {"Albert Hofmann", "chemist"} {"Harold Pinter", "playwright"} {"Alexander Solzhenitsyn", "writer"} {"Eartha Kitt", "singer"} {"Arthur C. Clarke", "writer"} {"Aime Cesaire", "poet"} {"Sister Emmanuelle", "nun"} {"Cyd Charisse", "dancer"} {"Heath Ledger", "actor"} {"Roy Scheider", "actor"} {"Joern Utzon", "architect"} {"Germaine Tillion", "anthropologist"} {"Bettie Page", "model"} {"Christodoulos", "Archbishop"} {"Jesse Helms", "senator"} {"V.P. Singh", "prime minister"} {"Dith Pran", "journalist"} {"Chingiz Aitmatov", "writer"} {"Yves Saint Laurent", "fashion designer"} {"Papa Wendo", "musician"} {"Jacques Piccard", "explorer"} {"Richard Nixon", "president"} {"Kanaan", "team leader"} {"Helio Castroneves", "driver"} {"Viso", "driver"} {"Perera", "test driver"} {"Wilson", "driver"} {"Duno", "naval engineer"} {"George F. Colony", "chief executive"} {"Craig Mundie", "chief research and strategy officer"} {"Brad Silverberg", "venture capitalist"} {"Joseph M. Tucci", "chief executive"} {"Jeffrey R. Immelt", "brand manager"} {"Robert J. Bach", "executive"} {"Gary Flake", "head of research"} {"Bill Gates", "chairman"} {"Bradford L. Smith", "general counsel"} {"Edward Kuss", "math teacher"} {"Richard G. Sherlund", "analyst"} {"Brad Silverberg", "venture capitalist"} {"Michael G. King Jr.", "analyst"} {"Scannon", "chief biotechnology officer"} {"John L. Castello", "chief executive"} {"David Webber", "analyst"} {"George H.W. Bush", "pilot"} {"George H.W. Bush", "President"} {"Arthur Kornberg", "professor"} {"Gary P. Pisano", "professor"} {"David Webber", "analyst"} {"Arthur Kornberg", "Dr."} {"Samuel D. Isaly", "managing partner"} {"Patrick J. Scannon", "Dr."} {"Arthur Kornberg", "emeritus professor"} {"Greg Schmidt", "physician"} {"Mary Haak-Frendscho", "vice president for preclinical research"} {"Susan", "scuba diving instructor"} {"Tommy Doyle", "football coach"} {"Greg Schmidt", "Dr."} {"Elizabeth", "Queen"} {"Holly Fletcher", "correspondent"} {"David Ormsby-Gore", "Lord Harlech"} {"Richard Cushing", "Cardinal"} {"Amanda Smith", "historian"} {"Francis Spellman", "Archbishop"} {\u201cJoe", "ambassador to Britain"} {"William Cavendish", "Marquess of Hartington"} {"Bush", "President"} {"Jaap de Hoop Scheffer", "Secretary General"} {"Jatin Das", "Painter"} {"Josh Bolton", "Chief of Staff"} {"Paul Reubens", "actor"} {"Paul Reubens", "actor"} {"James Goldsmith", "environmentalist"} {"Shivji Panikker", "dean"} {"Jerry Lewis", "Rep."} {"Pankaj Singh", "writer"} {"Valencia Vilchis", "biologist"} {"Bernie McCabe", "State Attorney"} {"Beverly Andringa", "assistant"} {"Rhonda Schroeder", "chiropractor"} {"Chris Tisch", "staff writer"} {"Cathy Wos", "researcher"} {"Carolyn Edds", "researcher"} {"Alicia Waddell", "hairdresser"} {"Rhonda Schroeder", "Dr."} {"Bernie McCabe", "State Attorney"} {"Earl Presley Sr.", "juvenile detention officer"} {"Beverly Andringa", "prosecutor"} {"Beverly Andringa", "prosecutor"} {"Martinez", "baseball player"} {"Troy Hitchcox", "detective"} {"Dee Anna Farnell", "Judge"} {"Martinez", "pitcher"} {"Winthrop Sergeant", "critic"} {"Enrico Caruso", "opera singer"} {"Greenough", "associate editor"} {"Sarah Caldwell", "conductor"} {"Liebling", "teacher"} {"Sarah Caldwell", "stage director"} {"Joseph Rosenstock", "conductor"} {"Edgar Vincent", "personal manager"} {"Phyllis Curtin", "soprano"} {"Franco Abbiati", "critic"} {"Joseph Rosenstock", "general director"} {"Alan Rich", "critic"} {"Norman Treigle", "bass-baritone"} {"Tito Capobianco", "stage director"} {"Julius Rudel", "conductor"} {"Sills", "opera star"} {"Tom LaSorda", "president"} {"Tom LaSorda", "president"} {"Schrempp", "executive"} {"Joseph J. Farnan Jr.", "Judge"} {"Ronald Kolka", "chief financial officer"} {"Ron Kutz", "dealer"} {"Gerald Meyers", "chairman"} {"Gerald Meyers", "professor"} {"Mary Turner", "manager"} {"Ralph Gilles", "vice president of design"} {"John Casesa", "Financial analyst"} {"Ron Kutz", "general manager"} {"Eric Ridenour", "Chief Operating Officer"} {"Tom LaSorda", "CEO"} {"LaSorda", "CEO"} {"Carlos Gutierrez", "Commerce Secretary"} {"Gordon Johndroe", "special assistant to the president"} {"Margaret Spellings", "senior adviser"} {"George Miller", "Rep."} {"Johndroe", "press secretary"} {"Israel Hernandez", "assistant secretary for trade promotion"} {"Brian Montgomery", "assistant secretary for housing"} {"Clay Johnson", "deputy director of management"} {"Brian Montgomery", "advance man"} {"George H.W. Bush", "President"} {"Harry Whittington", "lawyer"} {"Hernandez", "director of voter contact"} {"Clay Johnson", "appointments director"} {"Ted Kennedy", "Sen."} {"Clay Johnson", "executive director"} {"Montgomery", "director of special events and operations"} {"Israel Hernandez", "director general"} {"Clay Johnson", "chief of staff"} {"Brian Montgomery", "federal housing commissioner"} {"Margaret Spellings", "secretary of education"} {"Gordon Johndroe", "press secretary"} {"Gonzales", "Attorney General"} {"Cheney", "Vice President"} {"Alberto Gonzales", "attorney general"} {"Montgomery", "director of advance"} {"Karen Hughes", "Under Secretary of State"} {"Montgomery", "deputy assistant to the president"} {"Gonzales", "White House counsel"} {"Clay Johnson", "assistant to the president for presidential personnel"} {"Montgomery", "director of advance"} {"John Ashcroft", "Attorney General"} {"Margaret Spellings", "legislative aide"} {"Todd Beyer", "volunteer"} {"Johndroe", "associate political director"} {"Hernandez", "liaison"} {"Powers", "top deputy mayor"} {"Lloyd F. MacMahon", "Judge"} {"Donna Hanover", "television journalist"} {"Elizabeth", "Queen"} {"Kerik", "head of its security arm"} {\u201cPlaca", "the priesthood"} {"Joseph Lhota", "investment banker"} {"Kerik", "bodyguard"} {"Ramon Cortines", "schools chancellor"} {"David N. Dinkins", "president"} {"Bernard B. Kerik", "police commissioner"} {"Wayne Barrett", "writer"} {"Kerik", "campaign driver"} {"Ken Breen", "lawyer"} {"Loughlin", "Bishop"} {"Lloyd F. MacMahon", "Judge"} {\u201cRandy Levine", "labor commissioner"} {"Siegel", "history professor"} {"Howard Safir", "police commissioner"} {"Randy Levine", "aide"} {"Crew", "superintendent"} {"Abdullah II", "King"} {"Kerik", "detective"} {"Fred Siegel", "campaign adviser"} {"Judith Nathan", "pharmaceutical sales manager"} {"Regina", "social work"} {"Young", "counselor"} {"Placa", "priesthood"} {"Mastro", "chief of staff"} {"George P. Schultz", "Secretary of State"} {"Beaverbrook", "Lord"} {"Church", "model"} {"Lawrence Schiller", "writer"} {"Jimmy Breslin", "writer"} {"Jason Epstein", "editor"} {"Rip Torn", "actor"} {"Lawrence Schiller", "filmmaker"} {"Richard Gilman", "critic"} {"Isaac Barnett", "businessman"} {"John F. Kennedy", "President"} {"Jeanne Campbell", "Lady"} {"Ma Jun", "author"} {"Xu Yuming", "researcher"} {"Fan Xiao", "geologist"} {"Lang Cheng", "director"} {"Chen Deming", "economic planner"} {"Wen Jiabao", "Prime Minister"} {"Ma Jun", "environmentalist"} {"Richard Taylor", "executive director"} {"Hu Jintao", "President"} {"Andrew Marra", "special correspondent"} {"KEVIN RUDD", "Prime Minister"} {"Guo", "diver"} {"Argentine", "right winger"} {"Nestor Kirchner", "President"} {"John Howard", "Prime Minister"} {"LIONEL MESSI", "Soccer player"} {"QUSAI KHIDR", "host"} {"DENIS MUKWEGE", "Physician"} {"Sarkozy", "mayor"} {"JAVIER BARDEM", "Actor"} {"JOSE PADILHA", "Filmmaker"} {"Okonjo-Iweala", "finance and foreign minister"} {"Reygadas", "lawyer"} {"Jacques Chirac", "president"} {"GUO JINGJING", "Diver"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "SHEIK"} {"NGOZI OKONJO-IWEALA", "managing director"} {"Rudd", "prime minister"} {"Mukwege", "doctor"} {"LORENA OCHOA", "golfer"} {"Wainaina", "editor"} {"Okonjo-Iweala", "fellow"} {"Nick Wadhams", "special correspondent"} {"NICOLAS SARKOZY", "President"} {"Reygadas", "film-maker"} {"BINYAVANGA WAINAINA", "Magazine editor"}  {"Carlos Reygadas", "director"} {"Okonjo-Iweala", "managing director"} {"John Edgar Wideman", "professor"} {"Askold Melnyczuk", "teacher"} {"Manil Suri", "Novelist"} {"Anthony Lewis", "columnist"} {"Rockwell Kent", "artist"} {"Bernhard Schlink", "author"} {"David Levering Lewis", "historian"} {"William Wilberforce", "activist"} {"Askold Melnyczuk", "teacher"} {"Madeleine Albright", "secretary of state"} {"Chris Hedges", "writer"} {"Bill Mauldin", "political cartoonist"} {"James Wood", "critic"} {"Ted Landsmark", "lawyer"} {"James O\'Toole", "historian"} {"Dee Dee Myers", "spokeswoman"} {"Tahmima Anam", "Novelist"} {"Chitra Banerjee Divakaruni", "Novelist"} {"Howard Davidowitz", "retail consultant"} {"Richard Rainwater", "hedge fund manager"} {"Craig Schmidt", "analyst"} {"Millard S. Drexler", "chief executive"} {"Bill Dreher", "analyst"} {"Carol Levenson", "credit analyst"} {"Adrianne Shapira", "analyst"} {"Gregory  elich", "analyst"} {"Burt Flickinger", "retail consultant"} {"Bruce Greenwald", "professor of finance and economics"} {"Leiva", "consultant"} {"Chris Kronner", "executive chef"} {"Amanda Gold", "Writer"} {"George Morrone", "chef"} {"Begg", "sous chef"} {"Miriam Morgan", "Editor"} {"Christopher Kostow", "chef"} {"Brian Reed", "VP"} {"James Syhabout", "chef"} {"Tara Duggan", "Writer"} {"Rocco DiSpirito", "chef"} {"Michael Bauer", "Executive Food and Wine Editor"} {"Jonnatan Leiva", "executive chef"} {"Carol Ness", "Writer"} {"Frank H. Murkowski", "Sens"} {"John D. Dingell", "Rep"} {"Edward J. Markey", "Rep"} {"Charles E. Schumer", "Sens"} {"George H.W. Bush", "President"} {"Larry Goldstein", "energy analyst"} {"William H. Brown III", "energy analyst"} {"O\'Reilly", "chief executive"} {"Paul Bledsoe", "strategy director"} {"Lee R. Raymond", "chief executive"} {"Jeroen van der Veer", "chief executive"} {"Mike Castle", "Rep"} {"Chris Welberry", "spokesman"} {"Mike Jackson", "chief executive"} {"Newt Gingrich", "speaker"} {"Susan M. Cischke", "group vice president for sustainability, environment and safety engineering"} {"Newt Gingrich", "Republican leader"} {"Dan Becker", "lobbyist"} {"Stephen P.A. Brown", "director of energy economics and microeconomic policy analysis"} {"Joseph A. Jeffries", "Spc."} {"Michael J. Kelley", "Sgt."} {"Bryan A. Brewster", "Sgt."} {"Larry I. Rougle", "Staff Sgt."} {"Kettle", "construction and demolition engineer"} {"Emmanuel Hernandez", "Pfc."} {"Jimmy Carabello", "Command Sgt. Maj."} {"Matthew D. Blaskowski", "Staff Sgt."} {"Jeffrey D. Kettle", "Sgt. 1st Class"} {"Tina Beller", "spokeswoman"} {"Randy Smith", "general manager"} {"Armando Marsans", "outfielder"} {"Dave Dombrowski", "president"} {"Todd Jones", "reliever"} {"Dick Tracewski", "coach"} {"Adrian Burgos", "Dr"} {"Samuel", "coach"} {"Randy Smith", "general manager"} {"Rick Porcello", "pitcher"} {"Billy Beane", "general manager"} {"Al Avila", "assistant general manager"} {"Armando Galarraga", "pitcher"} {"Rafael Almeida", "infielder"} {"Samuel", "coach"} {"Miguel Tejada", "shoe-shine boy"} {"Ted Williams", "hitter"} {"Tony Fernandez", "shortstop"} {"Carlos Guillen", "third baseman"} {"Ramon Santiago", "infielder"} {"Steven Light", "professor"} {"Jack Abramoff", "lobbyist"} {"J. Terrence Lanni", "executive"} {"Ralph Reed", "director"} {"Wes Gullett", "lobbyist"} {"Rick Davis", "campaign manager"} {"Kent Hance", "congressman"} {"Steve Hart", "lawyer"} {"Kent Hance", "lawyer"} {"John Weaver", "chief political strategist"} {"Scott Reed", "lobbyist"} {"William S. Cohen", "Defense Secretary"} {"Scott Crowell", "lawyer"} {"Franklin Ducheneaux", "aide"} {"Roy Fletcher", "consultant"} {"Richard F. Velky", "Chief"} {"Jay B. Stewart", "managing partner"} {"Scott Reed", "lobbyist"} {"David Sickey", "vice chairman"} {"Bob Dole", "Sen"} {"John McCain", "Sen"} {"John Engler", "Gov"} {"Brant Imperatore", "lobbyist"} {"Morris K. Udall", "Rep"} {"Tom DeLay", "majority leader"} {"Sig Rogich", "fundraiser"} {"Barack Obama", "Sen"} {"Joseph I. Lieberman", "Sen"} {"Jeff Sanderson", "publicist"}{"William Inge", "playwright"} {"Newman", "delegate"} {"Richard M. Nixon", "President"} {"Jacqueline Witte", "actress"} {"Josh Logan", "director"} {"Jimmy Carter", "President"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-28'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This relation holds when the person has held the position at some point in some organization.'</description><freebaseID>u'none'</freebaseID><comment>u'For BLITZ2'</comment><relationName>u'personGraduatedSchool'</relationName><humanFormat>u'arg1 {graduated from} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personAttendsSchool'</generalizations><domain>u'person'</domain><range>u'school'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personLeadsOrganization'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'schoolGraduatedPerson'</inverse><seedInstances>u'{"Unanue", "Duke University"} {"Joseph F . Unanue", "Duke University"} {"Unanue", "University of North Carolina"} {"Joseph F . Unanue", "University of North Carolina"} {"Charles Anderwald", "St . Gerard High School"} {"she", "Bristol Community College"} {"Patricia Lapre", "Bristol Community College"} {"She", "Barnard College"} {"Diane Price Baker", "Barnard College"} {"he", "Brooklyn College"} {"Sol Hoffman", "Brooklyn College"} {"he", "University of Michigan"} {"Sol Hoffman", "University of Michigan"} {"He", "University of Toronto"} {"Solomon D . Erulkar", "University of Toronto"} {"He", "Johns Hopkins"} {"Solomon D . Erulkar", "Johns Hopkins"} {"he", "Brown University"} {"James T . Tierney", "Brown University"} {"he", "Brown University"} {"James T . Tierney", "Brown University"} {"He", "Harvard"} {"Kim B . Clark", "Harvard"} {"He", "Auburn University"} {"Vincent Jackson", "Auburn University"} {"Akishino", "Gakushuin University"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-03-28'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'This holds when the person has graduated from the educational institution at some time. This includes high schools, say, as well as universities. A division of an institution ("Yale Business School") will be scored as the same answer as the institution as a whole ("Yale"). '</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/education": [{ "/education/education/degree": [] }], "/education/education/institution": [{ "name": null, "/common/topic/alias": [], "type": "/education/educational institution" }] }]'</freebaseID><comment>u'For BLITZ2'</comment><relationName>u'sportHasSportsTeamPosition'</relationName><humanFormat>u'arg2 {is a role for players of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sport'</domain><range>u'sportsTeamPosition'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u'{"baseball","forward"}{"football","forward"}'</knownNegatives><inverse>u'sportsTeamPositionForSport'</inverse><seedInstances>u'{"baseball","pitcher"}{"baseball","catcher"}{"baseball","outfielder"}{"baseball","shortstop"}{"basketball","guard"}{"basketball","forward"}{"basketball","point guard"}{"hockey","goalie"}{"soccer","goalie"}{"soccer","midfield"}{"hockey","forward"}{"football","quarterback"}{"football","running back"}{"football","linebacker"}{"football","tight end"}{"football","nose guard"}'</seedInstances><seedExtractionPatterns>u'"arg1 teams have arg2" "arg1 position is arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg2 is a position on a arg1'</queryString><editDate>u'2011-05-19'</editDate><author>u'Tom'</author><curator>u''</curator><description>u'The relation between a sport and team positions filled by athletes'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'athletePlaysSportsTeamPosition'</relationName><humanFormat>u'arg1 {plays the athletic team position} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'athlete'</domain><range>u'sportsTeamPosition'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'sportsTeamPositionAthlete'</inverse><seedInstances>u'{"Ben Roethlisberger","quarterback"}{"Sammy Sosa","outfielder"}{"Sammy Sosa","right field"}{"Mario Lemieux","forward"}{"Alex Rodriguez","third base"}{"Alex Rodriguez","infield"}{"Brett Favre","quarterback"}{"David Beckham","midfield"}{"Kobe Bryant","guard"}{"Walter Payton","running back"}{"Tony Dorsett","running back"}{"Tony Kubek","shortstop"}{"Ozzie Smith","shortstop"}{"Wade Boggs","third base"}{"Wade Boggs","infield"}{"Yogi Berra","catcher"}{"Jim Bunning","pitcher"}{"Goose Gossage","pitcher"}'</seedInstances><seedExtractionPatterns>u'"arg1 is the team arg2\u201d "arg1 is a arg2" "arg1 plays arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'TRUE'</requiredForRange><queryString>u'arg1 plays the position arg2'</queryString><editDate>u'2011-05-19'</editDate><author>u'Tom'</author><curator>u''</curator><description>u'The team position played by an athlete.'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'itemFoundInRoom'</relationName><humanFormat>u'arg1 {is often found in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemExistsAtLocation'</generalizations><domain>u'item'</domain><range>u'room'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"bathtub","kitchen"}'</knownNegatives><inverse>u'roomCanContainItem'</inverse><seedInstances>u'{"couch","living room"}{"refrigerator","kitchen"}{"dishwasher","kitchen"}{"bathtub","bathroom"}{"dishes","kitchen"}{"stove","kitchen"}{"table","dining room"}{"coffee maker","kitchen"}{"computer","office"}{"clothes","closet"},{"desk","office"}{"toothpaste","bathroom"}{"mirror","bathroom"}{"shoes","closet"}{"shelves","office"}'</seedInstances><seedExtractionPatterns>u'"arg1 is often found in arg2" "arg2 often contain arg1" "arg1 are often found in arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 is often found in arg2'</queryString><editDate>u'2011-05-19'</editDate><author>u'Tom'</author><curator>u''</curator><description>u'Relates items to rooms in which they are often found'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'furnitureFoundInRoom'</relationName><humanFormat>u'arg1 {is often found in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemFoundInRoom'</generalizations><domain>u'furniture'</domain><range>u'room'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"bathtub","kitchen"}'</knownNegatives><inverse>u'roomCanContainFurniture'</inverse><seedInstances>u'{"coffee table","living room"}{"bar stool","kitchen"}{"bed","bedroom"}{"medicine cabinet","bathroom"}{"sofa","living room"}{"coat rack","hallway"}{"table","dining room"}{"table","kitchen"}{"couch","living room"}{"dressers","bedroom"},{"desk","office"}{"desk chair","office"}{"futon","den"}'</seedInstances><seedExtractionPatterns>u'"arg1 is often found in arg2" "arg2 often contain arg1" "arg1 are often found in arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 is often found in arg2'</queryString><editDate>u'2011-05-19'</editDate><author>u'Tom'</author><curator>u''</curator><description>u'Relates furniture to rooms in which it is often found'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'wineryProducesWine'</relationName><humanFormat>u'arg1 {produces the wine} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'agentInvolvedWithItem'</generalizations><domain>u'winery'</domain><range>u'wine'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'wineProducedByWinery'</inverse><seedInstances>u'{"ridge", "zinfandel"}{"Gallo", "pinot noir"}{"ravenswood winery","zinfandel"}{"Chateau Latour","bordeaux"}{"Duckhorn","merlot"}{"Far Niente","chardonay"}{"markham","merlot"}{"Beringer","cabernet"}{"Cos d\'Estournel","bordeaux"}{"Newton","merlot"}{"rodney strong","cabernet"}{"clos du bois","sauvignon blanc"}{"Au Bon Climat","pinot noir"}{"Joseph Phelps","sauvignon blanc"}{"Cakebread Celllars","cabernet sauvignon"}{"J. Lohr","merlot"}'</seedInstances><seedExtractionPatterns>u'"arg1 produces excellent arg2"  "arg1 produces arg2" "arg1 sells arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'TRUE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 sells arg2'</queryString><editDate>u'2011-05-24'</editDate><author>u'Tom'</author><curator>u''</curator><description>u'Describes the wines sold by a winery'</description><freebaseID>u'[{ "name": null, "/common/topic/alias": [], "type": "/wine/wine producer", "/wine/wine producer/wines": [{ "name": null, "/common/topic/alias": [] }] }]'</freebaseID><comment>u''</comment><relationName>u'riverEmptiesIntoRiver'</relationName><humanFormat>u'arg1 {empties into river} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atLocation'</generalizations><domain>u'river'</domain><range>u'river'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfRiverEmptiesIntoRiver'</inverse><seedInstances>u'{"lake\xa0geneva","rhone\xa0river"}{"missouri\xa0river","mississippi\xa0river"}{"anacostia\xa0river","potomac"}{"boise\xa0river","snake\xa0river"}{"cumberland\xa0river","ohio\xa0river"}{"salt\xa0river","ohio\xa0river"}{"kentucky\xa0river","ohio\xa0river"}{"rock\xa0creek","potomac\xa0river"}{"white\xa0river","missouri\xa0river"}{"wisconsin\xa0river","mississippi\xa0river"}{"gila","salt\xa0river"}{"arkansas\xa0river","mississippi\xa0river"}{"scioto\xa0river","ohio\xa0river"}{"oka","volga"}{"illinois\xa0river","mississippi\xa0river"}{"potomac","potomac\xa0river"}{"river\xa0tyne","tyne"}{"rhone\xa0river","lake\xa0geneva"}{"ottawa\xa0river","st\xa0.\xa0lawrence\xa0river"}{"congo\xa0river","congo"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 empties into arg2\u201d \u201carg1 flows into arg2\u201d \u201carg1 meets arg2\u201d \u201carg1 is a tributary of arg2\u201d \u201carg1 at the mouth of arg2\u201d \u201carg1 joins arg2\u201d \u201darg1 at its confluence with arg2\u201d \u201carg1 near its confluence with arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the tributaries of a river'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalEatVegetable'</relationName><humanFormat>u'arg1 {eat} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalEatFood'</generalizations><domain>u'animal'</domain><range>u'vegetable'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'invertebrateFeedOnFood'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAnimalEatVegetable'</inverse><seedInstances>u'{"monkeys","bananas"}{"pigs","corn"}{"hogs","corn"}{"rabbits","carrots"}{"squirrels","pumpkins"}{"sea urchins","kelp"}{"raccoons","tomatoes"}{"birds","corn"}{"cows","corn"}{"cats","greens"}{"livestock","corn"}{"rabbits","lettuce"}{"cattle","corn"}{"squirrels","corn"}{"chimps","bananas"}{"dog","onions"}{"rabbits","cabbage"}{"deer","corn"}{"raccoons","corn"}{"mice","mushrooms"}{"squirrels","mushrooms"}{"beef","corn"}{"reindeer","mushrooms"}{"bunnies","carrots"}{"horses","corn"}{"fish","lettuce"}{"monkey","pepper"}{"monkeys","beans"}{"dogs","carrots"}{"birds","figs"}{"meat","greens"}{"fish","garlic"}{"cats","lettuce"}{"dogs","apples"}{"horses","carrots"}{"birds","papaya"}{"bats","figs"}{"fish","zucchini"}{"bunnies","lettuce"}{"deer","mushrooms"}{"birds","sprouts"}{"larvae","cabbage"}{"deer","turnips"}{"monkeys","bananas"}{"pets","corn"}{"rabbits","papaya"}{"ponies","carrots"}{"mammals","peppers"}{"birds","apples"}{"reindeer","carrots"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 eat arg2\u201d \u201carg1 eats arg2\u201d \u201carg1 are fed on arg2\u201d \u201carg1 are used to arg2\u201d \u201darg1 eat lots of arg2\u201d \u201carg1 were fed arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the vegetables eaten by an animal'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'vegetableProductionInStateOrProvince'</relationName><humanFormat>u'arg1 is a vegetable {produced in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemExistsAtLocation'</generalizations><domain>u'vegetable'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfVegetableProductionInStateOrProvince'</inverse><seedInstances>u'{"corn","indiana"}{"corn","iowa"}{"potato","idaho"}{"corn","nebraska"}{"corn","illinois"}{"corn","kansas"}{"avocado","florida"}{"corn","colorado"}{"corn","ontario"}{"corn","kentucky"}{"onion","california"}{"celery","florida"}{"corn","north dakota"}{"corn","ohio"}{"potato","florida"}{"avocado","california"}{"cucumber","florida"}{"corn","pennsylvania"}{"celery","california"}{"corn","virginia"}{"potato","louisiana"}{"papaya","florida"}{"corn","michigan"}{"corn","texas"}{"eggplant","florida"}{"lettuce","arizona"}{"potato","maine"}{"potato","colorado"}{"potato","north dakota"}{"corn","minnesota"}{"potato","wisconsin"}{"potato","new jersey"}{"potato","west bengal"}{"watermelon","georgia"}{"pepper","texas"}{"cabbage","california"}{"lettuce","california"}{"onion","georgia"}{"watermelon","florida"}{"spinach","california"}{"pepper","florida"}{"corn","maryland"}{"onion","texas"}{"corn","florida"}{"corn","north carolina"}{"onion","michigan"}{"melon","arizona"}{"potato","ontario"}{"grapefruit","florida"}{"lettuce","florida"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 production in arg2\u201d \u201carg1 crops in arg2\u201d \u201carg1 is grown in arg2\u201d \u201carg1 are grown in arg2\u201d \u201carg1 come from arg2\u201d \u201carg2 produces more arg1\u201d \u201carg1 in the state of arg2\u201d  \u201carg1 industry in arg2\u201d \u201carg1 farm in arg2\u201d \u201carg1 fields in arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the vegetables produced in a state or province'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'clothingToGoWithClothing'</relationName><humanFormat>u'arg1 is a clothing item {to go with} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemUsedWithItem'</generalizations><domain>u'clothing'</domain><range>u'clothing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'clothingToGoWithClothing'</inverse><seedInstances>u'{"shoes","dress"}{"shirts","jeans"}{"hat","scarf"}{"hat","sweater"}{"scarf","hat"}{"pants","jacket"}{"shoes","skirt"}{"socks","shoes"}{"blouse","skirt"}{"pants","shirt"}{"shoes","pants"}{"mittens","hat"}{"sweater","pants"}{"shoes","outfits"}{"trousers","jacket"}{"ties","suits"}{"blouse","pants"}{"shirts","suits"}{"skirt","jacket"}{"belt","dress"}{"ties","shirts"}{"outfits","shoes"}{"suspenders","belt"}{"tights","skirt"}{"scarves","hats"}{"pants","shirts"}{"shirt","jacket"}{"gloves","hat"}{"hat","dress"}{"hat","cardigan"}{"hat","scarves"}{"mittens","scarf"}{"shirt","pants"}{"dress","hat"}{"shorts","shirt"}{"pants","vest"}{"bibs","jacket"}{"shoes","gown"}{"socks","belt"}{"skirt","shoes"}{"tie","shirt"}{"outfits","hats"}{"boots","skirts"}{"underwear","dress"}{"hat","mittens"}{"socks","hat"}{"gloves","coats"}{"blouses","jumpers"}{"blouses","pants"}{"skirt","hat"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 to go with arg2\u201d \u201carg1 must be worn under arg2\u201d \u201carg1 to go with your arg2\u201d \u201carg1 tucked in with arg2\u201d \u201carg1 with a silk arg2\u201d \u201carg1 with a satin arg2\u201d \u201carg1 can also be worn as arg2\u201d \u201carg1 looks great with arg2\u201d \u201carg1 to go with her arg2\u201d \u201carg1 to go with my arg2\u201d \u201carg1 that come with arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes clothing pieces that \u201cshould\u201d (or can) be used with each other'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'foodCanCauseDisease'</relationName><humanFormat>u'arg1 {can cause} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'food'</domain><range>u'disease'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfFoodCanCauseDisease'</inverse><seedInstances>u'{"chocolate","acne"}{"calcium","osteoporosis"}{"junk food","heart disease"}{"calcium","kidney stones"}{"salt","hypertension"}{"fats","heart disease"}{"sugar","tooth decay"}{"fiber","diarrhea"}{"sushi","food poisoning"}{"fruit","diarrhea"}{"junk food","diabetes"}{"sugar","diabetes"}{"sugar","cancer"}{"junk food","heart attacks"}{"treats","diarrhea"}{"junk food","acne"}{"meats","cancer"}{"sugar","diarrhea"}{"treats","obesity"}{"protein","kidney problems"}{"protein","cancer"}{"sugar","obesity"}{"sweeteners","cancer"}{"fats","obesity"}{"carbs","diabetes"}{"protein","osteoporosis"}{"pizza","acne"}{"calcium","rickets"}{"sugar","heart disease"}{"protein","kidney disease"}{"protein","inflammation"}{"protein","obesity"}{"sugar","inflammation"}{"protein","neurodegeneration"}{"protein","allergy"}{"sweets","cavities"}{"oils","cancer"}{"soy","cancer"}{"sugar","acne"}{"soy","breast cancer"}{"vegetables","cancer"}{"sugar","cavities"}{"carbohydrates","diabetes"}{"fats","cancer"}{"chocolates","acne"}{"chips","cancer"}{"fries","acne"}{"salt","rust"}{"treats","cavities"}{"protein","kidney failure"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 can cause arg2\u201d \u201carg1 contributes to arg2\u201d \u201carg1 can worsen arg2\u201d \u201carg1 fight arg2\u201d \u201carg1 to help arg2\u201d \u201carg1 protect against arg2\u201d \u201carg1 will lead to arg2\u201d \u201carg1 is associated with arg2\u201d \u201carg1 which can cause arg2\u201d \u201carg1 increase the risk of arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the diseases that can be caused by a food'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'foodDecreasesTheRiskOfDisease'</relationName><humanFormat>u'Eating arg1 {decreases the risk of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'food'</domain><range>u'disease'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfFoodDecreasesTheRiskOfDisease'</inverse><seedInstances>u'{"vegetables","cancer"}{"fats","heart disease"}{"antioxidants","cancer"}{"calcium","osteoporosis"}{"fiber","colon cancer"}{"vegetables","lung cancer"}{"vegetables","heart disease"}{"vegetables","cancers"}{"trans fats","heart disease"}{"fiber","cancer"}{"vegetables","prostate cancer"}{"vegetables","obesity"}{"soy","prostate cancer"}{"fruit","cancer"}{"fiber","chd"}{"vegetables","diseases"}{"vegetables","stroke"}{"soy","heart disease"}{"vegetables","type 2 diabetes"}{"yogurt","colon cancer"}{"omega-3","heart disease"}{"soy products","heart disease"}{"vegetables","type"}{"vegetables","colon cancer"}{"soy","breast cancer"}{"fruits","cancer"}{"soy products","breast cancer"}{"fiber","colon"}{"meals","heart disease"}{"peanuts","heart disease"}{"dairy foods","cancers"}{"vegetables","lung"}{"chocolate","blood clots"}{"seafood","heart disease"}{"vegetables","cvd"}{"vegetables","breast cancer"}{"fats","cancer"}{"vegetables","heart attack"}{"lycopene","cancer"}{"gum","caries"}{"vegetables","stomach cancer"}{"vegetables","rheumatoid arthritis"}{"mushroom","breast cancer"}{"vegetables","skin cancer"}{"flaxseed","cancer"}{"vegetables","hypertension"}{"oils","heart disease"}{"oils","colds"}{"vegetables","diabetes"}{"soy","colon cancer"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 decreases the risk of arg2\u201d \u201carg1 could help prevent arg2\u201d \u201carg1 protect against arg2\u201d \u201carg1 cure arg2\u201d \u201carg1 may be protective against arg2\u201d \u201carg1 can prevent arg2\u201d \u201carg1 help prevent arg2\u201d \u201carg1 may also help prevent arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the foods that can reduce the risks of having a disease'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalDevelopDisease'</relationName><humanFormat>u'arg1 is an animal that can {develop} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'animal'</domain><range>u'disease'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAnimalDevelopDisease'</inverse><seedInstances>u'{"humans","acne"}{"dogs","cataracts"}{"dogs","allergy"}{"cats","cancer"}{"horses","laminitis"}{"dogs","diabetes"}{"cats","arthritis"}{"cats","hyperthyroidism"}{"mice","obesity"}{"rats","prostate cancer"}{"pets","arthritis"}{"dogs","diarrhea"}{"mice","diabetes"}{"dogs","infections"}{"rats","cancer"}{"eggs","fungus"}{"mice","arthritis"}{"cats","type"}{"cats","allergy"}{"mice","cardiomyopathy"}{"mice","hypertension"}{"mice","type"}{"pets","cancer"}{"pets","gingivitis"}{"rats","hypertension"}{"species","diseases"}{"cats","cataracts"}{"birds","atherosclerosis"}{"mice","colitis"}{"dogs","lymphoma"}{"rats","brain tumors"}{"humans","rabies"}{"mice","epilepsy"}{"rats","diabetes"}{"cats","diabetes"}{"cows","mastitis"}{"cats","diarrhea"}{"rats","obesity"}{"cats","breast cancer"}{"mice","insulin resistance"}{"mice","leukemia"}{"mice","cancer"}{"mice","cancers"}{"kittens","diarrhea"}{"rabbits","cancer"}{"dogs","rabies"}{"dogs","pra"}{"dogs","arthritis"}{"dogs","cataract"}{"dogs","cardiomyopathy"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 develop arg2\u201d \u201carg1 may get arg2\u201d \u201carg1 have been vaccinated against arg2\u201d \u201carg1 has been vaccinated against arg2\u201d \u201carg1 developed arg2\u201d \u201carg1 suspected of having arg2\u201d \u201carg2 confirmed in arg1\u201d \u201carg1 have been found in arg2\u201d \u201carg1 that suffer from arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the diseases that can be developed by an animal'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'productProducedInCountry'</relationName><humanFormat>u'arg1 {is a product} produced in arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemExistsAtLocation'</generalizations><domain>u'product'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'countryProducesProduct'</inverse><seedInstances>u'{\u201ccoffee\u201d,\u201dBrazil\u201d}{\u201colive oil\u201d,\u201dPortugal\u201d}{\u201colive oil\u201d,\u201dSpain\u201d}{\u201ccars\u201d,\u201dUnited States\u201d}{\u201ccomputers\u201d,\u201dChina\u201d}{\u201cShoes\u201d,\u201dChina\u201d}{\u201ccars\u201d,\u201dGermany\u201d}{\u201cfood\u201d,\u201dEngland\u201d}{\u201celetric energy\u201d,\u201dJapan\u201d}{\u201caluminum\u201d,\u201dthe US\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 produced in arg2\u201d \u201carg1 made in arg2\u201d \u201carg1 is available in  arg2\u201d \u201carg1 is produced in arg2\u201d \u201carg1 industry in arg2\u201d \u201darg1 imported from arg2\u201d \u201carg1 manufactured in arg2\u201d \u201carg1 produced in arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the products produced by a country'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'weaponMadeInCountry'</relationName><humanFormat>u'arg1 is a type of weapon {produced in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemExistsAtLocation'</generalizations><domain>u'weapon'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfWeaponMadeInCountry'</inverse><seedInstances>u'{"rifle","canada"}{"pistols","italy"}{"shotguns","italy"}{"knives","usa"}{"sword","spain"}{"swords","china"}{"shotguns","belgium"}{"knives","spain"}{"rifle","china"}{"swords","spain"}{"swords","japan"}{"knives","france"}{"bows","china"}{"guns","spain"}{"knives","china"}{"cluster bombs","usa"}{"rifles","japan"}{"guns","england"}{"guns","italy"}{"guns","china"}{"cluster bombs","us"}{"rifles","us"}{"bow","france"}{"sword","india"}{"knives","australia"}{"guns","japan"}{"rifles","england"}{"rifles","china"}{"knives","us"}{"guns","us"}{"katana","japan"}{"rifles","usa"}{"knives","japan"}{"knives","germany"}{"cluster munitions","us"}{"guns","africa"}{"swords","usa"}{"guns","turkey"}{"knives","united states"}{"rifles","france"}{"sword","china"}{"rifle","italy"}{"cannons","united states"}{"landmines","china"}{"shotgun","spain"}{"rifle","germany"}{"guns","u.s.a."}{"guns","united states"}{"bows","brazil"}{"swords","philippines"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 made in arg2\u201d \u201carg1 imported from arg2\u201d \u201carg1 manufactured in arg2\u201d \u201carg1 produced in arg2\u201d \u201carg1 were made in arg2\u201d \u201carg1 come from arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the weapons produced by a country'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'bakedgoodServedWithBeverage'</relationName><humanFormat>u'arg1 {can be served with} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemUsedWithItem'</generalizations><domain>u'bakedGood'</domain><range>u'beverage'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBakedGoodServedWithBeverage'</inverse><seedInstances>u'{"scones","tea"}{"biscuits","tea"}{"cookies","coffee"}{"pastries","tea"}{"pastries","coffee"}{"cakes","tea"}{"cookies","tea"}{"cakes","coffee"}{"pastries","coffee"}{"cookies","coffee"}{"cakes","coffee"}{"biscuits","juice"}{"cookie","milk"}{"muffins","coffee"}{"biscuits","tea"}{"biscuits","coffee"}{"cookies","hot chocolate"}{"breads","tea"}{"cookies","milk"}{"cookie","coffee"}{"muffins","smoothies"}{"cookie","milk"}{"biscuits","coffee"}{"doughnuts","coffee"}{"scones","teas"}{"biscotti","cappuccino"}{"cookies","wine"}{"cakes","punch"}{"bagels","juice"}{"biscuits","hot chocolate"}{"cakes","teas"}{"crackers","tea"}{"cookies","tea"}{"muffins","juices"}{"cakes","tea"}{"biscuits","drink"}{"cakes","mint tea"}{"cookies","teas"}{"doughnuts","coffee"}{"pastries","wine"}{"cookies","milk"}{"brownies","milk"}{"crackers","milk"}{"cookie","coffee"}{"brownies","coffee"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 served with arg2\u201d \u201carg1 to go with your arg2\u201d \u201carg1 accompanied by arg2\u201d \u201carg1 are served with arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-06'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the baked goods that are usually served with a beverage'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'plantRepresentEmotion'</relationName><humanFormat>u'arg1 {can represent} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'plant'</domain><range>u'emotion'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfPlantRepresentEmotion'</inverse><seedInstances>u'{"flowers","love"}{"carnations","admiration"}{"roses","joy"}{"roses","love"}{"roses","happiness"}{"snowdrops","hope"}{"flowers","joy"}{"roses","admiration"}{"roses","gratitude"}{"orchids","love"}{"roses","appreciation"}{"daffodils","hope"}{"roses","desire"}{"flowers","hope"}{"flowers","anticipation"}{"tulips","love"}{"flowers","desire"}{"flowers","feeling"}{"flowers","appreciation"}{"mums","hope"}{"roses","hope"}{"roses","jealousy"}{"pansies","love"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 represent arg2\u201d \u201carg1 represents arg2\u201d \u201carg1 symbolize arg2\u201d \u201carg1 symbolizes arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the emotions represented by a plant'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'writerWasBornInCity'</relationName><humanFormat>u'arg1 {was born in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personBornInCity'</generalizations><domain>u'person'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfWriterWasBornInCIty'</inverse><seedInstances>u'{"poe","boston"}{"homer","boston"}{"machiavelli","florence"}{"kipling","bombay"}{"sartre","paris"}{"edgar rice burroughs","chicago"}{"luke","antioch"}{"voltaire","paris"}{"orhan pamuk","istanbul"}{"josephus","jerusalem"}{"pushkin","moscow"}{"ralph ellison","oklahoma city"}{"fitzgerald","boston"}{"eliot","boston"}{"salman rushdie","bombay"}{"robert lowell","boston"}{"burns","dallas"}{"joyce","chicago"}{"burns","baltimore"}{"luke","boston"}{"proust","paris"}{"zola","paris"}{"poe","baltimore"}{"vaclav havel","prague"}{"washington irving","new york city"}{"pope","milan"}{"t.s. eliot","st . louis"}{"dickinson","chicago"}{"joyce","boston"}{"pope","rome"}{"salman rushdie","mumbai"}{"luke","denver"}{"forster","chicago"}{"stevenson","bloomington"}{"burns","los angeles"}{"faulkner","boston"}{"virgil","rome"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 was born in arg2\u201d \u201carg1 came from arg2\u201d'</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the city where a write was born in'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'plantIncludePlant'</relationName><humanFormat>u'arg2 is a plant that is a {kind of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'plant'</domain><range>u'plant'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfPlantIncludePlant'</inverse><seedInstances>u'{"flowers","orchids"}{"trees","oaks"}{"trees","pines"}{"flowers","lilies"}{"weeds","dandelions"}{"flowers","carnations"}{"trees","willows"}{"conifers","pines"}{"weeds","dandelion"}{"flowers","jasmine"}{"perennials","daylilies"}{"shrubs","azaleas"}{"shrubs","roses"}{"trees","maples"}{"flowers","dogbane"}{"trees","palms"}{"flowers","poppies"}{"shrubs","rhododendrons"}{"flowers","peonies"}{"flowers","pansies"}{"flowers","nasturtiums"}{"weeds","clover"}{"wildflowers","orchids"}{"flowers","hibiscus"}{"spring bulbs","tulips"}{"shrubs","willows"}{"trees","conifers"}{"flowers","azaleas"}{"spring bulbs","daffodils"}{"trees","fruit trees"}{"shrubs","dogwood"}{"trees","dogwoods"}{"shrubs","lilacs"}{"flowers","daisies"}{"flowers","asters"}{"annuals","petunias"}{"bryophytes","mosses"}{"ornamentals","roses"}{"shrubs","trees"}{"succulents","cacti"}{"hardwood trees","oaks"}{"weeds","nettles"}{"trees","dogwood"}{"grasses","weeds"}{"perennials","phlox"}{"weeds","thistles"}{"weeds","thistle"}{"flowers","bouquets"}{"annuals","zinnias"}{"flowers","tulips"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 include arg2\u201d \u201carg2 are native arg1\u201d \u201carg2 are large arg1\u201d \u201carg2 known as arg1\u201d \u201carg2 are examples of arg1\u201d \u201carg2 are considered arg1\u201d \u201carg2 are among the most popular arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the subcategories of a plant'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'plantGrowingInPlant'</relationName><humanFormat>u'arg1 is a plant that can {grow in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'plant'</domain><range>u'plant'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfPlantGrowingInPlant'</inverse><seedInstances>u'{"flowers","grass"}{"bromeliads","trees"}{"mistletoe","trees"}{"wildflowers","grass"}{"shrubs","grass"}{"grass","pasture"}{"orchids","trees"}{"grasses","pasture"}{"weeds","grass"}{"trees","grass"}{"orchids","mangroves"}{"clematis","trees"}{"flowers","weeds"}{"dandelions","grass"}{"wisteria","trees"}{"daffodils","grass"}{"ferns","trees"}{"flowers","trees"}{"grass","trees"}{"trees","pasture"}{"trees","shrubs"}{"daisies","grass"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 growing in arg2\u201d \u201carg1 grow on arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the plants that grow on other plants'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'invertebrateFeedOnFood'</relationName><humanFormat>u'arg1 is an invertebrate animal that {feeds on} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalEatFood'</generalizations><domain>u'invertebrate'</domain><range>u'food'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'animalEatVegetable'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfInvertebrateFeedOnFood'</inverse><seedInstances>u'{"grubs","roots"}{"nymphs","roots"}{"urchins","algae"}{"bugs","seeds"}{"bugs","fruit"}{"nymphs","seeds"}{"limpets","algae"}{"moth","roots"}{"grubs","tubers"}{"mites","fruit"}{"weevils","seeds"}{"mole crickets","roots"}{"bugs","roots"}{"mites","soybeans"}{"aphids","sugar"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 feed on arg2\u201d \u201carg1 eat arg2\u201d \u201carg1 eats arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the foods that are eaten by an invertebrate'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalEatFood'</relationName><humanFormat>u'arg1 is an animal that {eats} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'animal'</domain><range>u'food'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAnimalEatFood'</inverse><seedInstances>u'{"birds","berries"}{"fish","algae"}{"bats","fruit"}{"bats","fruit"}{"mammals","seeds"}{"birds","seeds"}{"birds","fruit"}{"fish","algae"}{"hogs","fruits"}{"squirrels","seeds"}{"species","fruit"}{"larvae","roots"}{"mammals","fruits"}{"birds","fruits"}{"shrimp","algae"}{"birds","rice"}{"mammals","fruit"}{"bear","berries"}{"horses","hay"}{"species","seeds"}{"dog","chocolate"}{"dogs","kibble"}{"horse","hay"}{"snails","algae"}{"squirrel","nut"}{"squirrels","fruits"}{"chipmunks","seeds"}{"species","fruit"}{"bears","berries"}{"larvae","algae"}{"larvae","seeds"}{"tadpoles","algae"}{"fishes","algae"}{"mice","cheese"}{"dogs","chocolate"}{"deer","acorns"}{"birds","fruit"}{"birds","bread"}{"alpacas","hay"}{"humans","berries"}{"lemurs","fruit"}{"deer","berries"}{"dog","peanut butter"}{"elephants","peanuts"}{"species","algae"}{"dogs","yogurt"}{"humans","fruit"}{"squirrels","acorns"}{"cows","hay"}{"mammals","berries"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 eat arg2\u201d \u201carg1 eats arg2\u201d \u201carg1 are fed on arg2\u201d \u201carg1 are used to arg2\u201d \u201darg1 eat lots of arg2\u201d \u201carg1 often eat arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the foods that are eaten by an animal'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'emotionAssociatedWithDisease'</relationName><humanFormat>u'arg1 is an emotion {associated with} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'emotion'</domain><range>u'disease'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfEmotionAssocietedWithDisease'</inverse><seedInstances>u'{"anxiety","anxiety disorders"}{"anxiety","cancer"}{"distress","cancer"}{"fear","cancer"}{"fear","hiv"}{"shame","aids"}{"anxiety","fibromyalgia"}{"shame","disorders"}{"shame","alcoholism"}{"tenderness","fibromyalgia"}{"anxiety","acne"}{"shame","addiction"}{"fear","aids"}{"anxiety","alzheimer"}{"anxiety","cfs"}{"shame","hiv"}{"tenderness","osteoarthritis"}{"distress","diabetes"}{"anxiety","type"}{"anxiety","asthma"}{"fear","addiction"}{"shame","epilepsy"}{"embarrassment","disorders"}{"distress","cfs"}{"grief","alzheimer"}{"tenderness","arthritis"}{"guilt","addiction"}{"grief","autism"}{"fear","lyme disease"}{"shame","cancer"}{"hopelessness","aids"}{"feeling","conjunctivitis"}{"terror","hiv"}{"guilt","alcoholism"}{"shame","herpes"}{"vulnerability","type"}{"shame","diseases"}{"grief","aids"}{"frustration","cancer"}{"anxiety","hiv infection"}{"vulnerability","alzheimer"}{"fear","dementia"}{"fear","disorders"}{"shame","dementia"}{"fear","ageing"}{"fear","diseases"}{"anxiety","aids"}{"numbness","diabetes"}{"fear","sars"}{"fear","type"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 associated with arg2\u201d \u201darg1 can cause arg2\u201d \u201carg1 that accompanies arg2\u201d \u201carg1 is associated with arg2\u201d \u201carg1 of chronic arg2\u201d \u201carg1 in patients with arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-10-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the emotions associated with a disease'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'languageSchoolInCity'</relationName><humanFormat>u'arg1 is a language {taught in language schools in} the city arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'language'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'languageOfCity, isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfLanguegeSchoolInCity'</inverse><seedInstances>u'{"italian language","rome"}{"russian language","moscow"}{"spanish language","alicante"}{"spanish language","cuernavaca"}{"spanish language","quito"}{"chinese language","beijing"}{"spanish language","seville"}{"english language","dublin"}{"spanish language","cusco"}{"greek language","athens"}{"english language","cape town"}{"spanish language","malaga"}{"thai language","bangkok"}{"spanish language","san miguel"}{"spanish language","bariloche"}{"english language","auckland"}{"spanish language","antigua"}{"spanish language","quetzaltenango"}{"spanish language","centre"}{"spanish language","santo domingo"}{"english language","christchurch"}{"spanish language","sevilla"}{"japanese language","fukuoka"}{"spanish language","cordoba"}{"spanish language","madrid"}{"spanish language","barcelona"}{"greek","athens"}{"spanish language","lima"}{"spanish language","merida"}{"english language","centre"}{"english language","cambridge"}{"spanish language","guadalajara"}{"spanish language","marbella"}{"spanish language","cadiz"}{"german language","berlin"}{"english language","bournemouth"}{"italian language","bologna"}{"german language","freiburg"}{"english language","denver"}{"english language","boston"}{"english language","bristol"}{"latin","boston"}{"english language","adelaide"}{"spanish language","puebla"}{"spanish language","heredia"}{"spanish language","ensenada"}{"greek","alexandria"}{"portuguese language","porto"}{"spanish language","cochabamba"}{"english language","chicago"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 school in arg2\u201d \u201carg1 schools in arg2\u201d \u201carg1 comunity in arg2\u201d \u201carg1 comuniteis in arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the language schools for specific languages in a city'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'sportSchoolInCountry'</relationName><humanFormat>u'arg1 is a sport {taught in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sport'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'sportFansInCountry, isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfSportSchoolInCOuntry'</inverse><seedInstances>u'{"surf","australia"}{"surf","uk"}{"surf","south africa"}{"ski","canada"}{"ski","austria"}{"ski","france"}{"ski","switzerland"}{"surf","wales"}{"aikido","japan"}{"ski","australia"}{"judo","japan"}{"surf","caribbean"}{"swim","new zealand"}{"surf","south"}{"jujitsu","japan"}{"ju-jitsu","japan"}{"ski","japan"}{"ski","bulgaria"}{"surf","mexico"}{"swim","usa"}{"surf","region"}{"ski","andorra"}{"bjj","brazil"}{"racing","usa"}{"ski","germany"}{"surf","new zealand"}{"judo","korea"}{"baseball","india"}{"racing","philippines"}{"ski","south"}{"hapkido","south korea"}{"hapkido","korea"}{"ski","middle"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 school in arg2\u201d \u201carg1 schools in arg2\u201d \u201darg1 club in arg2\u201d \u201carg1 clubs in arg2\u201d \u201carg1 comunity in arg2\u201d \u201carg1 comuniteis in arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the sports practiced in a country'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'sportFansInCountry'</relationName><humanFormat>u'arg1 is a sport {with fans in} the country arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'sport'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'sportSchoolInCountry, isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfSportFansInCountry'</inverse><seedInstances>u'{"cricket","india"}{"baseball","japan"}{"cricket","australia"}{"cricket","england"}{"cricket","south africa"}{"cricket","zimbabwe"}{"cricket","sri lanka"}{"baseball","canada"}{"cricket","pakistan"}{"baseball","taiwan"}{"baseball","cuba"}{"cricket","uk"}{"polo","uk"}{"cricket","new zealand"}{"sumo","japan"}{"racing","japan"}{"baseball","usa"}{"cricket","caribbean"}{"baseball","mexico"}{"racing","new zealand"}{"cricket","wales"}{"judo","japan"}{"cricket","usa"}{"cricket","region"}{"ski","canada"}{"ski","andorra"}{"baseball","korea"}{"rugby league","new zealand"}{"motorsport","uk"}{"futbol","mexico"}{"track","usa"}{"track","uk"}{"baseball","uk"}{"motorsport","new zealand"}{"baseball","caribbean"}{"ski","switzerland"}{"college football","usa"}{"baseball","germany"}{"futsal","new zealand"}{"baseball","netherlands"}{"racing","region"}{"cricket","denmark"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 fans in arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the sports that have fans living in a country'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'stateOrProvinceIsBorderedByStateOrProvince'</relationName><humanFormat>u'arg1 is a state that {is bordered by} the state arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'stateOrProvince'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'stateOrProvinceIsBorderedByStateOrProvince'</inverse><seedInstances>u'{"kansas","nebraska"}{"iowa","minnesota"}{"texas","oklahoma"}{"california","oregon"}{"nebraska","south dakota"}{"south dakota","north dakota"}{"new jersey","new york"}{"utah","idaho"}{"massachusetts","new hampshire"}{"west virginia","pennsylvania"}{"nebraska","iowa"}{"wisconsin","minnesota"}{"virginia","west virginia"}{"wyoming","montana"}{"maryland","pennsylvania"}{"minnesota","wisconsin"}{"vermont","massachusetts"}{"new mexico","texas"}{"rhode island","massachusetts"}{"texas","new mexico"}{"indiana","ohio"}{"washington","idaho"}{"colorado","nebraska"}{"nevada","utah"}{"ohio","pennsylvania"}{"arizona","utah"}{"new mexico","arizona"}{"saskatchewan","manitoba"}{"north dakota","montana"}{"delaware","pennsylvania"}{"utah","arizona"}{"pennsylvania","new york"}{"missouri","iowa"}{"kentucky","illinois"}{"california","nevada"}{"maryland","delaware"}{"arizona","california"}{"vermont","new hampshire"}{"idaho","washington"}{"oklahoma","texas"}{"alabama","georgia"}{"new york","vermont"}{"nevada","oregon"}{"oregon","california"}{"oregon","washington"}{"kerala","tamil nadu"}{"arizona","new mexico"}{"north dakota","minnesota"}{"west virginia","ohio"}{"georgia","south carolina"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 is bordered by arg2\u201d \u201carg1 is bounded by arg2\u201d \u201carg1 border with arg2\u201d \u201carg1 borders arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the states that borders a state'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'personGraduatedFromUniversity'</relationName><humanFormat>u'arg1 is a person who {graduated from} the university arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personGraduatedSchool'</generalizations><domain>u'person'</domain><range>u'university'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u'{"mary","high school"}{"jobs","high school"}{"mike","high school"}{"scott","high school"}{"dan","high school"}{"i","high school"}{"linda","high school"}'</knownNegatives><inverse>u'inverseOfPersonGraduatedFromUniversity'</inverse><seedInstances>u'{"mike","california state university"}{"jim","ohio state university"}{"scott","indiana university"}{"mike","michigan state university"}{"jim","law school"}{"mike","law school"}{"william","harvard"}{"dan","michigan state university"}{"scott","california state university"}{"jonathan","trinity college"}{"lisa","ohio university"}{"daniel","cornell university"}{"scott","west point"}{"george","yale"}{"jobs","reed college"}{"jim","princeton university"}{"jay","stanford"}{"scott","law school\u201d}{"mike","ohio state university"}{"jason","new york university"}{"lisa","indiana university"}{"mike","cornell university"}{"scott","american university"}{"dan","ohio state university"}{"jim","cornell university"}{"scott","brigham young university"}{"mike","rutgers university"}{"greg","california state university"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 graduated from arg2\u201d \u201carg1 attended arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the people graduated from a university'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'buildingFeatureMadeFromBuildingMaterial'</relationName><humanFormat>u'arg1 is a building feature {made from} the building material arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'buildingFeature'</domain><range>u'buildingMaterial'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBuildingFeatureMadeFromBuildingMaterial'</inverse><seedInstances>u'{"walls","glass"}{"walls","concrete"}{"doors","steel"}{"doors","glass"}{"floors","concrete"}{"walls","rocks"}{"gates","steel"}{"walls","steel"}{"blinds","pvc"}{"doors","iron"}{"stairs","steel"}{"doors","fiberglass"}{"garage doors","steel"}{"exterior walls","glass"}{"floors","glass"}{"shutters","steel"}{"front doors","glass"}{"arches","filigree"}{"stairs","glass"}{"facades","glass"}{"doors","silver"}{"entry doors","fiberglass"}{"interior doors","steel"}{"knob","solid brass"}{"shower doors","glass"}{"doors","pvc"}{"doors","rocks"}{"front door","steel"}{"double doors","iron"}{"decks","fiberglass"}{"arches","glass"}{"doors","steel plate"}{"door frames","steel"}{"gates","rocks"}{"roofs","iron"}{"walls","silver"}{"facades","steel"}{"blinds","steel"}{"front gates","iron"}{"gates","iron"}{"entry door","fiberglass"}{"exterior doors","iron"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 made from arg2\u201d \u201carg1 are made from arg2\u201d  \u201carg1 made of arg2\u201d \u201carg1 are made of arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the building features that are made of a building material'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'clothingMadeFromPlant'</relationName><humanFormat>u'arg1 is a clothing item {made from} the plant arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'clothing'</domain><range>u'plant'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfClothingMadeFromPlant'</inverse><seedInstances>u'{"clothes","bamboo"}{"socks","bamboo"}{"shirts","bamboo"}{"skirts","grass"}{"wear","bamboo"}{"hat","bamboo"}{"sandals","sagebrush"}{"hats","bamboo"}{"clothes","moss"}{"underwear","bamboo"}{"dresses","balloons"}{"robes","bamboo"}{"dresses","bamboo"}{"outfits","grass"}{"shoes","grass"}{"skirt","grass"}{"robe","bamboo"}{"shoes","reeds"}{"shirt","bamboo"}{"dress","balloons"}{"costumes","bamboo"}{"dress","flower"}{"t-shirts","bamboo"}{"hat","flower"}{"skirts","bamboo"}{"underwear","trees"}{"sandals","plants"}{"glasses","bamboo"}{"gloves","bamboo"}{"skirts","palm trees"}{"hat","grass"}{"earrings","bamboo"}{"shoes","bamboo"}{"jackets","grass"}{"dresses","moss"}{"sandals","reeds"}{"jacket","bamboo"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 made from arg2\u201d \u201carg1 are made from arg2\u201d  \u201carg1 made of arg2\u201d \u201carg1 are made of arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the clothing items made of a plant'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'personMovedToStateOrProvince'</relationName><humanFormat>u'arg1 is a person who {moved to} the state arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personHasResidenceInLocation'</generalizations><domain>u'person'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfPersonMovedToStateOrProvince'</inverse><seedInstances>u'{"mike","california"}{"mary","new york"}{"mary","california"}{"robinson","new york"}{"mike","new york"}{"greg","california"}{"ed","california"}{"jim","california"}{"william","california"}{"jim","new york"}{"collins","california"}{"evans","new york"}{"mike","colorado"}{"roberts","new york"}{"jay","new york"}{"charles","new york"}{"amy","new york"}{"george","new york"}{"dan","california"}{"dan","new york"}{"karen","california"}{"george","california"}{"william","texas"}{"graham","new york"}{"lisa","new york"}{"diane","new york"}{"daniel","california"}{"hill","california"}{"welch","new york"}{"young","california"}{"scott","missouri"}{"scott","new york"}{"jane","new york"}{"kate","new york"}{"jason","texas"}{"karen","new york"}{"scott","new jersey"}{"william","washington"}{"charles","california"}{"william","indiana"}{"evans","california"}{"greg","alaska"}{"karen","colorado"}{"william","kentucky"}{"jim","colorado"}{"ed","alaska"}{"jason","new york"}{"fred","california"}{"william","missouri"}{"dean","new york"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 moved to arg2\u201d \u201carg1 came to arg2\u201d \u201carg1 returned to arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the people that moved to live in a state or province'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'maleMovedToStateOrProvince'</relationName><humanFormat>u'arg1 is a male person who {moved to} the state (or province) arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'personMovedToStateOrProvince'</generalizations><domain>u'male'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfMaleMovedToStateOrProvince'</inverse><seedInstances>u'{"stephen","new york"}{"alex","new york"}{"edwards","new york"}{"stephen","california"}{"alex","california"}{"richardson","washington"}{"edwards","washington"}{"alex","colorado"}{"alex","utah"}{"alex","kentucky"}{"alex","maine"}{"alex","new jersey"}{"luther","massachusetts"}{"edwards","california"}{"stephen","texas"}{"richardson","new mexico"}{"alex","illinois"}{"richardson","kentucky"}{"alex","louisiana"}{"stephen","british columbia"}{"richardson","new york"}{"doyle","california"}{"edwards","arizona"}{"stephen","arkansas"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 moved to arg2\u201d \u201carg1 came to arg2\u201d \u201carg1 returned to arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the male people that moved to live in a state or province'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'fishServedWithFood'</relationName><humanFormat>u'arg1 is a fish that can be {served with} the food arg2 in a meal (or dish) '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'fish'</domain><range>u'food'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfFishServedWithFood'</inverse><seedInstances>u'{"mahi mahi","sauce"}{"tuna","sauce"}{"raw fish","condiments"}{"white fish","chips"}{"plaice","chips"}{"salmon","rye bread"}{"tuna","ponzu sauce"}{"flathead","chips"}{"snapper","salsa"}{"haddock","chips"}{"salmon","salad"}{"salmon","ponzu sauce"}{"salmon","mustard"}{"salmon","pancakes"}{"salmon","salad"}{"salmon","horseradish sauce"}{"red snapper","butter sauce"}{"sea bass","fennel"}{"tuna","mayonnaise sauce"}{"salmon","teriyaki"}{"pike","sauce"}{"salmon","bacon"}{"salmon","red wine sauce"}{"tuna","vinaigrette"}{"salmon","sauce"}{"salmon","fennel"}{"tuna","ginger sauce"}{"salmon","sauce"}{"tuna","mayonnaise"}{"salmon","miso"}{"tuna","wasabi"}{"sea bass","sauce"}{"salmon","hollandaise sauce"}{"salmon","chicken"}{"salmon","french bread"}{"turbot","truffles"}{"anchovies","caesar dressing"}{"trout","sausage"}{"trout","chips"}{"trout","rice pilaf"}{"salmon","dill mayonnaise"}{"anchovies","chicken"}{"trout","salsa"}{"salmon","cocktail sauce"}{"anchovies","chicken"}{"sardines","bread"}{"shellfish","noodles"}{"cod","chips"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 served with arg2\u201d \u201carg1 accompanied by arg2\u201d \u201carg1 are served with arg2\u201d \u201carg2 on the top of arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2011-11-20'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the kind of food that are tipically serverd with a fish'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'academicFieldSuchAsAcademicField'</relationName><humanFormat>u'arg2 is a {type of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'academicField'</domain><range>u'academicField'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAcademicFieldSuchAsAcademicField'</inverse><seedInstances>u'{"sciences","economics"}{"social sciences","economics"}{"sciences","sociology"}{"science","physics"}{"business","finance"}{"sciences","anthropology"}{"sciences","medicine"}{"natural sciences","physics"}{"social sciences","anthropology"}{"sciences","genetics"}{"sciences","astronomy"}{"arts","literature"}{"sciences","botany"}{"sciences","engineering"}{"sciences","physiology"}{"science","astronomy"}{"biology","botany"}{"sciences","meteorology"}{"biology","genetics"}{"sciences","molecular biology"}{"sciences","philosophy"}{"science","mathematics"}{"business","planning"}{"sciences","archaeology"}{"science","engineering"}{"science","genetics"}{"sciences","ecology"}{"art","literature"}{"arts","visual arts"}{"industry","telecommunications"}{"arts","architecture"}{"life sciences","biology"}{"biology","biochemistry"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 including arg2\u201d \u201carg2 is a form of arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes a specialization fo an Academic Field'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductCameFromCountry'</relationName><humanFormat>u'arg1 {is an agricultural product} produced in arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemExistsAtLocation'</generalizations><domain>u'agriculturalProduct'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAgriculturalProductCameFromCountry'</inverse><seedInstances>u'{"coffee","ethiopia"}{"silk","japan"}{"tomatoes","mexico"}{"cotton","egypt"}{"cattle","spain"}{"eggs","germany"}{"cocoa","mexico"}{"flowers","taiwan"}{"tea","china"}{"raw sugar","mexico"}{"silk","china"}{"cocoa","africa"}{"tea","africa"}{"vegetables","mexico"}{"vegetables","holland"}{"flowers","turkey"}{"coffee","africa"}{"okra","africa"}{"sugar","india"}{"tea","vietnam"}{"cotton","india"}{"corn","turkey"}{"coffee","egypt"}{"corn","mexico"}{"flowers","philippines"}{"cotton","uzbekistan"}{"sugar","mexico"}{"cotton","usa"}{"tobacco","south"}{"tea","japan"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 came from arg2\u201d \u201carg1 originated in arg2\u201d \u201carg1 produced in arg2\u201d \u201carg1 producers in arg2\u201d \u201carg1 is produced in arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that came from a country'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductComingFromVertebrate'</relationName><humanFormat>u'arg1 {is an agricultural product} coming from arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'agriculturalProduct'</domain><range>u'vertebrate'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAgriculturalProductComingFromVertebrate'</inverse><seedInstances>u'{"milk","cows"}{"milk","buffalo"}{"beef","cows"}{"milk","water buffalo"}{"cheeses","jersey cows"}{"cattle","herds"}{"milk","herds"}{"eggs","hens"}{"dairy products","ruminants"}{"wool","sheep"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 cominh from arg2\u201d \u201carg2 produce arg1\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that come from a vertebrate'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductContainChemical'</relationName><humanFormat>u'arg1 {is an agricultural product} that contains arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'agriculturalProduct'</domain><range>u'chemical'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'itemUsedWithItem isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAgriculturalProductContainChemical'</inverse><seedInstances>u'{"vegetables","antioxidants"}{"sugar","liquids"}{"vegetables","enzymes"}{"tea","antioxidants"}{"vegetables","chemicals"}{"herbs","chemicals"}{"vegetables","starch"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 contain arg2\u201d \u201carg1 that contain arg2\u201d \u201carg1 containing arg2\u201d \u201carg2 found in arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that contain a chemical'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductCookedWithAgriculturalProduct'</relationName><humanFormat>u'arg1 {is an agricultural product} that is usually cooked with arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'agriculturalProduct'</domain><range>u'agriculturalProduct'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'agriculturalProductIncludingAgriculturalProduct isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAGriculturalProductCookedWithAgricultureProduct'</inverse><seedInstances>u'{"beef","onions"}{"vegetables","spices"}{"potatoes","tomatoes"}{"milk","sugar"}{"beef","vegetables"}{"lentils","onions"}{"peas","onions"}{"beef","potatoes"}{"okra","tomatoes"}{"lentils","spices"}{"potatoes","herbs"}{"peas","herbs"}{"vegetables","onions"}{"eggs","tomatoes"}{"potatoes","onions"}{"cauliflower","tomatoes"}{"spices","lentils"}{"spices","potatoes"}{"okra","onions"}{"foods","olive oil"}{"spinach","potatoes"}{"spinach","onions"}{"vegetables","spinach"}{"peas","spices"}{"beef","carrots"}{"cauliflower","onions"}{"potatoes","peas"}{"vegetables","olive oil"}{"cauliflower","spices"}{"spinach","spices"}{"vegetables","herbs"}{"carrots","milk"}{"beef","cabbage"}{"beef","spices"}{"potatoes","spices"}{"peas","tomatoes"}{"flowers","sugar"}{"potatoes","cauliflower"}{"spices","tomatoes"}{"lentils","spinach"}{"peas","carrots"}{"onions","spices"}{"foods","milk"}{"cabbage","sugar"}{"eggs","spinach"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 cooked with arg2\u201d \u201darg2 on top of arg1\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that are usually cooked with another agricultural product'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductCutIntoGeometricShape'</relationName><humanFormat>u'arg1 {is an agricultural product} that is usually cut into arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'agriculturalProduct'</domain><range>u'geometricShape'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAGriculturalProductCutIntoGeometricShape'</inverse><seedInstances>u'{"potatoes","squares"}{"beef","cubes"}{"corn","rounds"}{"cheeses","cubes"}{"potatoes","shapes"}{"carrots","rounds"}{"onions","rounds"}{"beets","cubes"}{"potatoes","rounds"}{"onions","squares"}{"carrots","cubes"}{"eggs","rounds"}{"vegetables","shapes"}{"potatoes","stars"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 cut into arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that are usually cut into geometric shapes'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductGrowingInStateOrProvince'</relationName><humanFormat>u'arg1 {is an agricultural product} growing in arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'itemExistsAtLocation'</generalizations><domain>u'agriculturalProduct'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'InverseOfAgriculturalProductGrowingInStateOrProvince'</inverse><seedInstances>u'{"tobacco","maryland"}{"coffee","hawaii"}{"tobacco","virginia"}{"corn","iowa"}{"corn","illinois"}{"crops","california"}{"tobacco","ontario"}{"tea","assam"}{"tea","sikkim"}{"cotton","texas"}{"flowers","alaska"}{"crops","nebraska"}{"crops","nevada"}{"cotton","madhya pradesh"}{"corn","nebraska"}{"cotton","gujarat"}{"taro","hawaii"}{"cotton","oklahoma"}{"corn","minnesota"}{"crops","oregon"}{"flowers","tennessee"}{"varieties","california"}{"tobacco","andhra pradesh"}{"tobacco","tennessee"}{"flowers","ohio"}{"sugar","louisiana"}{"corn","new jersey"}{"corn","kansas"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 growing in arg2\u201d \u201carg1 is grown in arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that are produced in a state or province'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductGrownInLandscapeFeatures'</relationName><humanFormat>u'arg1 {is an agricultural product} grown in arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'agriculturalProduct'</domain><range>u'landscapeFeatures'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAgriculturalProductGrownInLandscapeFeature'</inverse><seedInstances>u'{"crops","farmlands"}{"herbs","mountains"}{"crops","islands"}{"coffee","mountains"}{"coffee","islands"}{"crops","uplands"}{"tea","mountains"}{"coffee","rainforest"}{"tea","foothills"}{"olives","valleys"}{"crops","dry areas"}{"cabbage","mountains"}{"crops","rainforest"}{"potatoes","mountains"}{"vegetables","mountains"}{"crops","parks"}{"vegetables","islands"}{"olives","foothills"}{"onions","woods"}{"corn","foothills"}{"vegetables","farmlands"}{"flowers","valleys"}{"tea","valleys"}{"crops","river valley"}{"herbs","islands"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 grown in arg2\u201d \u201carg1 are grown in arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that are grown in landscape features'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductIncludingAgriculturalProduct'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'agriculturalProduct'</domain><range>u'agriculturalProduct'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'agriculturalProductCookedWithAgriculturalProduct'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAgriculturalProductIncludingAgriculturalProduct'</inverse><seedInstances>u'{"dairy products","milk"}{"livestock","cattle"}{"vegetables","tomatoes"}{"grains","corn"}{"vegetables","onions"}{"crops","tomatoes"}{"crops","vegetables"}{"crops","tobacco"}{"herbs","parsley"}{"vegetables","peas"}{"green vegetables","spinach"}{"crops","cereals"}{"livestock","goats"}{"vegetables","asparagus"}{"vegetables","cucumbers"}{"crops","grains"}{"vegetables","green beans"}{"crops","sugar"}{"crops","corn"}{"crops","carrots"}{"spices","parsley"}{"crops","peas"}{"livestock","pigs"}{"vegetables","beets"}{"dairy products","cheeses"}{"crops","sugarcane"}{"crops","onions"}{"leafy vegetables","broccoli"}{"cereals","corn"}{"leafy vegetables","lettuce"}{"root crops","potatoes"}{"crops","tea"}{"green leafy vegetables","spinach"}{"vegetables","sweet potatoes"}{"vegetables","broccoli"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 including arg2\u201d \u201carg1 include arg2\u201d \u201carg2 and other arg1\u201d \u201carg2 are among arg1\u201d \u201carg1 included arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that are generalizations of other agriculture products'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'agriculturalProductToAttractInsect'</relationName><humanFormat>u'arg1 {is an agricultural product} that atracts arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'agriculturalProduct'</domain><range>u'insect'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAgriculturalProductToAttractInsect'</inverse><seedInstances>u'{"flowers","insects"}{"flowers","butterflies"}{"flowers","bumblebees"}{"sugar","ants"}{"flowers","flies"}{"flowers","honeybees"}{"flowers","honey bees"}{"flowers","moths"}{"flowers","adult butterflies"}{"flowers","wasps"}{"herbs","butterflies"}{"flowers","beetles"}{"weeds","insects"}{"flowers","ladybugs"}{"milk","flies"}{"flowers","colorful butterflies"}{"flowers","insects"}{"flowers","ants"}{"flowers","parasitic wasps"}{"flowers","bugs"}{"wool","moths"}{"sugar","flies"}{"flowers","syrphid flies"}{"flowers","butterflies"}{"flowers","hawkmoths"}{"flowers","beautiful butterflies"}{"flowers","halictid bees"}{"flowers","weevils"}{"flowers","beetle"}{"sugar","bugs"}{"crops","insects"}{"tomatoes","hornworms"}{"flowers","parasitoids"}{"parsley","caterpillars"}{"watermelon","butterflies"}{"onions","maggots"}{"crops","aphids"}{"crops","honey bees"}{"flowers","swallowtail butterflies"}{"flowers","blister beetles"}{"potatoes","bugs"}{"corn","moths"}{"wool","carpet beetles"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 to attract arg2\u201d \u201carg2 are attracted to arg1\u201d \u201carg1 attract arg2\u201d \u201carg1 will attract arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the agricultural products that attract insects'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalSuchAsFish'</relationName><humanFormat>u'arg2 {is a type of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalTypeHasAnimal'</generalizations><domain>u'animal'</domain><range>u'fish'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAnimalSuchAsFish'</inverse><seedInstances>u'{"marine life","sharks"}{"marine life","tropical fish"}{"predators","tuna"}{"marine animals","sharks"}{"invertebrates","shellfish"}{"sea creatures","sharks"}{"marine life","shellfish"}{"predators","larger fish"}{"marine life","stingrays"}{"marine life","salmon"}{"marine life","moray eels"}{"predators","striped bass"}{"prawns","shellfish"}{"creatures","small fish"}{"predators","largemouth bass"}{"marine life","manta rays"}{"marine life","dolphin"}{"predators","trout"}{"predators","sharks"}{"marine life","reef fish"}{"predators","large fish"}{"vertebrates","sharks"}{"creatures","stingrays"}{"predators","jacks"}{"predators","shark"}{"creatures","whale sharks"}{"marine animals","shellfish"}{"predators","cod"}{"vertebrates","zebrafish"}{"creatures","trout"}{"rays","pelagics"}{"marine life","barracuda"}{"predators","swordfish"}{"sea creatures","shellfish"}{"sea creatures","tropical fish"}{"marine life","whale sharks"}{"creatures","eels"}{"predators","barracuda"}{"marine life","eagle rays"}{"carnivores","sharks"}{"predators","lake trout"}{"predators","walleye"}{"predators","groupers"}{"creatures","shellfish"}{"sea creatures","small fish"}{"marine life","reef sharks"}{"creatures","salmon"}{"creatures","manta rays"}{"endangered species","salmon"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the fish that are from a specific type of animals'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalSuchAsInvertebrate'</relationName><humanFormat>u'arg2 {is a type of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalTypeHasAnimal'</generalizations><domain>u'animal'</domain><range>u'invertebrate'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'arthropodAndOtherArthropod'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAnimalSuchAsInvertebrate'</inverse><seedInstances>u'{"invertebrates","corals"}{"invertebrates","snails"}{"invertebrates","crustaceans"}{"invertebrates","mollusks"}{"creatures","snails"}{"invertebrates","molluscs"}{"invertebrates","insect larvae"}{"prawns","crustaceans"}{"marine life","sponges"}{"invertebrates","sponges"}{"pests","nematodes"}{"invertebrates","mussels"}{"invertebrates","clams"}{"invertebrates","jellyfish"}{"marine animals","corals"}{"small animals","snails"}{"creatures","crustaceans"}{"marine life","corals"}{"creatures","clams"}{"sea creatures","jellyfish"}{"creatures","jellyfish"}{"marine life","crustaceans"}{"sea creatures","clams"}{"zooplankton","rotifers"}{"invertebrates","oysters"}{"pests","snails"}{"filter feeders","mussels"}{"sea creatures","corals"}{"invertebrates","bivalves"}{"invertebrates","polychaetes"}{"small animals","crustaceans"}{"invertebrates","nematodes"}{"marine life","clams"}{"invertebrates","nudibranchs"}{"marine animals","jellyfish"}{"sea creatures","sponges"}{"filter feeders","clams"}{"creatures","sponges"}{"creatures","mussels"}{"filter feeders","corals"}{"invertebrates","larvae"}{"invertebrates","squids"}{"creatures","nudibranchs"}{"marine animals","crustaceans"}{"marine life","mussels"}{"filter feeders","oysters"}{"invertebrates","octopuses"}{"invertebrates","leeches"}{"invertebrates","urchins"}{"marine life","oysters"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the invertebrate that are from a specific type of animals'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalSuchAsInsect'</relationName><humanFormat>u'arg2 {is a type of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalSuchAsInvertebrate'</generalizations><domain>u'animal'</domain><range>u'insect'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'arthropodAndOtherArthropod'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAnimalSuchAsInsect'</inverse><seedInstances>u'{"pests","insects"}{"pests","termites"}{"small animals","insects"}{"invertebrates","insects"}{"pests","flies"}{"pests","mites"}{"creatures","butterflies"}{"creatures","insects"}{"pests","ants"}{"social insects","ants"}{"pests","ticks"}{"pests","bugs"}{"locusts","insects"}{"pests","fleas"}{"creatures","ants"}{"invertebrates","beetles"}{"predators","ants"}{"pests","caterpillars"}{"invertebrates","earthworms"}{"predators","ladybugs"}{"pests","spider mites"}{"pests","beetles"}{"invertebrates","aquatic insects"}{"predators","lady beetles"}{"pests","wasps"}{"predators","ladybirds"}{"predators","insects"}{"invertebrates","ants"}{"pests","fruit flies"}{"pests","mosquitos"}{"pests","grasshoppers"}{"pests","whiteflies"}{"pests","scale"}{"pests","carpenter ants"}{"creatures","flies"}{"predators","insects"}{"invertebrates","termites"}{"pests","grubs"}{"creatures","earthworms"}{"pests","gypsy moth"}{"invertebrates","flies"}{"pests","trojans"}{"pests","aphids"}{"invertebrates","grasshoppers"}{"pests","scales"}{"predators","wasps"}{"creatures","beetles"}{"invertebrates","butterflies"}{"pests","fruit fly"}{"pests","cutworms"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the insect that are from a specific type of animals'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalSuchAsMollusk'</relationName><humanFormat>u'arg2 {is a type of} arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalSuchAsInvertebrate'</generalizations><domain>u'animal'</domain><range>u'mollusk'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAnimalSuchAsMollusk'</inverse><seedInstances>u'{"invertebrates","sea urchins"}{"predators","starfish"}{"invertebrates","octopus"}{"predators","octopus"}{"invertebrates","starfish"}{"creatures","starfish"}{"creatures","sea stars"}{"sea creatures","starfish"}{"marine life","starfish"}{"marine animals","sea urchins"}{"predators","sea stars"}{"sea creatures","sea horses"}{"creatures","sea urchins"}{"invertebrates","sea stars"}{"creatures","sea horses"}{"creatures","sea anemones"}{"marine life","sea horses"}{"marine animals","starfish"}{"marine life","sea anemones"}{"prawns","sea food"}{"creatures","giant squid"}{"marine life","octopus"}{"sea creatures","sea urchins"}{"sea creatures","octopus"}{"creatures","sea anemone"}{"invertebrates","squid"}{"marine life","sea urchins"}{"predators","sea lion"}{"creatures","nudibranch"}{"rays","seafloor"}{"marine animals","squid"}{"creatures","sea shells"}{"creatures","octopus"}{"predators","sea anemone"}{"invertebrates","sea anemones"}{"marine life","cuttlefish"}{"horse","seabiscuit"}{"predators","squid"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the mollusk that are from a specific type of animals'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'animalThatFeedOnInsect'</relationName><humanFormat>u'arg1 {feeds on} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalPreysOn'</generalizations><domain>u'animal'</domain><range>u'insect'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAnimalFeedOnInsect'</inverse><seedInstances>u'{"predators","insects"}{"pests","insects"}{"predators","aphids"}{"creatures","insects"}{"predators","mosquito larvae"}{"predators","thrips"}{"carnivores","insects"}{"predators","caterpillars"}{"pests","bugs"}{"pests","predatory insects"}{"predators","mites"}{"creatures","mosquitos"}{"carnivores","grubs"}{"creatures","bugs"}{"pests","lacewings"}{"scavengers","insects"}{"mantis","grasshopper"}{"insectivores","insects"}{"various species","caterpillars"}{"pests","mites"}{"predators","fly larvae"}{"predators","moths"}{"insectivores","ants"}{"predators","pest insects"}{"predators","ants"}{"creatures","grasshoppers"}{"predators","grasshoppers"}{"predators","aquatic insects"}{"cow","flies"}{"cow","maggots"}{"creatures","grubs"}{"creatures","ants"}{"mantis","beetle"}{"pests","ladybugs"}{"predators","bugs"}{"creatures","garden pests"}{"pests","grubs"}{"creatures","maggots"}{"mantis","aphids"}{"various species","insects"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 that feed on arg2\u201d \u201carg1 that eat arg2\u201d \u201darg1 eating arg2\u201d \u201carg1 feeding on arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the animals that feed on Insects'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'arteryArisesFromArtery'</relationName><humanFormat>u'arg1 {arises from} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'artery'</domain><range>u'artery'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArteryArisesFromArtery'</inverse><seedInstances>u'{"aorta","left ventricle"}{"aorta","right ventricle"}{"pulmonary artery","right ventricle"}{"pulmonary artery","left ventricle"}{"left coronary artery","pulmonary artery"}{"coronary artery","pulmonary artery"}{"thyroid artery","thyrocervical trunk"}{"subclavian artery","brachiocephalic artery"}{"pulmonary artery","right pulmonary artery"}{"left common carotid artery","innominate artery"}{"carotid artery","innominate artery"}{"common carotid artery","innominate artery"}{"carotid artery","aorta"}{"pulmonary artery","aorta"}{"subclavian artery","brachiocephalic trunk"}{"external carotid artery","common carotid artery"}{"coronary artery","main pulmonary artery"}{"ductus arteriosus","aorta"}{"right common carotid","brachiocephalic trunk"}{"left common carotid artery","aorta"}{"hepatic artery","left gastric artery"}{"common carotid","brachiocephalic trunk"}{"common carotid","subclavian artery"}{"subclavian artery","innominate artery"}{"vertebral artery","subclavian artery"}{"hepatic artery","superior mesenteric artery"}{"tibial artery","popliteal artery"}{"great artery","left ventricle"}{"common carotid artery","aorta"}{"carotid artery","common carotid artery"}{"glomerulus","afferent arteriole"}{"coronary artery","aorta"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 arises from arg2\u201d \u201carg1 originates from arg2\u201d \u201carg1 branches from arg2\u201d'</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the arteries that arises from other arteries'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'arteryCalledArtery'</relationName><humanFormat>u'arg1 {is called} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'artery'</domain><range>u'artery'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'arteriesSuchAsArteries isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArteryCalledArtery'</inverse><seedInstances>u'{"blood vessels","capillaries"}{"arteries","arterioles"}{"tiny blood vessels","capillaries"}{"vessels","arteries"}{"blood vessels","coronary arteries"}{"arteries","coronary arteries"}{"blood vessel","aorta"}{"smaller vessels","capillaries"}{"smaller arteries","arterioles"}{"blood vessels","glomerulus"}{"arteries","aorta"}{"blood vessel","ductus arteriosus"}{"large artery","aorta"}{"vessels","arterioles"}{"blood vessels","aorta"}{"blood vessels","arterioles"}{"smaller vessels","arterioles"}{"vessels","capillaries"}{"vessels","coronary arteries"}{"blood vessels","arteries"}{"vessels","aorta"}{"large arteries","aorta"}{"major artery","aorta"}{"small arteries","arterioles"}{"blood vessels","sinusoids"}{"blood vessels","vascular system"}{"tiny blood vessels","arterioles"}{"main artery","aorta"}{"arteries","carotid arteries"}{"major arteries","aorta"}{"vessels","pulmonary arteries"}{"capillaries","sinusoids"}{"capillaries","glomerulus"}{"aorta","renal artery"}{"aorta","ductus arteriosus"}{"blood vessel","pulmonary artery"}{"vessels","pulmonary artery"}{"arteries","iliac arteries"}{"blood vessel","femoral artery"}{"aorta","arteries"}{"blood vessels","carotid arteries"}{"arteries","carotid artery"}{"vessels","blood vessels"}{"vessels","carotid artery"}{"blood vessels","pulmonary artery"}{"vessels","dorsal aorta"}{"vessels","carotid arteries"}{"blood vessels","carotid artery"}{"blood vessels","microvessels"}{"pulmonary artery","ductus arteriosus"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 called arg2\u201d\u201darg1 are called arg2\u201d \u201carg1 known as arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the names an artery can be called'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'arthropodAndOtherArthropod'</relationName><humanFormat>u'arg1 is an arthropod {as well as} arg2 also is'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'animalIsTypeOfAnimal'</generalizations><domain>u'arthropod'</domain><range>u'arthropod'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'animalSuchAsInsect, animalSuchAsInvertebrate'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArthropodAndOtherArthropod'</inverse><seedInstances>u'{"spiders","arthropods"}{"bees","pollinators"}{"pollinators","beneficial insects"}{"spiders","arachnids"}{"scorpions","arachnids"}{"native bees","pollinators"}{"arachnids","arthropods"}{"scorpions","arthropods"}{"bees","pollinating insects"}{"crabs","arthropods"}{"bees","beneficial insects"}{"black widow","spiders"}{"trilobites","arthropods"}{"centipedes","scorpions"}{"spiders","small arthropods"}{"wolf spiders","spiders"}{"tarantulas","arachnids"}{"lobsters","arthropods"}{"spiders","beneficial insects"}{"black widows","spiders"}{"recluse spider","spiders"}{"centipedes","arthropods"}{"black widow spiders","spiders"}{"brown recluse","spiders"}{"crickets","arthropods"}{"maine lobster","lobsters"}{"tarantulas","spiders"}{"black widow","widow spiders"}{"brown recluse spiders","spiders"}{"bees","native bees"}{"crayfish","arthropods"}{"black widow","dangerous spiders"}{"recluse spiders","spiders"}{"tarantulas","arthropods"}{"shrimp","decapods"}{"brown recluse","recluse spiders"}{"crickets","spiders"}{"scorpions","spiders"}{"shrimp","crabs"}{"spider","arachnids"}{"blue crabs","crabs"}{"sac spiders","spiders"}{"daphnia","cladocerans"}{"shrimp","arthropods"}{"horseshoe crabs","arthropods"}{"brown recluse spider","spiders"}{"ghost shrimp","shrimp"}{"daphnia","water fleas"}{"hobo spider","spiders"}{"crab spiders","spiders"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 and other arg2\u201d \u201darg1 such as arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes similar arthropods'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'arthropodCalledArthropod'</relationName><humanFormat>u'arg1 {is called} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'synonymFor'</generalizations><domain>u'arthropod'</domain><range>u'arthropod'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArthropodCalledArthropod'</inverse><seedInstances>u'{"spider","tarantula"}{"arthropods","trilobites"}{"arthropods","arachnids"}{"shrimps","krill"}{"shrimp","black tiger shrimp"}{"shrimp","krill"}{"spiders","orb weavers"}{"spider","brown recluse"}{"shrimp","brine shrimp"}{"arachnids","scorpions"}{"small shrimp","krill"}{"lobster","langostino"}{"crab","fiddler crab"}{"tick","deer tick"}{"orb weaver","spider"}{"louse","phylloxera"}{"tick","lone star tick"}{"spider","hobo spider"}{"crabs","lobsters"}{"spiders","crabs"}{"wasp","yellowjacket"}{"crabs","coconut crabs"}{"spider","daddy longlegs"}{"lobster","crayfish"}{"shrimp","artemia"}{"crabs","blue crabs"}{"arachnids","opiliones"}{"spider","black widow"}{"crabs","sand fleas"}{"spiders","tarantulas"}{"spider","daddy long legs"}{"crabs","fiddler crabs"}{"hairy spiders","tarantulas"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 called arg2\u201d \u201carg1 also known as arg2\u201d \u201carg1 also called arg2\u201d \u201carg1 nickname is arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-12'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the names an artery can be called'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'ArthropodLooksLikeInsect'</relationName><humanFormat>u'arg1 is an arthropod that {looks like} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'arthropod'</domain><range>u'insect'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'ArthropodThatFeedOnInsect isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArthropodLookLikeInsect'</inverse><seedInstances>u'{"spiders","mites"}{"bees","wasps"}{"spiders","insects"}{"crickets","grasshoppers"}{"spiders","ants"}{"bees","wasps"}{"crickets","bugs"}{"bees","insects"}{"spiders","flies"}{"bees","ants"}{"sowbugs","insects"}{"arachnids","insects"}{"chiggers","ticks"}{"centipedes","millipedes"}{"spider","insects"}{"yellowjackets","honeybees"}{"centipedes","millipedes"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 look like arg2\u201d \u201carg1 are often confused with arg2\u201d \u201carg1 is often confused with arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the arthropod that look like specific insects'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'ArthropodThatFeedOnInsect'</relationName><humanFormat>u'arg1 is an arthropod that {feeds on} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'arthropod'</domain><range>u'insect'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'ArthropodLooksLikeInsect isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArthropodFeedOnInsect'</inverse><seedInstances>u'{"beneficial insects","aphids"}{"spiders","midges"}{"beneficial insects","caterpillars"}{"spiders","insects"}{"centipedes","insects"}{"spiders","bugs"}{"beneficial insects","whiteflies"}{"slugs","beetles"}{"pine beetles","beetles"}{"spiders","insects"}{"arthropods","insects"}{"beneficial insects","pest insects"}{"beneficial insects","garden pests"}{"psylla","insects"}{"beneficial insects","flies"}{"beneficial insects","aphid"}{"spiders","ladybugs"}{"spiders","mites"}{"scorpions","insects"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 that feed on arg2\u201d \u201carg1 that eat arg2\u201d \u201darg1 eating arg2\u201d \u201carg1 feeding on arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the names an artery can be called'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'athleteBeatAthlete'</relationName><humanFormat>u'arg1 is an athlete who {beat} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'athlete'</domain><range>u'athlete'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAthleteBeatAthlete'</inverse><seedInstances>u'{"roger federer","andy roddick"}{"venus williams","lindsay davenport"}{"lennox lewis","evander holyfield"}{"pete sampras","andre agassi"}{"jack nicklaus","arnold palmer"}{"justine henin","svetlana kuznetsova"}{"roger federer","marcos baghdatis"}{"marat safin","roger federer"}{"hank aaron","babe ruth"}{"nick faldo","greg norman"}{"jimmie johnson","jeff gordon"}{"jimmie johnson","carl edwards"}{"ken norton","muhammad ali"}{"andy roddick","roger federer"}{"anastasia myskina","elena dementieva"}{"venus williams","kim clijsters"}{"phil mickelson","tiger woods"}{"gary player","arnold palmer"}{"kim clijsters","venus williams"}{"tiger woods","phil mickelson"}{"svetlana kuznetsova","elena dementieva"}{"lleyton hewitt","pete sampras"}{"elena dementieva","dinara safina"}{"barry bonds","hank aaron"}{"venus williams","jelena jankovic"}{"roger federer","marat safin"}{"elena dementieva","svetlana kuznetsova"}{"vijay singh","tiger woods"}{"stewart cink","tiger woods"}{"jeff gordon","mark martin"}{"dwayne wade","kobe bryant"}{"venus williams","vera zvonareva"}{"andre agassi","pete sampras"}{"justine henin","jelena jankovic"}{"eli manning","tom brady"}{"jelena jankovic","elena dementieva"}{"lindsay davenport","venus williams"}{"pete sampras","roger federer"}{"marat safin","pete sampras"}{"roger federer","andre agassi"}{"pete sampras","tim henman"}{"pete sampras","marat safin"}{"boris becker","ivan lendl"}{"jelena jankovic","svetlana kuznetsova"}{"tiger woods","stewart cink"}{"jack nicklaus","gary player"}{"roger federer","lleyton hewitt"}{"lleyton hewitt","tim henman"}{"pete sampras","boris becker"}{"tiger woods","vijay singh"}{"venus williams","serena williams"}{"jelena jankovic","serena williams"}{"steffi graf","monica seles"}{"justine henin","serena williams"}{"steffi graf","martina navratilova"}{"ivan lendl","john mcenroe"}{"chris evert","martina navratilova"}{"chris evert","martina navratilova"}{"lindsay davenport","martina hingis"}{"steffi graf","monica seles"}{"vera zvonareva","williams"}{"svetlana kuznetsova","williams"}{"venus williams","serena williams"}{"ivan lendl","john mcenroe"}{"lindsay davenport","serena williams"}{"ana ivanovic","maria sharapova"}{"justine henin","serena williams"}{"steffi graf","martina navratilova"}{"svetlana kuznetsova","maria sharapova"}{"venus williams","martina hingis"}{"venus williams","maria sharapova"}{"lennox lewis","mike tyson"}{"kim clijsters","maria sharapova"}{"svetlana kuznetsova","serena williams"}{"dinara safina","williams"}{"jelena jankovic","maria sharapova"}{"lindsay davenport","martina hingis"}{"eric young","sting"}{"dinara safina","williams"}{"elena dementieva","serena williams"}{"dinara safina","serena williams"}{"lindsay davenport","jennifer capriati"}{"elena dementieva","williams"}{"vera zvonareva","maria sharapova"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 beat arg2\u201d \u201carg1 defeated arg2\u201d \u201carg1 defeats arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the athletes whom beat other athletes'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'athleteInjuredHisBodyPart'</relationName><humanFormat>u'arg1 is an athlete who {injured} his/her arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'athlete'</domain><range>u'bodypart'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAthleteInjuredHisBodyPart'</inverse><seedInstances>u'{"tom brady","knee"}{"sidney crosby","ankle"}{"manu ginobili","ankle"}{"ben roethlisberger","shoulder"}{"blake","shoulder"}{"tony parker","ankle"}{"bonds","knee"}{"martin","groin"}{"shortstop","back"}{"ramirez","shoulder"}{"jameer nelson","shoulder"}{"takashi saito","elbow"}{"lebron james","ankle"}{"wade boggs","back"}{"martin havlat","shoulder"}{"steve blake","shoulder"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 injured his arg2\u201d \u201carg1 injured her arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the athletes that had injured any body part'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'athleteLedSportsTeam'</relationName><humanFormat>u'arg1 is an athlete who {led} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'athletePlaysForTeam'</generalizations><domain>u'athlete'</domain><range>u'sportsTeam'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAthleteLedSportsTeam'</inverse><seedInstances>u'{"kobe bryant","lakers"}{"matt cassel","patriots"}{"amare stoudemire","suns"}{"manu ginobili","spurs"}{"eli manning","giants"}{"ben gordon","bulls"}{"michael redd","bucks"}{"iverson","sixers"}{"peyton manning","colts"}{"favre","jets"}{"ben roethlisberger","steelers"}{"iverson","pistons"}{"rickey henderson","oakland athletics"}{"brett favre","jets"}{"brett favre","packers"}{"brian urlacher","bears"}{"peyton manning","indianapolis colts"}{"tom brady","patriots"}{"jackie robinson","brooklyn dodgers"}{"shaq","suns"}{"martin","nets"}{"dwight howard","magic"}{"alex rodriguez","yankees"}{"lou piniella","cubs"}{"kevin garnett","celtics"}{"iverson","nuggets"}{"deron williams","jazz"}{"eli manning","new york giants"}{"larry foote","steelers"}{"chris cooley","redskins"}{"babe ruth","yankees"}{"elton brand","sixers"}{"hank aaron","milwaukee braves"}{"shaquille o\'neal","suns"}{"j.r. smith","nuggets"}{"hedo turkoglu","magic"}{"luol deng","bulls"}{"martin","yankees"}{"carlos boozer","jazz"}{"ramon sessions","bucks"}{"drew bledsoe","patriots"}{"allen iverson","nuggets"}{"ben roethlisberger","pittsburgh steelers"}{"brett favre","new york jets"}{"johan santana","mets"}{"favre","packers"}{"matt cassel","pats"}{"justin morneau","twins"}{"hernandez","mets"}{"tom brady","new england patriots"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 led arg2\u201d \u201carg1 leads arg2\u201d '</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the athletes that lead/led a sports team'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'athleteWinsAwardTrophyTournament'</relationName><humanFormat>u'arg1 is an athlete who {wins} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'athlete'</domain><range>u'awardTrophyTournament'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAthleteWinsAwardTrophyTournament'</inverse><seedInstances>u'{"jack nicklaus","masters"}{"tiger woods","u.s. open"}{"tiger woods","us open"}{"kurt warner","super bowl"}{"arnold palmer","masters"}{"roger federer","us open"}{"tiger woods","grand slam"}{"bobby jones","grand slam"}{"barry sanders","heisman trophy"}{"dinara safina","australian open"}{"arnold palmer","u.s. open"}{"andy roddick","u.s. open"}{"greg norman","masters"}{"greg norman","british open"}{"gary player","masters"}{"peyton manning","super bowl"}{"favre","super bowl"}{"nick faldo","british open"}{"arthur ashe","u.s. open"}{"andre agassi","u.s. open"}{"tom brady","super bowl"}{"bobby jones","u.s. open"}{"ana ivanovic","french open"}{"eli manning","super bowl"}{"greg norman","australian open"}{"brad lidge","world series"}{"anastasia myskina","french open"}{"dinara safina","grand slam"}{"pete sampras","us open"}{"dinara safina","french open"}{"kim clijsters","australian open"}{"santonio holmes","super bowl"}{"roger federer","grand slam"}{"curt schilling","world series"}{"martin","nextel cup"}{"jamie gold","world series"}{"ricky williams","heisman trophy"}{"andre agassi","australian open"}{"ben roethlisberger","super bowl"}{"roger clemens","world series"} {\u201calbert pujols\u201d,\u201dworld series\u201d} {\u201cjim thome\u201d,\u201dworld series\u201d}  {\u201ckobe bryant\u201d,\u201dnba championship\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 wins arg2\u201d \u201darg1 who won arg2\u201d \u201carg1 has won arg2\u201d \u201darg2 winner arg1\u201d \u201carg2 champion arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt, Prophet'</author><curator>u''</curator><description>u'Describes the athletes who won an award trophy tournament'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'attractionMadeOfBuildingMaterial'</relationName><humanFormat>u'arg1 is an attraction {made of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'attraction'</domain><range>u'buildingMaterial'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAttractionMadeOfBuildingMaterial'</inverse><seedInstances>u'{"house","glass"}{"house","concrete"}{"hull","fiberglass"}{"dome","glass"}{"house","silver"}{"pyramid","glass"}{"house","rocks"}{"dome","concrete"}{"path","rocks"}{"statue of liberty","copper"}{"house","iron"}{"hull","steel"}{"palace","copper"}{"towers","steel"}{"house","steel"}{"dome","copper"}{"towers","glass"}{"palace","glass"}{"hull","concrete"}{"hull","fibreglass"}{"path","concrete"}{"towers","silver"}{"trolley","steel"}{"towers","concrete"}{"stadium","steel"}{"hull","iron"}{"memorial","glass"}{"hull","carbon fiber"}{"museums","glass"}{"coaster","tubular steel"}{"memorial","bronze"}{"arrowhead","copper"}{"artworks","silver"}{"house","fiberglass"}{"towers","carbon fiber"}{"coaster","glass"}{"pavilion","glass"}{"buses","steel"}{"dome","brass"}{"artworks","bronze"}{"dome","bronze"}{"wonderland","glass"}{"clear","glass"}{"hull","glass"}{"path","steel"}{"memorial","brass"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 made of arg2\u201d \u201darg1 is made of arg2\u201d \u201carg1 built og arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the materials used to build attractions'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'automobileMakerCarDealersInStateOrProvince'</relationName><humanFormat>u'arg1 is a specific automobile maker dealer {in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'automobileMaker'</domain><range>u'stateOrProvince'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAutomobileMakerCarDealersInStateOrProvince'</inverse><seedInstances>u'{"jeep","kansas"}{"honda","maryland"}{"corvette","georgia"}{"dodge","pennsylvania"}{"jeep","delaware"}{"toyota","texas"}{"dodge","georgia"}{"honda","california"}{"dodge","massachusetts"}{"honda","oklahoma"}{"honda","kansas"}{"infiniti","arizona"}{"chevrolet","california"}{"nissan","ohio"}{"honda","minnesota"}{"dodge","arizona"}{"jeep","new york"}{"chrysler","texas"}{"chevrolet","missouri"}{"dodge","new york"}{"honda","iowa"}{"honda","arizona"}{"chevrolet","maine"}{"lexus","texas"}{"toyota","california"}{"toyota","pennsylvania"}{"honda","ohio"}{"gmc","michigan"}{"lexus","new jersey"}{"chevrolet","arizona"}{"honda","alabama"}{"chrysler","new york"}{"acura","texas"}{"cadillac","texas"}{"suzuki","michigan"}{"volkswagen","wisconsin"}{"nissan","new york"}{"mazda","arizona"}{"toyota","indiana"}{"chrysler","michigan"}{"toyota","virginia"}{"dodge","michigan"}{"mercury","arizona"}{"dodge","louisiana"}{"hyundai","new jersey"}{"kia","massachusetts"}{"honda","texas"}{"dodge","wisconsin"}{"volkswagen","texas"}{"nissan","texas"} '</seedInstances><seedExtractionPatterns>u'\u201carg1 car dealers in arg2\u201d \u201darg1 auto dealers in arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the car dealers in a state or province'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'automobileMakerChiefExecutiveCeo'</relationName><humanFormat>u'arg2 {is the CEO} of the automobile maker company arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'companyCeo'</generalizations><domain>u'automobileMaker'</domain><range>u'ceo'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAutomobileMakerChiefExecutiveCeo'</inverse><seedInstances>u'{"gm","rick wagoner"}{"fiat","sergio marchionne"}{"chrysler","bob nardelli"}{"nissan","carlos ghosn"}{"volkswagen","martin winterkorn"}{"renault","carlos ghosn"}{"bmw","norbert reithofer"}{"honda","takeo fukui"}{"gm","richard wagoner"}{"motors","rick wagoner"}{"chrysler","dieter zetsche"}{"daimlerchrysler","dieter zetsche"}{"bmw","helmut panke"}{"nissan motor","carlos ghosn"}{"chrysler llc","bob nardelli"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 chief executive arg2\u201d'</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the CEOs of automobile maker companies'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'automobileMakerDealersInCity'</relationName><humanFormat>u'arg1 is a specific automobile maker dealer {in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasOfficeInCity'</generalizations><domain>u'automobileMaker'</domain><range>u'city'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAutomobileMakerDealersInCity'</inverse><seedInstances>u'{"jeep","roanoke"}{"honda","tulsa"}{"jeep","vancouver"}{"suzuki","tucson"}{"nissan","san antonio"}{"honda","houston"}{"chevrolet","houston"}{"nissan","san diego"}{"lexus","dallas"}{"jeep","lancaster"}{"chevrolet","indianapolis"}{"dodge","san diego"}{"chevrolet","layton"}{"honda","sacramento"}{"dodge","houston"}{"honda","philadelphia"}{"audi","chicago"}{"chevrolet","seattle"}{"toyota","chicago"}{"bmw","milwaukee"}{"jeep","charleston"}{"toyota","dallas"}{"honda","san antonio"}{"hyundai","san diego"}{"jaguar","houston"}{"toyota","tucson"}{"bmw","dallas"}{"chevrolet","detroit"}{"chevrolet","philadelphia"}{"toyota","seattle"}{"honda","lancaster"}{"buick","san diego"}{"buick","columbus"}{"honda","albuquerque"}{"jeep","birmingham"}{"honda","atlanta"}{"honda","seattle"}{"chevrolet","denver"}{"chevrolet","dallas"}{"toyota","houston"}{"honda","dallas"}{"honda","denver"}{"honda","indianapolis"}{"dodge","milwaukee"}{"jaguar","coventry"}{"cadillac","dallas"}{"isuzu","knoxville"}{"acura","dallas"}{"jaguar","birmingham"}{"toyota","denver"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 car dealers in arg2\u201d \u201darg1 auto dealers in arg2\u201d \u201darg1 dealers in arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the car dealers in a city'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'automobileMakerDealersInCountry'</relationName><humanFormat>u'arg1 is a specific automobile maker dealer {in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasOfficeInCountry'</generalizations><domain>u'automobileMaker'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAutomobileMakerDealersInCountry'</inverse><seedInstances>u'{"dodge","germany"}{"dodge","canada"}{"volkswagen","germany"}{"toyota","south africa"}{"dodge","uk"}{"honda","canada"}{"saab","uk"}{"mazda","usa"}{"benz","germany"}{"bmw","germany"}{"gm","canada"}{"volkswagen","canada"}{"toyota","australia"}{"bmw","usa"}{"cadillac","usa"}{"suzuki","uk"}{"honda","uk"}{"nissan","japan"}{"bmw","uk"}{"nissan","uk"}{"nissan","usa"}{"dodge","mexico"}{"saab","usa"}{"toyota","usa"}{"saab","sweden"}{"chrysler","canada"}{"mazda","uk"}{"mazda","canada"}{"citroen","uk"}{"jaguar","uk"}{"land rover","uk"}{"renault","uk"}{"bmw","spain"}{"toyota","malaysia"}{"porsche","uk"}{"chrysler","usa"}{"suzuki","canada"}{"honda","usa"}{"buick","china"}{"lexus","canada"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 car dealers in arg2\u201d \u201darg1 auto dealers in arg2\u201d \u201darg1 dealers in arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the car dealers in a country'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'bacteriaIsTheCausativeAgentOfPhysiologicalcondition'</relationName><humanFormat>u'arg1 is a bacteria {that causes} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'bacteria'</domain><range>u'physiologicalCondition'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBacteriaIsTheCausativeAgentOfPhysiologicalCondition'</inverse><seedInstances>u'{"borrelia burgdorferi","lyme disease"}{"yersinia pestis","plague"}{"rickettsia rickettsii","fever"}{"vibrio cholerae","cholera"}{"mycobacterium leprae","leprosy"}{"listeria monocytogenes","listeriosis"}{"corynebacterium diphtheriae","diphtheria"}{"treponema pallidum","syphilis"}{"burkholderia pseudomallei","melioidosis"}{"clostridium tetani","tetanus"}{"propionibacterium acnes","acne"}{"clostridium botulinum","botulism"}{"bordetella pertussis","pertussis"}{"francisella tularensis","tularemia"}{"neisseria gonorrhoeae","gonorrhea"}{"bordetella pertussis","whooping cough"}{"bordetella pertussis","cough"}{"neisseria","meningitis"}{"entamoeba histolytica","amebiasis"}{"neisseria meningitidis","meningitis"}{"haemophilus ducreyi","chancroid"}{"entamoeba histolytica","liver abscess"}{"borrelia burgdorferi","infection"}{"mycobacterium marinum","infection"}{"ehrlichia chaffeensis","ehrlichiosis"}{"staphylococcus aureus","infection"}{"streptococcus pneumoniae","infection"}{"bacillus cereus","food poisoning"}{"entamoeba histolytica","dysentery"}{"rickettsia","typhus"}{"bartonella henselae","infection"}{"campylobacter jejuni","illness"}{"vibrio parahaemolyticus","illness"}{"pseudomonas aeruginosa","infection"}{"mycoplasma pneumoniae","pneumonia"}{"staphylococcus aureus","mastitis"}{"bartonella henselae","cat scratch disease"}{"mycobacterium bovis","tuberculosis"}{"erwinia amylovora","fire blight"}{"clostridium perfringens","gas gangrene"}{"corynebacterium diphtheriae","infectious disease"}{"legionella pneumophila","infection"}{"pseudomonas aeruginosa","tract infection"}{"staphylococcus aureus","toxic shock syndrome"}{"rickettsia prowazekii","typhus"}{"bordetella pertussis","infection"}{"bordetella bronchiseptica","cough"}{"streptococcus pneumoniae","pneumonia"}{"legionella pneumophila","illness"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 is the causative agent fo arg2\u201d \u201darg2 is caused by infection with arg1\u201d \u201carg2 is the etiologic agent of arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the bacterias that causes physiological conditions'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'bankBankInCountry'</relationName><humanFormat>u'arg1 is a bank {in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'hasOfficeInCountry'</generalizations><domain>u'bank'</domain><range>u'country'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBankBankInCountry'</inverse><seedInstances>u'{"barclays","uk"}{"citi","canada"}{"northern rock","england"}{"northern rock","uk"}{"anz","new zealand"}{"barclays","uk"}{"barclays","canada"}{"northern rock","uk"}{"lloyds tsb","uk"}{"anz","australia"}{"hsbc","uk"}{"hsbc","canada"}{"hsbc","usa"}{"hsbc","australia"}{"barclays","india"}{"citigroup","uk"}{"lloyds tsb","uk"}{"barclays","britain"}{"citi","india"}{"hsbc","hong kong"}{"northern rock","britain"}{"northern rock","united kingdom"}{"barclays capital","uk"}{"hsbc","hong kong"}{"fortis","belgium"}{"hsbc","uk"}{"hsbc","panama"}{"citibank","uk"}{"citibank","philippines"}{"hsbc","hong kong"}{"hdfc bank","india"}{"scotiabank","canada"}{"hsbc","india"}{"hsbc","middle east"}{"icici bank","india"}{"barclays","india"}{"hsbc","brazil"}{"anz","australia"}{"maybank","malaysia"}{"citibank","pakistan"}{"citibank","japan"}{"barclays","uk"}{"northern rock","uk"}{"hsbc","malaysia"}{"citibank","singapore"}{"hsbc","jordan"}{"hsbc","uae"}{"anz","new zealand"}{"first national bank","south africa"}{"nab","australia"}{"banamex","mexico"}{"hsbc","uk"}{"hsbc","lebanon"}{"barclays","france"}{"citibank","australia"}{"citibank","kenya"}{"barclays","england"}{"hsbc","japan"}{"hsbc","poland"}{"hsbc","bahrain"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 bank in arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the banks in a country'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'bankBoughtBank'</relationName><humanFormat>u'arg1 is a bank that {bought} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'acquired'</generalizations><domain>u'bank'</domain><range>u'bank'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBankBoughtBank'</inverse><seedInstances>u'{"jp morgan","bear stearns"}{"wells fargo","wachovia"}{"citigroup","wachovia"}{"jpmorgan chase","bear stearns"}{"j.p. morgan chase","bear stearns"}{"washington mutual","providian"}{"chase bank","bank one"}{"jpmorgan chase","washington mutual"}{"citibank","banamex"}{"allianz","dresdner bank"}{"citigroup","banamex"}{"jp morgan chase","bear stearns"}{"citibank","wachovia"}{"commonwealth bank","bankwest"}{"jp morgan","bank one"}{"citi","countrywide"}{"wells fargo","wachovia bank"}{"citi","wachovia"}{"jp morgan chase","washington mutual"}{"hsbc","orchard bank"}{"jp morgan","washington mutual"}{"j.p. morgan chase","washington mutual"}{"jp morgan chase","bank one"} '</seedInstances><seedExtractionPatterns>u'\u201carg1 bought arg2\u201d \u201darg2 is now owned by arg1\u201d \u201carg1 acquired arg2\u201d \u201darg1 branch in arg2\u201d \u201carg1 bank branch in arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the banks that bought other banks'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'bankChiefExecutiveCeo'</relationName><humanFormat>u'arg1 is a bank that {has} arg2 as its CEO'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'companyCeo'</generalizations><domain>u'bank'</domain><range>u'ceo'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBankChiefExecutiveCeo'</inverse><seedInstances>u'{"citigroup","vikram pandit"}{"goldman sachs","lloyd blankfein"}{"citigroup","charles prince"}{"washington mutual","kerry killinger"}{"jpmorgan chase","jamie dimon"}{"jp morgan chase","jamie dimon"}{"citigroup","sanford weill"}{"fannie mae","franklin raines"}{"jp morgan","jamie dimon"}{"wells fargo","john stumpf"}{"barclays","bob diamond"}{"goldman sachs","robert rubin"}{"citigroup","sandy weill"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 chief executive arg2\u201d'</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'1'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the CEOs of banks'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'beverageContainsProtein'</relationName><humanFormat>u'arg1 is a beverage that {contains} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'beverage'</domain><range>u'protein'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBeverageContainsProtein'</inverse><seedInstances>u'{"breast milk","antibodies"}{"breast milk","proteins"}{"breastmilk","antibodies"}{"beer","proteins"}{"breast milk","nutrient"}{"breast milk","lysozyme"}{"breast milk","growth factors"}{"juice","proteins"}{"breast milk","immunoglobulins"}{"blend","proteases"}{"skim milk","casein"}{"breast milk","enzyme\u201d}{"juice","protease"}{"broth","collagen"}{"dairy foods","proteins"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 contains arg2\u201d '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the proteins contained in beverages'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'beverageMadeFromBeverage'</relationName><humanFormat>u'arg1 is a beverage {made from} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'beverage'</domain><range>u'beverage'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBeverageMadeFromBeverage'</inverse><seedInstances>u'{"cocktail","vodka"}{"white wine","blend"}{"liqueur","blend"}{"white wines","chardonnay"}{"white wine","chardonnay"}{"red wines","pinot noir"}{"white wine","sauvignon blanc"}{"brew","mead"}{"dessert wine","blend"}{"red wines","syrah"}{"espresso","blend"}{"soup","broth"}{"soup","chicken broth"}{"red wines","cabernet sauvignon"}{"champagne","juice"}{"chai","black tea"}{"sparkling wine","chardonnay"}{"cider","juice"}{"white wine","trebbiano"}{"dessert wine","juice"}{"white wines","pinot noir"}{"green tea","white tea"}{"liquors","juice"}{"white wines","blend"}{"beer","juice"}{"liqueur","vodka"}{"cocktail","orange juice"}{"blend","lemon"}{"white wine","riesling"}{"table wine","blend"}{"punch","white wine"}{"lemonade","lemon"}{"dessert wine","white wine"}{"white wines","viognier"}{"white wine","pinot noir"}{"soup","white wine"}{"chardonnay","blend"}{"white wine","muscat"}{"juice","blend"}{"bordeaux","cabernet sauvignon"}{"soup","lemon"}{"white wine","chenin blanc"}{"blend","pinot noir"}{"punch","ginger ale"}{"punch","ale"}{"chianti","blend"}{"dessert wine","muscat"}{"white wine","semillon"}{"quality coffee","blend"}'</seedInstances><seedExtractionPatterns>u'\u201carg1 made from arg2\u201d \u201carg1 are made from arg2\u201d  \u201carg1 made of arg2\u201d \u201carg1 are made of arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-01-18'</editDate><author>u'ontExt'</author><curator>u''</curator><description>u'Describes the names an artery can be called'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'awardtrophytournamentIsTheChampionshipGameOfTheNationalSport'</relationName><humanFormat>u'arg1 {is the award trophy} of the national arg2 league'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'awardTrophyTournament'</domain><range>u'sport'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAwardTrophyTournamentIsTheChampionshipGameOfTheNationalSport'</inverse><seedInstances>u'{\u201csuper bowl\u201d,\u201dfootball\u201d}{\u201cworld series\u201d,\u201dbaseball\u201d}{\u201cstanley cup\u201d,\u201dhockey\u201d}{\u201cnba championship\u201d,\u201dbasketball\u201d}{\u201cnfl championship\u201d,\u201cfootball\u201d}{\u201cnba finals\u201d,\u201cbasketball\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 is the championship game of the national arg2\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'Prophet'</author><curator>u''</curator><description>u'Describes award trophy tournaments related to specific sports'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'actorSuchAsActor'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'actor'</domain><range>u'actor'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfActorSuchAsActor'</inverse><seedInstances>u'{"16th-century actors","Richard Burbage"}{"radio actors\u201d,\u201cMiriam Wolfe"}{"radio actors\u201d,"Peter Leeds"}{\u201ctheater actors\u201d,\u201dRaul Julia\u201d}{\u201ctheater actors\u201d,\u201cJohn Barrymore\u201d}{\u201ctheater actors\u201d,\u201dSam Waterson\u201d}{\u201ctalented actors\u201d,\u201cTobey Maguire\u201d}{\u201cwestern movie actors\u201d,\u201cClint Eastwood\u201d}{\u201cmovie actors\u201d,\u201cGlenn Close\u201d}{\u201cmovie actors\u201d,\u201cRobert DeNiro\u201d}{\u201cmovie actors\u201d,\u201cMeryl Streep\u201d}{\u201cmovie actors\u201d,\u201cMarlon Brando\u201d}{\u201cmovie actors\u201d,\u201cSigourney Weaver\u201d}{\u201cmovie actors\u201d,\u201cDustin Hoffman\u201d}{\u201ctv actors\u201d,\u201cCourteney Cox\u201d}{\u201ctv actors\u201d,\u201cLisa Kudrow\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the actor types that are generalizations of specific actors'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'airportSuchAsAirport'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'airport'</domain><range>u'airport'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inversoOfAirportSuchAsAirport'</inverse><seedInstances>u"{\u201cregional airports\u201c,\u201cBordeaux M\xe9rignac Airport (BOD)\u201d}{\u201cClass D airports\u201d,\u201dEugene's Mahlon Sweet (EUG)\u201d}{\u201couter airports\u201d,\u201dGatwick\u201d}{\u201couter airports\u201d,\u201dLuton\u201d}{{\u201couter airports\u201d,\u201dStansted\u201d}{\u201cmajor international airports\u201d,\u201cNarita International Airport\u201d}{\u201cnon-hub airports\u201d,\u201cWashington National (DCA)\u201d}{\u201cEuropean airports\u201d,\u201cRome Fiumicino\u201d}{\u201cEuropean airports\u201d,\u201cLondon Heathrow\u201d}{\u201chub airports\u201d,\u201cFrankfurt Main\u201d}{\u201chub airports\u201d,\u201cSFO\u201d}"</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the airport types that are generalizations of specific aiports'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'amphibianSuchAsAmphibian'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'amphibian'</domain><range>u'amphibian'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAmphibianSuchAsAmphibian'</inverse><seedInstances>u'{\u201cgiant amphibians\u201d,\u201cmetoposaurs\u201d}{\u201cforest-dependent amphibians\u201d,\u201cwoodland salamanders\u201d}{\u201clarval amphibians\u201d,\u201ctadpoles\u201d}{\u201cterrestrial amphibians\u201d,\u201ctoads\u201d}{\u201cpet amphibians\u201d,\u201cfrogs\u201d}{\u201cexotic amphibians\u201d,\u201cbullfrogs\u201d}{\u201cexotic amphibians\u201d,\u201dnewts\u201d}{\u201cbig amphibians\u201d,\u201cmarine toads\u201d}{\u201crare amphibians\u201d,\u201cSiskiyou Mountain\u201d}{\u201csalamanders\u201d,\u201dspotted salamander\u201d}{\u201csalamanders\u201d,\u201dCalifornia tiger salamander\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the amphibian types that are generalizations of specific amphibians'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'aquariumsSuchAsAquariums'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'aquarium'</domain><range>u'aquarium'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAquariumSuchAsAquarium'</inverse><seedInstances>u"{\u201cpublic aquariums\u201d,\u201cMonterey Bay Aquarium\u201d}{\u201cpublic aquariums\u201d,\u201dNew England Aquarium\u201d}{\u201cpublic aquariums\u201d,\u201dThe Singapore Under Water World\u201d}{\u201cpublic aquariums\u201d,\u201dHong Kong's Ocean Park\u201d}{\u201cpublic aquariums\u201d,\u201dthe Flint RiverQuarium\u201d}{\u201cpublic aquariums\u201d,\u201dLondon Aquarium\u201d}{\u201cpublic aquariums\u201d,\u201dThe Deep\u201d}{\u201cpublic aquariums\u201d,\u201dThe National Marine Aquarium\u201d}{\u201cmarine aquariums\u201d,\u201cfish-Only Tanks\u201d}{\u201cmarine aquariums\u201d,\u201cCoral-Only Tanks\u201d}"</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific aquarium types that are generalizations of aquariums'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'arachnidsSuchAsArachnids'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'arachnid'</domain><range>u'arachnid'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArachnidsSuchAsArachnides'</inverse><seedInstances>u'{\u201cblood sucking arachnids\u201d,\u201dmites\u201d}{\u201cblood sucking arachnids\u201d,\u201dticks\u201d}{\u201cpoisonous arachnids\u201d,\u201dblack widow spiders\u201d}{\u201cpoisonous arachnids\u201d,\u201dtarantulas\u201d}{\u201cpoisonous arachnids\u201d,\u201dscorpions\u201d}{\u201caraneae\u201d,\u201dLoxosceles\u201d}{\u201caraneae\u201d,\u201dLatrodectus orlycosids\u201d}{\u201cTarantulas\u201d,\u201cHapalotremus\u201d}{\u201cTarantulas\u201d,\u201dpink-toed treespiders\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific arachnid types that are generalizations of arachnids'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'archaeaSuchAsArchaea'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'archaea'</domain><range>u'archaea'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArchaeaSuchAsArchaea'</inverse><seedInstances>u'{\u201chalophilic archaea\u201d,\u201dHaloferax\u201d}{\u201chalophilic archaea\u201c,\u201dHaloarcula strains\u201d}{\u201cmesophilic archaea\u201d,\u201cmethanogens\u201d}{\u201cmethanobacterium\u201d,\u201cmethanobacterium thermoautotrophicum\u201d}{\u201cheterotrophic archaea\u201d,\u201chaloferax mediter-ranei\u201d}{\u201cnonmethanogenic archaea\u201d,\u201chalobacteria\u201d}{\u201cnonmethanogenic archaea\u201d,\u201carchaeoglobus\u201d}{\u201cacidophilic archaea\u201d,\u201csulfolobus acidocaldarius\u201d}{\u201cacidophilic archaea\u201d,\u201cmesophile ferroplasma acidarmanus\u201d}{\u201cacidophilic archaea\u201d,\u201csulfolobus spp.\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific archaea types that are generalizations of archaeas'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'architectsSuchAsArchitects'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'architect'</domain><range>u'architect'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArchitectsSuchAsArchitects'</inverse><seedInstances>u'{\u201cdeconstructivist architects\u201d,\u201czaha hadid\u201d}{\u201cdeconstructivist architects\u201d,\u201ccoop himmelb(l)au\u201d}{\u201crenowned architects\u201d,\u201drenzo piano\u201d}{\u201crenowned architects\u201d,\u201dLudwig mies van der rohe\u201d}{\u201chonolulu architects\u201d,\u201cc w dickey\u201c}{\u201chonolulu architects\u201d,\u201chart wood\u201d}{\u201chonolulu architects\u201d,\u201djohn kelly\u201d}{\u201ceuropean architects\u201d,\u201dle corbusier\u201d}{\u201ceuropean architects\u201d,\u201dwalter gropius\u201c}{\u201cafrican american architects\u201d,\u201dharvey gantt\u201d}{\u201cafrican american architects\u201d,\u201dmax bond\u201d}{\u201cafrican american architects\u201d,\u201drobert t coles\u201d}{\u201cafrican american architects\u201d,\u201ddonald stull\u201d}{\u201casian architects\u201d,\u201d\u201dshigeru ban\u201d}{\u201casian architects\u201d,\u201dkengo kuma\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific architect types that are generalizations of architects'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'arteriesSuchAsArteries'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'artery'</domain><range>u'artery'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'arteryCalledArtery'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfArterySuchAsArtery'</inverse><seedInstances>u'{\u201clarge arteries\u201d,\u201cthe thoracic aorta\u201d}{\u201csmall arteries\u201d,\u201cthe renal arteries\u201d}{\u201cmedium-sized arteries\u201d,\u201dcoronary arteries\u201d}{\u201cmedium-sized arteries\u201d,\u201dcarotid arteries\u201d}{\u201cmedium-sized arteries\u201d,\u201dcerebral arteries\u201d}{\u201chuman arteries\u201d,\u201dthoracic aorta\u201d}{\u201chuman arteries\u201d,\u201dfemoral\u201d}{\u201chuman arteries\u201d,\u201dbasilar\u201d}{\u201chuman arteries\u201d,\u201dcoronary\u201d}{\u201chuman arteries\u201d,\u201dradial\u201d}{\u201clarger arteries\u201d,\u201daxillary\u201d}{\u201clarger arteries\u201d,\u201dsubclavian\u201d}{\u201clarger arteries\u201d,\u201dpopliteal\u201d}{\u201clarger arteries\u201d,\u201dfemoral\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific artery types that are generalizations of arteries'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'astronautsSuchAsAustronauts'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'astronaut'</domain><range>u'astronaut'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAstronautSuchAsAstronaut'</inverse><seedInstances>u'{\u201cnotable astronauts\u201d,\u201dneil armstrong\u201d}{\u201cnotable astronauts\u201d,\u201deileen collins\u201d}{\u201cnotable astronauts\u201d,\u201dalan shepard\u201d}{\u201camerican astronauts\u201d,\u201cjohn glenn\u201d}{\u201camerican astronauts\u201d,\u201cneil armstrong\u201d}{\u201clegendary astronauts\u201d,\u201dbuzz aldrin\u201d}{\u201clegendary astronauts\u201d,\u201dhelen sharman\u201d}{\u201clegendary astronauts\u201d,\u201dmichael foale\u201d}{\u201cspace shuttle astronauts\u201d,\u201dsally ride\u201d}{\u201cspace shuttle astronauts\u201d,\u201djohn young\u201d}{\u201cspace shuttle astronauts\u201d,\u201dguion blufordand\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific astronaut types that are generalizations of astronauts'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'athletesSuchAsAthletes'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'athlete'</domain><range>u'athlete'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAthleteSuchAsAthlete'</inverse><seedInstances>u'{\u201cmarathon runners\u201d,\u201clornal kiplagat\u201d}{\u201cmarathon runners\u201d,\u201cgete wami\u201d}{\u201cbasketball players\u201d,\u201dkareem abdul-jabbar\u201d}{\u201cbasketball players\u201d,\u201dkevin garnett\u201d}{\u201cbasketball players\u201d,\u201dwilt chamberlain\u201d}{\u201cbasketball players\u201d,\u201dkobe bryant\u201d}{\u201cfootball players\u201d,\u201dwalter payton\u201d}{\u201cfootball players\u201d,\u201dbrett favre\u201d}{\u201cfootball players\u201d,\u201dernie davis\u201d}{\u201cfootball players\u201d,\u201deli manning\u201d}{\u201cbaseball players\u201d,\u201dpedro martinez\u201d}{\u201cbaseball players\u201d,\u201dbob lemon\u201d}{\u201cbaseball players\u201d,\u201djackie robinson\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific athlete types that are generalizations of athletes'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'touristAttractionSuchAsTouristAttraction'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'attraction'</domain><range>u'attraction'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfTouristAttraction'</inverse><seedInstances>u'{\u201chistoric tourist attraction\u201d,\u201dchurches\u201d}{\u201chistoric tourist attraction\u201d,\u201ccathedral\u201d}{\u201cbig tourist attraction\u201d,\u201csea world\u201d}{\u201cbig tourist attraction\u201d,\u201czoo\u201d}{\u201cbig tourist attraction\u201d,\u201clego land\u201d}{\u201cbig tourist attraction\u201d,\u201cedinburgh castle\u201d}{\u201cmajor tourist attraction\u201c,\u201dtemple of the reclining buddha\u201c}{\u201cmajor tourist attraction\u201c,\u201dgiant swing\u201d}{\u201cmajor tourist attraction\u201c,\u201dvimarnmek place\u201d}{\u201cexpensive tourist attractions\u201d,\u201dlondon eye\u201d}{\u201cexpensive tourist attractions\u201d,\u201dmadame tussauds\u201d}{\u201creligious tourist attractions\u201d,\u201csecred garden\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific tourist attraction types that are generalizations of tourist attractions'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'automobileEngineSuchAsAutomobileEngine'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'automobileEngine'</domain><range>u'automobileEngine'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAutomobileEngineSuchAsAutomobileEngine'</inverse><seedInstances>u'{\u201chigh performance automobile engines\u201d,\u201ccorvette engines\u201d}{\u201cv8 engines\u201c,\u201dchevy small block\u201c}{\u201cv8 engines\u201c,\u201dgm gen iiiI+ engines\u201d}{\u201cv6 engines\u201c,\u201d3.6 L LY7 V6\u201d}{\u201cford engines\u201c,\u201d351w\u201c}{\u201cford engines\u201c,\u201d351m/400\u201d}{\u201cford engines\u201c,\u201d390\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific automobile Engine types that are generalizations of automobile Engines'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'bookSuchAsBook'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'book'</domain><range>u'book'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfBookSuchAsBook'</inverse><seedInstances>u'{\u201cnovels\u201d,\u201cDeath in Venice\u201d}{\u201cpopular bestsellers\u201d,\u201cThe Da Vince Code\u201d}{\u201cthriller books\u201d,"Blood Red Rivers"}{\u201cromantic books\u201d,"Romeo and Juliet"}{\u201cclassic books\u201d,\u201dPride and Prejudice\u201d}{\u201cfiction books\u201d,\u201cA Door into Ocean\u201d}{\u201cscientific books\u201d,\u201dencyclopedias\u201d}{\u201cdrama books\u201d,\u201cThe Wonderful Wizard of Oz\u201d}{\u201chumor books\u201d,\u201cNever Eat Anything Bigger Than Your Head\u201d}}{\u201chumor books\u201d,\u201cTiny Footprints\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific book types that are generalizations of actors'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'celebritySuchAsCelebrity'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'celebrity'</domain><range>u'celebrity'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfCelebritySuchAsCelebrity'</inverse><seedInstances>u'{\u201cHollywood stars\u201d,\u201dGlen Campbell\u201d}{\u201cHollywood stars\u201d,\u201dCrystal Gayle\u201d}{\u201cglobal icons\u201d,\u201dPrincess Diana\u201d}{\u201cartists\u201d,\u201dElvis Presley\u201d}{\u201cartists\u201d,\u201cJohn Denver\u201d}{\u201cpop idols\u201d,\u201dBritney Spears\u201d}{\u201cpop idols\u201d,\u201cCharlotte Church\u201d}{\u201ciconic characters\u201d,\u201cJames Dean\u201d}{\u201ciconic characters\u201d,\u201cAllen Ginsburg\u201d}{\u201ccultural icons\u201d,\u201cOprah Winfrey\u201d}{\u201ccultural icons\u201d,\u201cDeepak Chopra\u201d}{\u201cfilm stars\u201d,\u201cAngelina Jolie\u201d}{\u201cfilm stars\u201d,\u201cDaniel Craig\u201d}{\u201ciconic film directors\u201d,\u201cJean-Jacques Annaud\u201d}{\u201ctelevision presenters\u201d,\u201dGordon Ramsay\u201d}{\u201ctelevision presenters\u201d,\u201cCharley Boorman\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific celebrity types that are generalizations of celebrities'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'mammalSuchAsMammal'</relationName><humanFormat>u'arg1 {is a generalization of} arg2 '</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'generalizationOf'</generalizations><domain>u'mammal'</domain><range>u'mammal'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfMammalSuchAsMammal'</inverse><seedInstances>u'{\u201cwild cats\u201d,\u201dtigers\u201d}{\u201cwild cats\u201d,\u201dlion\u201d}{\u201cbig cats\u201d,\u201dbobcats\u201d}{\u201cbig cats\u201d,\u201ccougars\u201d}{\u201cintelligent mammals\u201d,\u201dprimates\u201d}{\u201cterrestrial mammals\u201d,\u201dcaribou\u201d}{\u201ccanines\u201d,\u201cjackals\u201d}{\u201ccanines\u201d,\u201cwolves\u201d}{\u201cplacentals\u201d,\u201crodents\u201d}{\u201cplacentals\u201d,\u201chorses\u201d}{\u201cmarsupials\u201d,\u201ckangaroos\u201d}{\u201cmarsupials\u201d,\u201ckoala\u201d}'</seedInstances><seedExtractionPatterns>u'\u201carg1 such as arg2\u201d \u201carg1 include arg2\u201d \u201carg1 including arg2\u201d \u201carg2 and other arg1\u201d'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-03-06'</editDate><author>u'SubCatReader'</author><curator>u''</curator><description>u'Describes the specific actors types that are generalizations of actors'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'isTallerThan'</relationName><humanFormat>u'arg1 is {taller than} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'everyPromotedThing'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u':siblings'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'isShorterThan'</inverse><seedInstances>u'{\u201csears tower","empire state building\u201d}{\u201cempire state building\u201d,\u201dchrysler building\u201d}{\u201cgiraffe\u201d,\u201dostrich\u201d}{"eiffel tower","statue of liberty"}{"eiffel tower","washington monument"}{"empire state building","eiffel tower"}{"Kareem", "Shaq"}{"Wilt Chamberlain","Shaq"}{"oak tree","maple tree"}'</seedInstances><seedExtractionPatterns>u'"arg1 is taller than arg2","arg2 is shorter than arg1","arg1 is higher than arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 * is taller than * arg2'</queryString><editDate>u'2012-06-22'</editDate><author>u'Tom'</author><curator>u''</curator><description>u'Indicates that arg1 has a greater height than arg2'</description><freebaseID>u'none'</freebaseID><comment>u''</comment><relationName>u'zipcodeInLocation'</relationName><humanFormat>u'arg1 is the {zipcode} for arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'atLocation'</generalizations><domain>u'zipcode'</domain><range>u'location'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'locationInZipcode'</inverse><seedInstances>u'{\u201c80202\u201d, \u201cDenver\u201d} {\u201c19002\u201d, \u201cPA\u201d} {\u201c55416\u201d, \u201cMinneapolis\u201d} {\u201c33701\u201d, \u201cFlorida\u201d} {\u201c20505\u201d, \u201cCentral Intelligence Agency\u201d} {\u201c42223\u201d, \u201cChristian\u201d} {\u201c42223\u201d, \u201cMontgomery\u201d} {\u201c10001\u201d, \u201cNew York City\u201d} {\u201c19103\u201d, \u201cPhiladelphia\u201d} {\u201c33130\u201d, \u201cMiami\u201d} {\u201c77063\u201d, \u201cTexas\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2012-08-31'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Describes one or more locations to which a zipcode may correspond.'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'ObjectPartOfObject'</relationName><humanFormat>u'arg1{is part of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'visualizableObject'</domain><range>u'visualizableObject'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'ObjectContainsObject'</inverse><seedInstances>u'{"car","wheel"}{"person","foot"}{"aeroplane","wing"}{"computer","cpu"}{"building","door"}{"book","cover"}{"hostpital","doctor"}{"school","gymnasium"}{\u201cdesktop computer\u201d, "keyboard"}{"car", "windshield"}{"motorcycle", "kickstand"}{"ship","anchor"}{"camera","lens"}'</seedInstances><seedExtractionPatterns>u'"arg1 of a arg2"'</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-09-19'</editDate><author>u'Alan'</author><curator>u''</curator><description>u'meronym'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'ObjectFoundInScene'</relationName><humanFormat>u'arg1 {is found in} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'visualizableObject'</domain><range>u'visualizableScene'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'SceneContainsObject'</inverse><seedInstances>u'{"cow","pasture"}{"ferris wheel","amusement park"}{"zebra","savanna"}{"car","car dealership"}{"Eiffel Tower","Paris"}{"washing machine", "basement"}{"telescope","observatory"}{"excavator","excavation"}{"actor","portrait studio"}{"bull","bull ring"}{"bus","bus depot"}{"taj mahal", "agra"}{"chicken", "chicken farm"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-09-19'</editDate><author>u'Alan'</author><curator>u''</curator><description>u'Object found in scene (NEIL)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'ThingHasShape'</relationName><humanFormat>u'arg1 {has shape} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'visualizableThing'</domain><range>u'geometricShape'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'ShapeOfObject'</inverse><seedInstances>u'{"ball","round"}{"wheel","round"}{"clock","round"}{"honeycomb","hexagonal"}{"tent","dome"}{"alley","narrow"}{"cherry","round"}{"tent","cone"}{"football field","rectangle"}{"boxing ring","square"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-09-19'</editDate><author>u'Alan'</author><curator>u''</curator><description>u'Object has shape (NEIL)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'ThingHasColor'</relationName><humanFormat>u'arg1 {has color} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'visualizableThing'</domain><range>u'color'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan ColorOfObject'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'ColorOfObject'</inverse><seedInstances>u'{"tomato","red"}{"chocolate","brown"}{"polar bear","white"}{"cabbage","green"}{"cucumber","green"}{"sunflower","yellow"}{"alarm","red"}{"corn","gold"}{"tire","black"}{"star","yellow"}{"ocean","blue"}{"sky","blue"}{"football field","green"}{"lawn","green"}{"lava flow","red"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-09-19'</editDate><author>u'Alan'</author><curator>u''</curator><description>u'Object has color (NEIL)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'ObjectLooksLikeObject'</relationName><humanFormat>u'arg1 {looks like} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'visualizableThing'</domain><range>u'visualizableThing'</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'ObjectLooksLikeObject'</inverse><seedInstances>u'{"marc singer","kevin bacon"}{"tokyo tower","eiffel tower"}{"antelope","deer"}{"kettle","teapot"}{"monitor","television"}{"tram","bus"}{"easel","tripod"}{"bmw 320","bentley gt"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u'arg1 looks like arg2'</queryString><editDate>u'2013-09-19'</editDate><author>u'Alan'</author><curator>u''</curator><description>u'Object looks like (NEIL)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'academicFieldConcernsSubject'</relationName><humanFormat>u'arg1 {concerns} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'academicField'</domain><range>u'everyPromotedThing'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'academicProgramAtUniversity atDate atLocation economicSectorCompany generalizationOf issueOfPoliticsBill issueOfPoliticsGroup superpartOf isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'subjectConcernedByAcademicField'</inverse><seedInstances>u'{\u201cAstronomy\u201d, \u201cstars\u201d} {\u201cBiology\u201d, \u201corganisms\u201d} {\u201cBiology\u201d, \u201ctaxonomy\u201d} {\u201cComparative Literature\u201d, \u201cliterature\u201d} {\u201cComputer Science\u201d, \u201calgorithms\u201d} {\u201cEconomics\u201d, \u201cproduction\u201d} {\u201cGeology\u201d, \u201crocks\u201d} {\u201cHistory\u201d, \u201cthe past\u201d} {\u201cLinguistics\u201d, \u201clanguage\u201d} {\u201cMathematics\u201d, \u201cproofs\u201d} {\u201cPhysics\u201d, \u201cforces\u201d} {\u201cPsychology\u201d, \u201cbehavior\u201d} {\u201cSociology\u201d, \u201ccritical analysis\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-12-10'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Subjects of study within a given academic field'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'academicFieldHasSubfield'</relationName><humanFormat>u'arg2 is a {subfield} of arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'superpartOf academicFieldConcernsSubject'</generalizations><domain>u'academicField'</domain><range>u'academicField'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'subfieldOfAcademicField'</inverse><seedInstances>u'{\u201cAstronomy\u201d, \u201cObservational Astronomy\u201d} {\u201cAstronomy\u201d, \u201cTheoretical Astromony\u201d} {\u201cBiology\u201d, \u201cBioinformatics\u201d} {\u201cBiology\u201d, \u201cAnatomy\u201d} {\u201cComputer Science\u201d, \u201cApplied Computer Science\u201d} {\u201cComputer Science\u201d, \u201cArtificial Intelligence\u201d} {\u201cEconomics\u201d, \u201cMacroeconomics\u201d}  {\u201cEconomics\u201d, \u201cGame Theory\u201d} {\u201cGeology\u201d, \u201cMineralogy\u201d} {\u201cGeology\u201d, \u201cMeteorology\u201d} {\u201cHistory\u201d, \u201cMilitary History\u201d} {\u201cHistory\u201d, \u201cCultural History\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-12-10'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Subfields within a given academic field'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'academicFieldUsedByEconomicSector'</relationName><humanFormat>u'arg1 is an academic field {used in} the economic sector arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'academicField'</domain><range>u'economicSector'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'economicSectorUsingAcademicField'</inverse><seedInstances>u'{\u201cPsychology\u201d, \u201cadvertising\u201d} {\u201cPhysics\u201d, \u201caerospace\u201d} {\u201cGeology\u201d, \u201cagriculture\u201d} {\u201cBiology\u201d, \u201cbiotechnology\u201d} {\u201cComputer Science\u201d, \u201ccomputer software\u201d} {\u201cEconomics\u201d, \u201cfinancial services\u201d} {\u201cEconomics\u201d, \u201cinvestment banking\u201d} {\u201cEconomics\u201d, \u201cconsumer banking\u201d} {\u201cBiology\u201d, \u201cpharmaceuticals\u201d} {\u201cPhysics\u201d, \u201csemiconductors\u201d} {\u201cComputer Science\u201d, \u201cvideo games\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-12-10'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Academic fields used by economic fields'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'jobPositionUsesAcademicField'</relationName><humanFormat>u'arg2 is an academic field {useful for} the job position arg1'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'jobPosition'</domain><range>u'academicField'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'academicFieldUsedInJobPosition'</inverse><seedInstances>u'{\u201caccountant\u201d, \u201cEconomics\u201d} {\u201cmeteorologist\u201d, \u201cMeteorology\u201d} {\u201cphysician\u201d, \u201cBiology\u201d} {\u201cprogrammer\u201d, \u201cComputer Science\u201d} {\u201cphysicist\u201d, \u201cPhysics\u201d} {\u201chistorian\u201d, \u201cHistory\u201d} {\u201ccryptoanalyist\u201d, \u201cMathematics\u201d} {\u201cassistant treasurer\u201d, \u201cEconomics\u201d} {\u201cpsychologist\u201d, \u201cPsychology\u201d} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-12-10'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'Academic fields useful for job positions'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'personInAcademicField'</relationName><humanFormat>u'arg1 is {in the academic field} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'academicField'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personInEconomicSector isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'academicFieldHasPerson'</inverse><seedInstances>u'{\u201cAzophi\u201d, \u201cAstronomy\u201d} {\u201cCharles Darwin\u201d, \u201cBiology\u201d} {\u201cFyodor Buslaev\u201d, \u201cComparative Literature\u201d} {\u201cWilliam Cohen\u201d, \u201cComputer Science\u201d} {\u201cJohn Maynard Keynes\u201d, \u201cEconomics\u201d} {\u201cRachael Carson\u201d, \u201cEnvironmental Science\u201d} {\u201cJames Hutton\u201d, \u201cGeology\u201d} {\u201cHerodotus\u201d, \u201cHistory\u201d} {\u201cNoam Chomsky\u201d, \u201cLinguistics\u201d} {\u201cBlaise Pascal\u201d, \u201cMathematics\u201d}{\u201cPythagoras\u201d, \u201cPhilosophy\u201d} {\u201cEnrico Fermi\u201d, \u201cPhysics\u201d} {\u201cIvan Pavlov\u201d, \u201cPsychology\u201d} {\u201cKarl Marx\u201d, \u201cSociology\u201d} {\u201cAditya Parameswaran\u201d, \u201cData Management and Mining\u201d} {\u201cNoah Snavely\u201d, \u201cComputer Vision\u201d} {\u201cTuomas Sandholm\u201d, \u201cMarket Design\u201d} {\u201cTuomas Sandholm\u201d, \u201cGame Theory\u201d} {\u201cJamie Morgenstern\u201d, \u201cAlgorithmic Game Theory\u201d} {\u201cDan Stilwell\u201d, \u201cDecision and Control Theory\u201d} {\u201cEric Daimler\u201d, \u201cComputational Economics\u201d} {\u201cAdam Covington\u201d, \u201cFPGA Design\u201d} {\u201cMatei Zaharia\u201d, \u201cBig Data\u201d} {\u201cCarl Doersch\u201d, \u201cMachine Learning\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-12-10'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'People trained or active in a given academic field'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'personInEconomicSector'</relationName><humanFormat>u'arg1 {works in} the economic sector arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'economicSector'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'personInAcademicField isTallerThan isShorterThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'economicSectorHasPerson'</inverse><seedInstances>u'{\u201cSteve Ballmer\u201d, \u201ccomputer software\u201d} {\u201cFabrice Tourre\u201d, \u201cfinancial services\u201d} {\u201cStephani Kwolek\u201d, \u201cchemical industry\u201d} {\u201cSteve Wozniak\u201d, \u201ccomputer hardware\u201d} {\u201cAlbert Hofmann\u201d, \u201cpharmaceuticals\u201d} {\u201cEric Shmidt\u201d, \u201csearch\u201d} {\u201cJeff Bezos\u201d, \u201ccloud computing\u201d} {\u201cWarren Buffet\u201d, \u201cinvestment\u201d} {\u201cRichard Notebaet\u201d \u201ctelecommunications\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2013-12-10'</editDate><author>u'Bryan'</author><curator>u''</curator><description>u'People who work in a given economic sector'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'conceptPrerequisiteOf'</relationName><humanFormat>u'arg1 {is a prerequisite of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'scientificTerm'</domain><range>u'scientificTerm'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u'{"exponential distribution", "rejection sampling"}, {"Markov random fields", "Markov chain Monte Carlo"}, {"stochastic gradient descent", "Chain Rule"}, {"convex optimization", "Lagrange multipliers"}, {"ridge regression", "optimization problems"}, {"partial derivatives", "differential forms"}, {"optimization problems", "higher-order partial derivatives"}, {"Markov chain Monte Carlo", "importance sampling"}, {"CRP clustering", "latent Dirichlet allocation"}, {"higher-order partial derivatives", "random variables"}, {"Bayesian networks", "multivariate Gaussian distribution"}, {"differential forms", "partial derivatives"}, {"maximum likelihood", "gradient descent"}, {"maximum likelihood", "multivariate Gaussian distribution"}, {"Bellman equations", "Markov decision process (MDP)"}, {"exponential families", "Bayesian parameter estimation"}, {"sum-product on trees", "variable elimination"}, {"bases", "matrix multiplication"}, {"convex functions", "expectation and variance"}, {"matrix transpose", "matrix inverse"}, {"Lagrange multipliers", "spectral decomposition"}, {"Bayes net parameter learning", "Bayesian parameter estimation"}, {"gamma function", "expectation and variance"}, {"Metropolis-Hastings algorithm", "PDFs of functions of random variables"}, {"linear systems as matrices", "subspaces"}, {"deep belief networks", "backpropagation"}, {"functions of several variables", "dot product"}, {"Gaussian elimination", "matrix inverse"}, {"expectation and variance", "independent random variables"}, {"vector spaces", "matrix multiplication"}, {"independent random variables", "Gaussian distribution"}, {"exponential families", "mean field approximation"}, {"multivariate Gaussian distribution", "maximum likelihood"}, {"gradient", "optimization problems"}, {"binomial distribution", "multinomial coefficients"}, {"random variables", "gamma function"}, {"optimization problems", "Bayesian parameter estimation"}, {"optimization problems", "orthonormal bases"}, {"Bayes\' rule", "beta distribution"}, {"mean field approximation", "exponential families"}, {"Lagrange multipliers", "entropy"}, {"cross product", "partial derivatives"}, {"the support vector machine", "Langrange duality"}, {"logistic regression", "naive Bayes"}, {"matrix transpose", "higher-order partial derivatives"}, {"optimization problems", "eigenvalues and eigenvectors"}, {"multinomial coefficients", "binomial distribution"}, {"exponential families", "maximum likelihood"}, {"weak law of large numbers", "K nearest neighbors"}, {"Markov random fields", "optimization problems"}, {"Expectation-Maximization algorithm", "Bayes net parameter learning"}, {"Indian buffet process", "Dirichlet process"}, {"mixture of Gaussians models", "maximum likelihood: multivariate Gaussians"}, {"Expectation-Maximization algorithm", "k-means"}, {"multivariate Gaussian distribution", "Bayesian networks"}, {"probabilistic PCA", "Bayesian parameter estimation: multivariate Gaussians"}, {"fitting logistic regression with iterative reweighted least squares", "the Laplace approximation"}, {"Viterbi algorithm", "sum-product on trees"}, {"maximum likelihood", "generalization"}, {"Lagrange multipliers", "convex optimization"}, {"probabilistic Latent Semantic Analysis", "Bayesian parameter estimation: multinomial distribution"}, {"Markov and Chebyshev inequalities", "independent random variables"}, {"CRP clustering", "factor analysis"}, {"generalization", "backpropagation"}, {"binary linear classifiers", "optimization problems"}, {"Bayesian parameter estimation: multivariate Gaussians", "variational Bayes"}, {"basis function expansions", "positive definite matrices"}, {"linear regression as maximum likelihood", "binary linear classifiers"}, {"dot product", "vector fields"}, {"loopy belief propagation", "variational inference"}, {"Markov and Chebyshev inequalities", "moment generating functions"}, {"MAP parameter estimation", "Taylor approximations"}, {"maximum likelihood: multivariate Gaussians", "mixture of Gaussians models"}, {"matrix inverse", "matrix transpose"}, {"expectation and variance", "conditional distributions"}, {"Bayesian networks", "restricted Boltzmann machines"}, {"independent random variables", "expectation and variance"}, {"Bayesian networks", "Markov random fields"}, {"Gaussian discriminant analysis", "naive Bayes"}, {"probabilistic PCA", "Gibbs sampling"}, {"surface integrals", "line integrals"}, {"evaluating multiple integrals: polar coordinates", "determinant"}, {"Indian buffet process", "factor analysis"}, {"evaluating multiple integrals: polar coordinates", "linear approximation"}, {"max-product on trees", "sum-product on trees"}, {"gradient descent", "probit function"}, {"maximum likelihood", "KL divergence"}, {"Metropolis-Hastings algorithm", "gradient descent"}, {"multivariate Gaussian distribution", "the kernel trick"}, {"orthonormal bases", "maximum likelihood"}, {"matrix transpose", "subspaces"}, {"Bayesian parameter estimation: multinomial distribution", "probabilistic Latent Semantic Analysis"}, {"heavy-tailed distributions", "principal component analysis"}, {"Gaussian distribution", "matrix inverse"}, {"mixture of Gaussians models", "maximum likelihood"}, {"generalization", "independent events"}, {"bases", "matrix inverse"}, {"maximum likelihood", "exponential families"}, {"gradient descent", "optimization problems"}, {"factor graphs", "inference in MRFs"}, {"evaluating multiple integrals: change of variables", "differential forms"}, {"determinant", "gamma distribution"}, {"probability", "k-means"}, {"random variables", "independent events"}, {"expectation and variance", "matrix inverse"}, {"decision trees", "generalization"}, {"importance sampling", "Markov chain Monte Carlo"}, {"matrix inverse", "backpropagation"}, {"Markov chain Monte Carlo", "multivariate Gaussian distribution"}, {"Metropolis-Hastings algorithm", "Gibbs sampling"}, {"orthogonal subspaces", "matrix inverse"}, {"optimization problems", "Bayesian networks"}, {"Kalman smoother", "forward-backward algorithm"}, {"generalization", "naive Bayes"}, {"principal component analysis", "Lagrange multipliers"}, {"convex optimization", "binary linear classifiers"}, {"Kalman smoother", "Expectation-Maximization algorithm"}, {"feed-forward neural nets", "deep belief networks"}, {"Chain Rule", "exterior derivative"}, {"Markov random fields", "Bayes net structure learning"}, {"backpropagation", "deep belief networks"}, {"matrix inverse", "conditional distributions"}, {"optimization problems", "independent random variables"}, {"conditional distributions", "expectation and variance"}, {"the kernel trick", "SVM optimality conditions"}, {"matrix multiplication", "conditional independence"}, {"sum-product on trees", "mean field approximation"}, {"MAP parameter estimation", "multivariate Gaussian distribution"}, {"Expectation-Maximization algorithm", "variational Bayes"}, {"naive Bayes", "Bayesian parameter estimation: multinomial distribution"}, {"gamma distribution", "Bayesian parameter estimation"}, {"expectation and variance", "conditional probability"}, {"expectation and variance", "optimization problems"}, {"Bayesian logistic regression", "Gaussian process regression"}, {"rejection sampling", "exponential distribution"}, {"maximum likelihood", "Markov random fields"}, {"partial derivatives", "dot product"}, {"independent events", "random variables"}, {"Dirichlet process", "agglomerative clustering"}, {"Gaussian distribution", "binomial distribution"}, {"Gaussian variable elimination", "Cholesky decomposition"}, {"binary linear classifiers", "linear regression as maximum likelihood"}, {"higher-order partial derivatives", "matrix transpose"}, {"Indian buffet process", "collapsed Gibbs sampling"}, {"Lagrange multipliers", "principal component analysis"}, {"Dirichlet process", "Chinese restaurant franchise"}, {"linear least squares", "linear regression"}, {"functions of several variables", "vectors"}, {"sum-product on trees", "max-product on trees"}, {"gamma function", "multinomial distribution"}, {"partial derivatives", "vector fields"}, {"latent Dirichlet allocation", "CRP clustering"}, {"linear regression", "maximum likelihood"}, {"covariance matrices", "singular value decomposition"}, {"Gibbs sampling", "Metropolis-Hastings algorithm"}, {"optimization problems", "inference in MRFs"}, {"inference in MRFs", "optimization problems"}, {"the evidence approximation", "probabilistic PCA"}, {"Chinese restaurant process", "collapsed Gibbs sampling"}, {"matrix multiplication", "vector spaces"}, {"dot product", "linear systems as matrices"}, {"linear systems as matrices", "cross product"}, {"mixture of Gaussians models", "Bayesian parameter estimation"}, {"logistic regression", "gradient descent"}, {"conditional probability", "expectation and variance"}, {"optimization problems", "binary linear classifiers"}, {"gamma function", "random variables"}, {"Bayesian parameter estimation: multinomial distribution", "Bayesian parameter estimation: multivariate Gaussians"}, {"principal component analysis", "variational characterization of eigenvalues"}, {"conditional distributions", "Monte Carlo estimation"}, {"Bayesian model comparison", "Bayesian estimation of Bayes net parameters"}, {"positive definite matrices", "convex sets"}, {"generalization", "unions of events"}, {"beta distribution", "conditional distributions"}, {"cumulative distribution function", "Gaussian distribution"}'</knownNegatives><inverse>u'conceptHasPrerequisite'</inverse><seedInstances>u'{"maximum likelihood", "maximum likelihood: multivariate Gaussians"}, {"multivariate Gaussian distribution", "maximum likelihood: multivariate Gaussians"}, {"optimization problems", "maximum likelihood: multivariate Gaussians"}, {"mean field approximation", "structured mean field"}, {"inference in MRFs", "structured mean field"}, {"sum-product on trees", "structured mean field"}, {"Kalman smoother", "Kalman smoothing as forward-backward"}, {"forward-backward algorithm", "Kalman smoothing as forward-backward"}, {"Gaussian distribution", "multivariate Gaussian distribution"}, {"covariance", "multivariate Gaussian distribution"}, {"covariance matrices", "multivariate Gaussian distribution"}, {"determinant", "multivariate Gaussian distribution"}, {"matrix inverse", "multivariate Gaussian distribution"}, {"principal component analysis", "principal component analysis (proof)"}, {"variational characterization of eigenvalues", "principal component analysis (proof)"}, {"Hopfield networks", "Boltzmann machines"}, {"maximum likelihood", "Boltzmann machines"}, {"gradient", "Boltzmann machines"}, {"Gibbs sampling", "Boltzmann machines"}, {"orthonormal bases", "singular value decomposition"}, {"matrix multiplication", "singular value decomposition"}, {"matrix transpose", "singular value decomposition"}, {"spectral decomposition", "singular value decomposition"}, {"positive definite matrices", "singular value decomposition"}, {"four fundamental subspaces", "singular value decomposition"}, {"column space and nullspace", "four fundamental subspaces"}, {"subspaces", "four fundamental subspaces"}, {"bases", "four fundamental subspaces"}, {"Gaussian elimination", "four fundamental subspaces"}, {"matrix transpose", "four fundamental subspaces"}, {"LU factorization", "Cholesky decomposition"}, {"positive definite matrices", "Cholesky decomposition"}, {"expectation and variance", "entropy"}, {"conditional distributions", "entropy"}, {"independent random variables", "entropy"}, {"optimization problems", "entropy"}, {"complex numbers", "roots of polynomials"}, {"mixture of Gaussians models", "CRP clustering"}, {"Bayesian parameter estimation", "CRP clustering"}, {"Chinese restaurant process", "CRP clustering"}, {"collapsed Gibbs sampling", "CRP clustering"}, {"random variables", "conditional distributions"}, {"multivariate distributions", "conditional distributions"}, {"conditional probability", "conditional distributions"}, {"Gibbs sampling", "collapsed Gibbs sampling"}, {"MCMC convergence", "collapsed Gibbs sampling"}, {"multivariate distributions", "collapsed Gibbs sampling"}, {"expectation and variance", "covariance"}, {"multivariate distributions", "covariance"}, {"independent random variables", "covariance"}, {"Bayesian model comparison", "the evidence approximation"}, {"optimization problems", "the evidence approximation"}, {"variational Bayes", "variational mixture of Gaussians"}, {"mixture of Gaussians models", "variational mixture of Gaussians"}, {"Bayesian parameter estimation: multivariate Gaussians", "variational mixture of Gaussians"}, {"Bayesian parameter estimation: multinomial distribution", "variational mixture of Gaussians"}, {"linear regression", "LASSO"}, {"optimization problems", "LASSO"}, {"ridge regression", "LASSO"}, {"higher-order partial derivatives", "Taylor approximations"}, {"matrix transpose", "Taylor approximations"}, {"functions of several variables", "vector fields"}, {"vectors", "vector fields"}, {"cross product", "parameterizing lines and planes"}, {"dot product", "parameterizing lines and planes"}, {"linear systems as matrices", "parameterizing lines and planes"}, {"Monte Carlo estimation", "importance sampling"}, {"conditional distributions", "importance sampling"}, {"partial derivatives", "Chain Rule"}, {"linear approximation", "Chain Rule"}, {"matrix multiplication", "Chain Rule"}, {"Gaussian distribution", "Central Limit Theorem"}, {"independent random variables", "Central Limit Theorem"}, {"expectation and variance", "Central Limit Theorem"}, {"moment generating functions", "Central Limit Theorem"}, {"expectation and variance", "conditional expectation"}, {"conditional distributions", "conditional expectation"}, {"hidden Markov models", "Baum-Welch algorithm"}, {"Expectation-Maximization algorithm", "Baum-Welch algorithm"}, {"forward-backward algorithm", "Baum-Welch algorithm"}, {"multivariate Gaussian distribution", "linear-Gaussian models"}, {"Bayesian networks", "linear-Gaussian models"}, {"bases", "change of basis"}, {"linear transformations as matrices", "change of basis"}, {"matrix multiplication", "change of basis"}, {"matrix inverse", "change of basis"}, {"vector spaces", "change of basis"}, {"conditional probability", "Bayes\' rule"}, {"Bayesian parameter estimation", "variational Bayes"}, {"Bayesian model comparison", "variational Bayes"}, {"mean field approximation", "variational Bayes"}, {"Expectation-Maximization algorithm", "variational interpretation of EM"}, {"maximum likelihood", "variational interpretation of EM"}, {"KL divergence", "variational interpretation of EM"}, {"Jensen\'s inequality", "variational interpretation of EM"}, {"optimization problems", "variational interpretation of EM"}, {"matrix multiplication", "diagonalization"}, {"matrix inverse", "diagonalization"}, {"eigenvalues and eigenvectors", "diagonalization"}, {"bases", "diagonalization"}, {"random variables", "multivariate CDF"}, {"multiple integrals", "multivariate CDF"}, {"cumulative distribution function", "multivariate CDF"}, {"higher-order partial derivatives", "multivariate CDF"}, {"eigenvalues and eigenvectors", "multiplicity of eigenvalues"}, {"roots of polynomials", "multiplicity of eigenvalues"}, {"weight decay in neural networks", "soft weight sharing in neural nets"}, {"mixture of Gaussians models", "soft weight sharing in neural nets"}, {"optimization problems", "Lagrange multipliers"}, {"partial derivatives", "Lagrange multipliers"}, {"gradient", "Lagrange multipliers"}, {"Bayesian model comparison", "Bayesian model averaging"}, {"learning invariances in neural nets", "Tikhonov regularization"}, {"Gibbs sampling", "Gibbs sampling as a special case of Metropolis-Hastings"}, {"Metropolis-Hastings algorithm", "Gibbs sampling as a special case of Metropolis-Hastings"}, {"AdaBoost", "boosting as optimization"}, {"optimization problems", "boosting as optimization"}, {"basis function expansions", "boosting as optimization"}, {"linear regression", "linear regression: closed-form solution"}, {"linear least squares", "linear regression: closed-form solution"}, {"principal component analysis", "probabilistic PCA"}, {"computations on multivariate Gaussians", "probabilistic PCA"}, {"maximum likelihood", "probabilistic PCA"}, {"principal component analysis (proof", "probabilistic PCA)"}, {"optimization problems", "probabilistic PCA"}, {"Bayes net parameter learning", "learning Bayes net parameters with missing data"}, {"Expectation-Maximization algorithm", "learning Bayes net parameters with missing data"}, {"maximum likelihood", "learning Bayes net parameters with missing data"}, {"inference in MRFs", "learning Bayes net parameters with missing data"}, {"Gaussian distribution", "heavy-tailed distributions"}, {"Student-t distribution", "heavy-tailed distributions"}, {"expectation and variance", "heavy-tailed distributions"}, {"probabilistic PCA", "Bayesian PCA"}, {"Bayesian linear regression", "Bayesian PCA"}, {"the evidence approximation", "Bayesian PCA"}, {"Bayesian parameter estimation: multivariate Gaussians", "Bayesian PCA"}, {"the Laplace approximation", "Bayesian PCA"}, {"column space and nullspace", "computing the nullspace"}, {"Gaussian elimination", "computing the nullspace"}, {"probabilistic Latent Semantic Analysis", "latent Dirichlet allocation"}, {"Bayesian parameter estimation: multinomial distribution", "latent Dirichlet allocation"}, {"constructing kernels", "Fisher kernel"}, {"Fisher information matrix", "Fisher kernel"}, {"vectors", "parametric curves"}, {"random variables", "binomial distribution"}, {"independent events", "binomial distribution"}, {"expectation and variance", "binomial distribution"}, {"matrix inverse", "computing matrix inverses"}, {"Gaussian elimination", "computing matrix inverses"}, {"random variables", "hidden Markov models"}, {"Markov chains", "hidden Markov models"}, {"matrix multiplication", "hidden Markov models"}, {"conditional distributions", "hidden Markov models"}, {"conditional independence", "hidden Markov models"}, {"Bayesian networks", "hidden Markov models"}, {"Bayesian parameter estimation", "Bayesian parameter estimation: multinomial distribution"}, {"multinomial distribution", "Bayesian parameter estimation: multinomial distribution"}, {"backpropagation", "early stopping"}, {"generalization", "early stopping"}, {"differential forms", "exterior derivative"}, {"partial derivatives", "exterior derivative"}, {"partial derivatives", "linear approximation"}, {"dot product", "linear approximation"}, {"limits and continuity in R^n", "linear approximation"}, {"vectors", "convex sets"}, {"dot product", "convex sets"}, {"information form for multivariate Gaussians", "Gaussian MRFs"}, {"Markov random fields", "Gaussian MRFs"}, {"vectors", "topology of R^n"}, {"latent semantic analysis", "probabilistic Latent Semantic Analysis"}, {"maximum likelihood", "probabilistic Latent Semantic Analysis"}, {"optimization problems", "probabilistic Latent Semantic Analysis"}, {"Metropolis-Hastings algorithm", "Hamiltonian Monte Carlo"}, {"gradient descent", "Hamiltonian Monte Carlo"}, {"Fisher information", "Cramer-Rao bound"}, {"covariance", "Cramer-Rao bound"}, {"partial derivatives", "Cramer-Rao bound"}, {"probability", "conditional probability"}, {"hidden Markov models", "particle filter"}, {"Monte Carlo estimation", "particle filter"}, {"importance sampling", "particle filter"}, {"conditional distributions", "particle filter"}, {"Bayesian parameter estimation", "probabilistic matrix factorization"}, {"probabilistic PCA", "probabilistic matrix factorization"}, {"Gibbs sampling", "probabilistic matrix factorization"}, {"computations on multivariate Gaussians", "probabilistic matrix factorization"}, {"differential forms", "pullback"}, {"exterior derivative", "pullback"}, {"Chain Rule", "pullback"}, {"evaluating multiple integrals: change of variables", "pullback"}, {"maximum likelihood", "Akaike information criterion"}, {"generalization", "Akaike information criterion"}, {"KL divergence", "Akaike information criterion"}, {"random variables", "sufficient statistics"}, {"conditional distributions", "sufficient statistics"}, {"binary linear classifiers", "VC dimension"}, {"Bayes\' rule", "Bayesian parameter estimation"}, {"beta distribution", "Bayesian parameter estimation"}, {"conditional distributions", "Bayesian parameter estimation"}, {"multivariate distributions", "Bayesian parameter estimation"}, {"expectation and variance", "Bayesian parameter estimation"}, {"linear dynamical systems", "Kalman filter"}, {"multivariate distributions", "Kalman filter"}, {"conditional distributions", "Kalman filter"}, {"computations on multivariate Gaussians", "Kalman filter"}, {"value iteration", "policy iteration"}, {"Bellman equations", "policy iteration"}, {"K nearest neighbors", "the curse of dimensionality"}, {"weak law of large numbers", "the curse of dimensionality"}, {"random variables", "beta distribution"}, {"expectation and variance", "beta distribution"}, {"gamma function", "beta distribution"}, {"evaluating multiple integrals: polar coordinates", "evaluating multiple integrals: change of variables"}, {"determinant", "evaluating multiple integrals: change of variables"}, {"linear approximation", "evaluating multiple integrals: change of variables"}, {"mean field approximation", "variational inference and exponential families"}, {"exponential families", "variational inference and exponential families"}, {"probability", "independent events"}, {"conditional probability", "independent events"}, {"linear regression", "binary linear classifiers"}, {"Markov random fields", "conditional random fields"}, {"vector spaces", "inner product"}, {"dot product", "inner product"}, {"linear regression", "bias-variance decomposition"}, {"linear regression: closed-form solution", "bias-variance decomposition"}, {"generalization", "bias-variance decomposition"}, {"entropy", "differential entropy"}, {"mutual information", "differential entropy"}, {"KL divergence", "differential entropy"}, {"expectation and variance", "differential entropy"}, {"Gaussian distribution", "differential entropy"}, {"linear regression as maximum likelihood", "Bayesian linear regression"}, {"Bayesian parameter estimation", "Bayesian linear regression"}, {"Bayesian parameter estimation: multivariate Gaussians", "Bayesian linear regression"}, {"computations on multivariate Gaussians", "Bayesian linear regression"}, {"positive definite matrices", "Schur product theorem"}, {"random variables", "PDFs of functions of random variables"}, {"multivariate distributions", "PDFs of functions of random variables"}, {"determinant", "PDFs of functions of random variables"}, {"linear approximation", "PDFs of functions of random variables"}, {"generalization", "PAC learning"}, {"unions of events", "PAC learning"}, {"independent events", "PAC learning"}, {"Chernoff bounds", "PAC learning"}, {"orthonormal bases", "QR decomposition"}, {"backpropagation", "learning invariances in neural nets"}, {"generalization", "learning invariances in neural nets"}, {"binary linear classifiers", "naive Bayes"}, {"maximum likelihood", "naive Bayes"}, {"optimization problems", "naive Bayes"}, {"the support vector machine", "support vector regression"}, {"linear regression", "support vector regression"}, {"SVM optimality conditions", "support vector regression"}, {"Gaussian distribution", "comparing normal populations"}, {"statistical hypothesis testing", "comparing normal populations"}, {"Student-t distribution", "comparing normal populations"}, {"expectation and variance", "comparing normal populations"}, {"d-separation", "Bayes Ball"}, {"Dirichlet distribution", "Chinese restaurant process"}, {"multinomial distribution", "Chinese restaurant process"}, {"gamma function", "Chinese restaurant process"}, {"mixture of Gaussians models", "comparing Gaussian mixtures and k-means"}, {"k-means", "comparing Gaussian mixtures and k-means"}, {"Expectation-Maximization algorithm", "comparing Gaussian mixtures and k-means"}, {"the support vector machine", "SVM optimality conditions"}, {"Langrange duality", "SVM optimality conditions"}, {"KKT conditions", "SVM optimality conditions"}, {"multidimensional scaling", "Isomap"}, {"precision and recall", "F measure"}, {"expectation and variance", "the bootstrap"}, {"Monte Carlo estimation", "the bootstrap"}, {"decision trees", "bagging"}, {"generalization", "bagging"}, {"Markov random fields", "factor graphs"}, {"Markov random fields", "inference in MRFs"}, {"linear approximation", "gradient"}, {"partial derivatives", "gradient"}, {"dot product", "gradient"}, {"functions of several variables", "gradient"}, {"partial derivatives", "higher-order partial derivatives"}, {"linear approximation", "higher-order partial derivatives"}, {"subspaces", "column space and nullspace"}, {"linear systems as matrices", "column space and nullspace"}, {"independent random variables", "strong law of large numbers"}, {"expectation and variance", "strong law of large numbers"}, {"weak law of large numbers", "strong law of large numbers"}, {"Monte Carlo estimation", "rejection sampling"}, {"conditional distributions", "rejection sampling"}, {"Bayesian parameter estimation: multinomial distribution", "Bayesian naive Bayes"}, {"naive Bayes", "Bayesian naive Bayes"}, {"hidden Markov models", "forward-backward algorithm"}, {"multivariate distributions", "forward-backward algorithm"}, {"conditional independence", "forward-backward algorithm"}, {"random variables", "Gaussian distribution"}, {"expectation and variance", "Gaussian distribution"}, {"linear systems as matrices", "linear least squares"}, {"projection onto a subspace", "linear least squares"}, {"matrix transpose", "linear least squares"}, {"partial derivatives", "linear least squares"}, {"four fundamental subspaces", "linear least squares"}, {"vectors", "subspaces"}, {"Kalman filter", "Kalman filter derivation"}, {"computations on multivariate Gaussians", "Kalman filter derivation"}, {"probability", "expectimax search"}, {"expectation and variance", "expectimax search"}, {"the kernel trick", "kernel ridge regression"}, {"ridge regression", "kernel ridge regression"}, {"random variables", "Bayesian networks"}, {"conditional independence", "Bayesian networks"}, {"Bayes\' rule", "Bayesian networks"}, {"spectral decomposition", "variational characterization of eigenvalues"}, {"eigenvalues and eigenvectors", "variational characterization of eigenvalues"}, {"Lagrange multipliers", "variational characterization of eigenvalues"}, {"ridge regression", "ridge regression as SVD"}, {"singular value decomposition", "ridge regression as SVD"}, {"exponential families", "generalized linear models"}, {"maximum likelihood", "generalized linear models"}, {"optimization problems", "generalized linear models"}, {"linear regression as maximum likelihood", "generalized linear models"}, {"gradient descent", "generalized linear models"}, {"multivariate Gaussian distribution", "von Mises distribution"}, {"conditional distributions", "von Mises distribution"}, {"maximum likelihood", "von Mises distribution"}, {"loopy belief propagation", "loopy BP as variational inference"}, {"variational inference", "loopy BP as variational inference"}, {"Lagrange multipliers", "loopy BP as variational inference"}, {"Markov chain Monte Carlo", "MCMC convergence"}, {"covariance", "MCMC convergence"}, {"optimization problems", "multidimensional scaling"}, {"Gaussian processes", "Gaussian process regression"}, {"Bayesian linear regression", "Gaussian process regression"}, {"entropy", "mutual information"}, {"independent random variables", "mutual information"}, {"conditional distributions", "mutual information"}, {"Bayesian parameter estimation", "Bayesian decision theory"}, {"expectation and variance", "Bayesian decision theory"}, {"loss function", "Bayesian decision theory"}, {"Bayesian logistic regression", "variational logistic regression"}, {"variational Bayes", "variational logistic regression"}, {"multiple integrals", "Riemann integral"}, {"matrix transpose", "spectral decomposition"}, {"orthonormal bases", "spectral decomposition"}, {"change of basis", "spectral decomposition"}, {"matrix inverse", "spectral decomposition"}, {"eigenvalues and eigenvectors", "spectral decomposition"}, {"dot product", "matrix multiplication"}, {"SVM optimality conditions", "sequential minimal optimization"}, {"surface integrals", "Divergence Theorem"}, {"partial derivatives", "Divergence Theorem"}, {"multiple integrals", "Divergence Theorem"}, {"Gaussian variable elimination", "Gaussian variable elimination as Gaussian elimination"}, {"Gaussian elimination", "Gaussian variable elimination as Gaussian elimination"}, {"Cholesky decomposition", "Gaussian variable elimination as Gaussian elimination"}, {"random variables", "multivariate distributions"}, {"multiple integrals", "multivariate distributions"}, {"projection onto a subspace", "Fisher\'s linear discriminant"}, {"Gaussian discriminant analysis", "Fisher\'s linear discriminant"}, {"eigenvalues and eigenvectors", "Fisher\'s linear discriminant"}, {"optimization problems", "Fisher\'s linear discriminant"}, {"covariance matrices", "Fisher\'s linear discriminant"}, {"the kernel trick", "constructing kernels"}, {"basis function expansions", "feed-forward neural nets"}, {"optimization problems", "convex optimization"}, {"convex sets", "convex optimization"}, {"convex functions", "convex optimization"}, {"gradient", "convex optimization"}, {"Gibbs sampling", "slice sampling"}, {"Metropolis-Hastings algorithm", "slice sampling"}, {"Bayesian networks", "converting between graphical models"}, {"d-separation", "converting between graphical models"}, {"Markov random fields", "converting between graphical models"}, {"Bayesian networks", "d-separation"}, {"conditional independence", "d-separation"}, {"independent random variables", "Chernoff bounds"}, {"moment generating functions", "Chernoff bounds"}, {"Markov and Chebyshev inequalities", "Chernoff bounds"}, {"multivariate Gaussian distribution", "computations on multivariate Gaussians"}, {"conditional distributions", "computations on multivariate Gaussians"}, {"multivariate distributions", "computations on multivariate Gaussians"}, {"matrix inverse", "computations on multivariate Gaussians"}, {"covariance matrices", "computations on multivariate Gaussians"}, {"maximum likelihood", "Bayes net parameter learning"}, {"Bayesian networks", "Bayes net parameter learning"}, {"optimization problems", "Bayes net parameter learning"}, {"maximum likelihood", "maximum likelihood in exponential families"}, {"exponential families", "maximum likelihood in exponential families"}, {"optimization problems", "maximum likelihood in exponential families"}, {"Gaussian process regression", "Gaussian process classification"}, {"Bayesian logistic regression", "Gaussian process classification"}, {"factor analysis", "IBP linear-Gaussian model"}, {"Indian buffet process", "IBP linear-Gaussian model"}, {"CRP clustering", "IBP linear-Gaussian model"}, {"collapsed Gibbs sampling", "IBP linear-Gaussian model"}, {"probability", "random variables"}, {"variational Bayes", "variational Bayes EM"}, {"Expectation-Maximization algorithm", "variational Bayes EM"}, {"variational interpretation of EM", "variational Bayes EM"}, {"maximum likelihood", "sparse coding"}, {"matrix multiplication", "sparse coding"}, {"heavy-tailed distributions", "sparse coding"}, {"optimization problems", "sparse coding"}, {"the kernel trick", "Gaussian processes"}, {"multivariate Gaussian distribution", "Gaussian processes"}, {"VC dimension", "structural risk minimization"}, {"multivariate Gaussian distribution", "information form for multivariate Gaussians"}, {"Gaussian MRFs", "Gaussian BP on trees"}, {"computations on multivariate Gaussians", "Gaussian BP on trees"}, {"sum-product on trees", "Gaussian BP on trees"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-25-03'</editDate><author>u'Partha'</author><curator>u''</curator><description>u'Prerequisite relationship between scientific terms (currently biased towards ML and AI areas)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'officeBuildingRoomInBuilding'</relationName><humanFormat>u'arg1 {is a room in the building} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'officeBuildingRoom'</domain><range>u'building'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'buildingHasOfficeBuildingRoom'</inverse><seedInstances>u'{\u201c6115\u201d, \u201cGates &amp; Hilman Centers\u201d} {\u201c7501\u201d, \u201cGates and Hillman Centers\u201d} {\u201cRashid Auditorium 4401\u201d, \u201cGates and Hillman Centers\u201d} {\u201cMauldin Auditorium\u201d, \u201cNewell-Simon Hall\u201d} {\u201c7500\u201d, \u201cWean Hall\u201d} {\u201c1212\u201d, \u201cDoherty Hall\u201d} {\u201cRoom 1495\u201d, \u201cBiomedical Science Tower\u201d} {\u201cConference Room\u201d, \u201cMellon Institute\u201d} {\u201cKresge Theatre\u201d, \u201cCollege of Fine Arts\u201d} {\u201cReddy Conference Room 4405\u201d, \u201cGates and Hillman Centers\u201d} {\u201cSocial Room 328\u201d, \u201cMellon Institute\u201d} {\u201c1507\u201d, \u201cNewell-Simon Hall\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-04-25'</editDate><author>u'Aasish (via Bryan)'</author><curator>u''</curator><description>u'Which office-style building a particular room is found in'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'buildingBelongsToOrganization'</relationName><humanFormat>u'arg1 {is a building belonging to} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'locationActedInByOrganization'</generalizations><domain>u'building'</domain><range>u'organization'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'stadiumHomeToLeague stadiumHomeTeam'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'organizationHasBuilding'</inverse><seedInstances>u'{\u201cGates &amp; Hillman Centers\u201d, \u201cCMU\u201d} {\u201cGates and Hillman Centers\u201d, \u201cCMU\u201d} {\u201cNewell-Simon Hall\u201d, \u201cCMU\u201d} {\u201cWean Hall\u201d, \u201cCMU\u201d} {\u201cDoherty Hall\u201d, \u201cCMU\u201d} {\u201cBohannon Hall\u201d, \u201cUMD\u201d} {\u201cAtwell Hall\u201d, \u201cOSU\u201d} {\u201cHayden Memorial Library\u201d, \u201cMIT\u201d} {\u201cDodd Hall\u201d, \u201cUCLA\u201d} {\u201cAbelson Hall\u201d, \u201cWSU\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-04-25'</editDate><author>u'Aasish (via Bryan)'</author><curator>u''</curator><description>u'Which organization a building belongs to'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'meetingEventTitleHasMeetingEventType'</relationName><humanFormat>u'arg1 is {part of} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'relatedTo'</generalizations><domain>u'meetingEventTitle'</domain><range>u'meetingEventType'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'meetingEventTypeIncludesMeetingEventTitle'</inverse><seedInstances>u"{\u201cHuman Powered Data Management\u201d, \u201cSCS Faculty Candidate\u201d} {\u201cRobot Futures\u201d, \u201cSCS Author Presentation &amp; Booksigning\u201d} {\u201cFinding Needles in Exponential Haystacks\u201d, \u201cMath Colloquium\u201d} {\u201cObject Storage\u201d, \u201cSpecial SDI Seminar\u201d} {\u201cRSA in the Real World\u201d, \u201cSCS Faculty Candidate\u201d} {\u201cOptimizing Password Composition Policies\u201d, \u201cTheory Lunch Seminar\u201d} {\u201cCalibrating the World's Photos with a Massive 3D Database\u201d, \u201cVASC Sminar\u201d} {\u201cModern Dynamic Kidney Exchanges\u201d, \u201cAlgorithmics Economics Seminar\u201d} {\u201cBrain Maps to Mechanisms: Neural Circuit Molecular Architecture\u201d, \u201cJoint Department of Neurobiology and Center for the Neural Basis of Cognition and Systems Neuroscience Institue Seminar\u201d} {\u201cHoley Grail \u2013 the Mechanism of Transport Through the Nuclear Pore of Cells\u201d, \u201cBiological Sciences Seminar\u201d} {\u201cMath, Monkeys, and the Developing Brain\u201d, \u201cThe Cowan Young Investigator Lecture, Center for the Neural Basis of Cognition\u201d} {\u201cConversation and Discussion with an Entrepreneur and Energy Visionary\u201d, \u201cInnovators Forum\u201d}"</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-04-25'</editDate><author>u'Aasish (via Bryan)'</author><curator>u''</curator><description>u'What series of meetings a particular meeting belongs to, or what kind of a meeting it is'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'meetingEventTitleAtDate'</relationName><humanFormat>u'arg1 occurrs {at the date} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'eventDate'</generalizations><domain>u'meetingEventTitle'</domain><range>u'dateLiteral'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'dateOfMeetingEventTitle'</inverse><seedInstances>u"{\u201cHuman Powered Data Management\u201d, \u201cApril 3, 2013\u201d} {\u201cRobot Futures\u201d, \u201cApril 3, 2013\u201d} {\u201cFinding Needles in Exponential Haystacks\u201d, \u201cApril 12, 2013\u201d} {\u201cObject Storage\u201d, \u201cApril 15, 2013\u201d} {\u201cRSA in the Real World\u201d, \u201cApril 8, 2013\u201d} {\u201cOptimizing Password Composition Policies\u201d, \u201cApril 10, 2013\u201d} {\u201cCalibrating the World's Photos with a Massive 3D Database\u201d, \u201cApril 15, 2013\u201d} {\u201cModern Dynamic Kidney Exchanges\u201d, \u201cApril 16, 2013l\u201d} {\u201cBrain Maps to Mechanisms: Neural Circuit Molecular Architecture\u201d, \u201cApril 16, 2013\u201d} {\u201cHoley Grail \u2013 the Mechanism of Transport Through the Nuclear Pore of Cells\u201d, \u201cApril 17, 2013\u201d} {\u201cMath, Monkeys, and the Developing Brain\u201d, \u201cApril 25, 2013\u201d} {\u201cConversation and Discussion with an Entrepreneur and Energy Visionary\u201d, \u201cApril 24, 2013\u201d}"</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-04-25'</editDate><author>u'Aasish (via Bryan)'</author><curator>u''</curator><description>u'When a particular meeting will take place'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'meetingEventTitleInBuilding'</relationName><humanFormat>u'arg1 occurrs {in the building} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'eventAtLocation'</generalizations><domain>u'meetingEventTitle'</domain><range>u'building'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'buildingHostsMeetingEventTitle'</inverse><seedInstances>u"{\u201cHuman Powered Data Management\u201d, \u201cGates &amp; Hillman Centers\u201d} {\u201cRobot Futures\u201d, \u201cGates and Hillman Centers\u201d} {\u201cFinding Needles in Exponential Haystacks\u201d, \u201cWean Hall\u201d} {\u201cObject Storage\u201d, \u201cDoherty Hall\u201d} {\u201cRSA in the Real World\u201d, \u201cGates &amp; Hillman Centers\u201d} {\u201cOptimizing Password Composition Policies\u201d, \u201cGates and Hillman Centers\u201d} {\u201cCalibrating the World's Photos with a Massive 3D Database\u201d, \u201cNewell-Simon Hall\u201d} {\u201cModern Dynamic Kidney Exchanges\u201d, \u201cNewell-Simon Hall\u201d} {\u201cBrain Maps to Mechanisms: Neural Circuit Molecular Architecture\u201d, \u201cBiomedical Science Tower\u201d} {\u201cHoley Grail \u2013 the Mechanism of Transport Through the Nuclear Pore of Cells\u201d, \u201cMellon Institute\u201d} {\u201cMath, Monkeys, and the Developing Brain\u201d, \u201cMellon Institute\u201d} {\u201cConversation and Discussion with an Entrepreneur and Energy Visionary\u201d, \u201cCollege of Fine Arts\u201d}"</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-04-25'</editDate><author>u'Aasish (via Bryan)'</author><curator>u''</curator><description>u'In which building a particular meeting will take place'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'meetingEventTitleInOfficeBuildingRoom'</relationName><humanFormat>u'arg1 occurrs {in the room} arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'eventAtLocation'</generalizations><domain>u'meetingEventTitle'</domain><range>u'officeBuildingRoom'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'officeBuildingRoomHostsMeetingEventTitle'</inverse><seedInstances>u"{\u201cHuman Powered Data Management\u201d, \u201c6115\u201d} {\u201cRobot Futures\u201d, \u201cRashid Auditorium 4401\u201d} {\u201cFinding Needles in Exponential Haystacks\u201d, \u201c7500\u201d} {\u201cObject Storage\u201d, \u201c1212\u201d} {\u201cRSA in the Real World\u201d, \u201c6115\u201d} {\u201cOptimizing Password Composition Policies\u201d, \u201c8102\u201d} {\u201cCalibrating the World's Photos with a Massive 3D Database\u201d, \u201cMauldin Auditorium 1305\u201d} {\u201cModern Dynamic Kidney Exchanges\u201d, \u201c1507\u201d} {\u201cBrain Maps to Mechanisms: Neural Circuit Molecular Architecture\u201d, \u201cRoom 1495\u201d} {\u201cHoley Grail \u2013 the Mechanism of Transport Through the Nuclear Pore of Cells\u201d, \u201cConference Room\u201d} {\u201cMath, Monkeys, and the Developing Brain\u201d, \u201cSocial Room 328\u201d} {\u201cConversation and Discussion with an Entrepreneur and Energy Visionary\u201d, \u201cKresge Theatre\u201d}"</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-04-25'</editDate><author>u'Aasish (via Bryan)'</author><curator>u''</curator><description>u'In which room a particular meeting will take place'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'meetingEventTitleHasSpeakingPerson'</relationName><humanFormat>u'arg1 {features} the speaker arg2'</humanFormat><populate>1</populate><visible>1</visible><generalizations>u'eventHasParticipantAgent'</generalizations><domain>u'meetingEventTitle'</domain><range>u'person'</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'personSpeakingAtMeetingEventTitle'</inverse><seedInstances>u"{\u201cHuman Powered Data Management\u201d, \u201cAditya Parameswaran\u201d} {\u201cRobot Futures\u201d, \u201cIllah Nourbakhsh\u201d} {\u201cFinding Needles in Exponential Haystacks\u201d, \u201cJoel Spencer\u201d} {\u201cObject Storage\u201d, \u201cBrent Welch\u201d} {\u201cRSA in the Real World\u201d, \u201cNadia Heninger\u201d} {\u201cOptimizing Password Composition Policies\u201d, \u201cJeremiah Blocki\u201d} {\u201cCalibrating the World's Photos with a Massive 3D Database\u201d, \u201cNoah Snavely\u201d} {\u201cModern Dynamic Kidney Exchanges\u201d, \u201cTuomas Sandholm\u201d} {\u201cBrain Maps to Mechanisms: Neural Circuit Molecular Architecture\u201d, \u201cStephen J . Smith\u201d} {\u201cHoley Grail \u2013 the Mechanism of Transport Through the Nuclear Pore of Cells\u201d, \u201cSanford Simon\u201d} {\u201cMath, Monkeys, and the Developing Brain\u201d, \u201cJessica Cantlon\u201d} {\u201cConversation and Discussion with an Entrepreneur and Energy Visionary\u201d, \u201cVinod Khosla\u201d}"</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2014-04-25'</editDate><author>u'Aasish (via Bryan)'</author><curator>u''</curator><description>u'Who will be speaking at a particular meeting'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'musicGenresSuchAsMusicGenres'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'musicGenre'</domain><range>u'musicGenre'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfMusicGenresSuchAsMusicGenres'</inverse><seedInstances>u'{"metal", "black metal"} {"rock", "classic rock"} {"rock", "hard rock"} {"rock", \u201dindie"} {"metal", "heavy metal"} {"pop", "rock"} {\u201crock", "punk"} {"rock", "heavy metal"} {"rock", "metal"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'Prophet (via Lucas)'</author><curator>u''</curator><description>u'Describes the musicgenre types that are generalizations of specific musicgenres'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'sportNameHasOriginLanguage'</relationName><humanFormat>u'arg1 is a sport that {its name origin comes from} language arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'sport'</domain><range>u'language'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'languageOfSportsGame'</inverse><seedInstances>u'{"cricket", "english"} {"football", "english"} {"golf", "english"} {"ski", "english"} {"skiing", "english"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>40491.0</editDate><author>u'Prophet (via Lucas)'</author><curator>u''</curator><description>u'Describes the origin language of the sports name'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'animalsSuchAsMammals'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'animal'</domain><range>u'mammal'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfAnimalsSuchAsMammals'</inverse><seedInstances>u'{"animals002", "predators"} {"beasts", "predators"} {"beasts", "wild animals"}  {"birds001", "pets"} {"breeds", "domestic animals"} {"breeds", "farm animals"} {"carnivores", "predators"} {"child", "kids"} {"children", "kids"} {"creatures", \u201cdomestic animals"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>40491.0</editDate><author>u'Prophet (via Lucas)'</author><curator>u''</curator><description>u'Describes the animal types that are generalizations of mammals'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'televisionShowIsBasedOnMovie'</relationName><humanFormat>u'arg1 is a televisionshow that {is based on} the movie arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'televisionshow'</domain><range>u'movie'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'movieThatGeneratesTelevisionShow'</inverse><seedInstances>u'{\u201cbad teacher\u201d, \u201cbad teacher\u201d} {\u201cmanchester prep\u201d, \u201ccruel intentions\u201d} {\u201ctimon &amp; pumbaa\u201d, \u201cthe lion king\u201d} {\u201ctimecop\u201d, \u201ctimecop\u201d} {\u201ctox crusaders\u201d, \u201cthe toxic avenger\u201d} {\u201cferris bueller\u201d, \u201cferris bueller s day off\u201d} {\u201cdirty dancing\u201d, \u201cdirty dancing\u201d} {\u201cbeetlejuice\u201d, \u201cbeetlejuice\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'Prophet (via Lucas)'</author><curator>u''</curator><description>u'Movie that a television show was based in'</description><freebaseID>u''</freebaseID><comment>u'For this relation I inserted the seed instances manually'</comment><relationName>u'athleteFlyOutToSportsteamposition'</relationName><humanFormat>u'arg1 is an athlete that {flied out to} position arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'athlete'</domain><range>u'sportsTeamPosition'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'sportsTeamPositionReceivedAthlete'</inverse><seedInstances>u'{"martin","center"}{"joseph","center"}{"chris wright","center"}{"frank","center"}{"edgardo alfonzo","center"}{"johnny damon","center"}{"mitchell","center"}{"aaron boone","center"}{"ramirez","center"}{"helton","center"}{"manny ramirez","center"}{"ramon santiago","center"}{"ted williams","center"}{"chuck knoblauch","center"}{"sosa","center"}{"brian snyder","center"}{"lowell","center"}{"willis","center"}{"jason bartlett","center"}{"mike lowell","center"}{"ivan rodriguez","center"}{"scott","center"}{"bernie williams","center"}{"todd zeile","center"}{"ruiz","center"}{"tyler johnson","center"}{"scott rolen","center"}{"damon","center"}{"paul lo duca","center"}{"jason lane","center"}{"phillips","center"}{"ryan howard","center"}{"torii hunter","center"}{"russell branyan","center"}{"ramon hernandez","center"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'OntExt (Via Paulo)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'attractionBeFallInCity'</relationName><humanFormat>u'arg1 is an attraction that {will be fall} in city arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'attractionOfCity'</generalizations><domain>u'attraction'</domain><range>u'city'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'cityHostsAttraction'</inverse><seedInstances>u'{"disneyland","anaheim"}{"busch gardens","tampa"}{"arlington national cemetery","arlington"}{"ronald reagan washington national airport","arlington"}{"forum","victoria"}{"mississippi","memphis"}{"home","louisiana"}{"tampa bay","tampa"}{"tampa","tampa bay"}{"art","wood"}{"disneyland park","anaheim"}{"elephant","portland"}{"the national museum","manila"}{"opryland","nashville"}{"opryland usa","nashville"}{"woodlawn cemetery","clinton"}{"nature","liberty"}{"menlo park","house"}{"portland","liberty"}{"house","menlo park"}{"liberty","portland"}{"the national marine aquarium","plymouth"}{"kensington gardens","kensington"}{"queens","glendale"}{"busch gardens africa","tampa"}{"nelson mandela bay","port elizabeth"}{"strawbery banke museum","portsmouth"}{"max","anaheim"}{"summit","kansas city"}{"mississippi","summit"}{"kansas city","summit"}{"forum","orange"}{"pioneer courthouse square","portland"}{"holocaust museum","tampa"}{"forbes field","oakland"}{"disneyland resort","anaheim"}{"adelphia coliseum","nashville"}{"mississippi","casino"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'OntExt (Via Paulo)'</author><curator>u''</curator><description>u'Attraction occurs in the city'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'arthropodBeSometimesConfuseWithInsect'</relationName><humanFormat>u'arg1 is an arthropod that {sometimes is confused} with the insect arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'arthropod'</domain><range>u'insect'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'insectCanBeConfundedWithArthropod'</inverse><seedInstances>u'{"damselfly","dragonfly"} {"dragonfly","damselfly"}{"millipedes","wireworm"}{"wireworm","millipedes"}{"house fly","flesh fly"}{"flesh fly","house fly"}{"deer fly","horse fly"}{"hookworm","roundworm"}{"horse fly","deer fly"}{"mayfly","dragonfly"}{"roundworm","earthworm"}{"wasp","sawfly"}{"dragonfly","mayfly"}{"earthworm","roundworm"}{"adult beetle","mountain pine beetle"}{"mountain pine beetle","adult beetle"}{"corn borer","caddisfly"}{"mite","ticks"}{"caddisfly","corn borer"}{"aphid","adelgid"}{"adelgid","aphid"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'OntExt (Via Paulo)'</author><curator>u''</curator><description>u'Arthropodes that usually are confunded by insects'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'arthropodCanBeVeryIrritatingToMammal'</relationName><humanFormat>u'arg1 an arthropod that {can be very irritating} to mammal arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'arthropod'</domain><range>u'mammal'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'mammalCanBeIrritatedByArthropod'</inverse><seedInstances>u'{"flea","dog"}{"deer tick","deer"}{"flea","dogs"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'OntExt (Via Paulo)'</author><curator>u''</curator><description>u'Arthropode that usually irritates mammal'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'moviesSuchAsMovies'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'movie'</domain><range>u'movie'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfMoviesSuchAsMovies'</inverse><seedInstances>u'{\u201chorror movies\u201d,\u201daliens\u201d} {\u201caction movies\u201d,\u201ddie hard\u201d} {\u201cdrama movies\u201d,\u201dbig lebowski\u201d} {\u201cdrama movies\u201d,\u201dfight club\u201d} {\u201cfantasy movies\u201d,\u201dthe lord of the rings trilogy\u201d} {\u201cthriller movies\u201d,\u201dthe shining\u201d} {\u201caction movies\u201d,\u201dthe karate kid\u201d} {\u201caction movies\u201d,\u201dgodzilla\u201d} {\u201cthriller movies\u201d,\u201djaws\u201d} {\u201ccomedy movies\u201d,\u201dmovie ace ventura 2\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'SubCatReader (via Lucas)'</author><curator>u''</curator><description>u'Describes the movies types that are generalizations of specific movies'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'religionsSuchAsReligions'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'religion'</domain><range>u'religion'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfReligionsSuchAsReligions'</inverse><seedInstances>u'{\u201cchristian organizations\u201d,\u201dadvent presbyterian church\u201d} {\u201cchristian organizations\u201d,\u201dadvent lutheran church\u201d} {\u201cchristian organizations\u201d,\u201dall nations church of god\u201d} {\u201cbuddhist organizations\u201d,\u201dbuddhist lamaism\u201d} {\u201cchristian organizations\u201d,\u201djehovah witness\u201d} {\u201cislamic organizations\u201d,\u201dmuhammads islamic temple church\u201d} {\u201cbuddhist organizations\u201d,\u201da di da buddhist temple \u201d} {\u201cislamic organizations\u201d,\u201dmarkham islamic center\u201d} {\u201cjudaic organization\u201d,\u201dnazarene judaism\u201d} {\u201cjudaic organization\u201d,\u201dlibera judaism\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'SubCatReader (via Lucas)'</author><curator>u''</curator><description>u'Describes the religions types that are generalizations of specific religions'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'weaponsSuchAsWeapons'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'weapon'</domain><range>u'weapon'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfWeaponsSuchAsWeapons'</inverse><seedInstances>u'{\u201cranged weapons\u201d,\u201dak 47\u201d} {\u201cranged weapons\u201d,\u201dbow\u201d} {\u201cmelee weapons\u201d,\u201dkatana\u201d} {\u201cmelee weapons\u201d,\u201dknives\u201d} {\u201cnukes\u201d,\u201dmortar bomb\u201d} {\u201cnukes\u201d,\u201dnuclear missile\u201d} {\u201cranged weapons\u201d,\u201dconcussion grenade\u201d} {\u201cranged weapons\u201d,\u201dsub machine guns\u201d} {\u201cmelee weapons\u201d,\u201dtwo handed sword\u201d} {\u201cranged weapons\u201d,\u201dsling shots\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'SubCatReader (via Lucas)'</author><curator>u''</curator><description>u'Describes the weapons types that are generalizations of specific weapons'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'videoGamesSuchAsVideoGames'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'videogame'</domain><range>u'videogame'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'inverseOfVideoGamesSuchAsVideoGames'</inverse><seedInstances>u'{\u201caction games\u201d,\u201dassassin s creed 2\u201d} {\u201caction games\u201d,\u201ddynasty warriors 6\u201d} {\u201cadventure games\u201d,\u201dduck tales 2\u201d} {\u201crpg games\u201d,\u201dbreath of fire 4\u201d} {\u201crpg games\u201d,\u201ddragon quest 8\u201d} {\u201crts games\u201d,\u201dage of empires 2\u201d} {\u201csports games\u201d,\u201dall star baseball 2003\u201d} {\u201cfps games\u201d,\u201dbioshock 2\u201d} {\u201cfps games\u201d,\u201dbattlefield bad company 2\u201d} {\u201csports games\u201d,\u201dfifa 2005\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>40491.0</editDate><author>u'SubCatReader (via Lucas)'</author><curator>u''</curator><description>u'Describes the videogame types that are generalizations of specific videogames'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'televisionshowsSuchAstelevisionshows'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'televisionshow'</domain><range>u'televisionshow'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOftelevisionshowsSuchAstelevisionshows'</inverse><seedInstances>u'{"televisionshows", "office"} {"televisionshows", "season"} {"televisionshows", "hawaii"} {"televisionshows", "white"} {"televisionshows", "practice"} {"televisionshows", "agreement"} {"televisionshows", "weekend"} {"televisionshows", "upn"} {"televisionshows", "house"} {"televisionshows", "classes"} {"televisionshows", "registration"} {"televisionshows", "money"} {"televisionshows", "last week"} {"televisionshows", "press release"} {"televisionshows", "jail"} {"televisionshows", "five"} {"televisionshows", "conflict"} {"televisionshows", "video"} {"televisionshows", "captain"} {"televisionshows", "telemundo"} {"televisionshows", "signature"} {"televisionshows", "laws"} {"televisionshows", "friday"} {"televisionshows", "experiment"} {"televisionshows", "eight"} {"televisionshows", "body"} {"televisionshows", "anne of green gables"} {"televisionshows", "america"} {"televisionshows", "yangon"} {"televisionshows", "twilight"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>40498.0</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the televisionshows types that are generalizations of specific televisionshows'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'conferencesSuchAsconferences'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'conference'</domain><range>u'conference'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfconferencesSuchAsconferences'</inverse><seedInstances>u'{"conferences", "ifpi"} {"conferences", "rain"} {"conferences", "mkx"} {"conferences", "jazz"} {"conferences", "aavg"} {"conferences", "zipi"} {"conferences", "zaap"} {"conferences", "ysii"} {"conferences", "xavier leroy"} {"conferences", "wsdm"} {"conferences", "world usability day"} {"conferences", "wncg"} {"conferences", "wmcs"} {"conferences", "wage"} {"conferences", "vdnx"} {"conferences", "ulis"} {"conferences", "uffc"} {"conferences", "uae"} {"conferences", "tyria"} {"conferences", "trsm"} {"conferences", "ton"} {"conferences", "tocs"} {"conferences", "the journal of supercomputing"} {"conferences", "tgis"} {"conferences", "tase"} {"conferences", "symposium on principles of database systems"} {"conferences", "symposium on applied computing"} {"conferences", "suka"} {"conferences", "strc"} {"conferences", "splash conference"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'2014-11-17'</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the conferences types that are generalizations of specific conferences'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'musicfestivalsSuchAsmusicfestivals'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'musicfestival'</domain><range>u'musicfestival'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfmusicfestivalsSuchAsmusicfestivals'</inverse><seedInstances>u'{"musicfestivals", "annual meeting"} {"musicfestivals", "annual conference"} {"musicfestivals", "beyond black"} {"musicfestivals", "award ceremony"} {"musicfestivals", "annual event"} {"musicfestivals", "abbey road on the river"} {"musicfestivals", "yuan tan"} {"musicfestivals", "yosemite international jazz festival"} {"musicfestivals", "york early music festival"} {"musicfestivals", "yolo county fair"} {"musicfestivals", "yellow pine harmonica festival"} {"musicfestivals", "yamaha music festival"} {"musicfestivals", "x fest"} {"musicfestivals", "wyoming state fair"} {"musicfestivals", "wygant state natural area"} {"musicfestivals", "wrightwood mountain music festival"} {"musicfestivals", "world pipe band championships"} {"musicfestivals", "world ice art championships"} {"musicfestivals", "world festival of sacred music"} {"musicfestivals", "world electronic music festival"} {"musicfestivals", "world creole music festival"} {"musicfestivals", "woodstock jazz festival"} {"musicfestivals", "womad"} {"musicfestivals", "wolf creek inn state heritage site"} {"musicfestivals", "wireless festival"} {"musicfestivals", "winstock country music festival"} {"musicfestivals", "wing ding"} {"musicfestivals", "winchuck state recreation site"} {"musicfestivals", "william m  tugman state park"} {"musicfestivals", "willamette stone"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'2014-11-17'</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the musicfestivals types that are generalizations of specific musicfestivals'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'hobbiesSuchAshobbies'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'hobby'</domain><range>u'hobby'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfhobbiesSuchAshobbies'</inverse><seedInstances>u'{"hobbies", "studio"} {"hobbies", "troops"} {"hobbies", "reading"} {"hobbies", "talks"} {"hobbies", "pictures"} {"hobbies", "science"} {"hobbies", "polls"} {"hobbies", "hunting"} {"hobbies", "fiji"} {"hobbies", "volunteer"} {"hobbies", "discussions"} {"hobbies", "boating"} {"hobbies", "venice"} {"hobbies", "places"} {"hobbies", "gallery"} {"hobbies", "fly fishing"} {"hobbies", "locations"} {"hobbies", "hiking"} {"hobbies", "cardiff"} {"hobbies", "camps"} {"hobbies", "activities"} {"hobbies", "water pipes"} {"hobbies", "trips"} {"hobbies", "submissions"} {"hobbies", "service areas"} {"hobbies", "repairs"} {"hobbies", "paddling"} {"hobbies", "leicester"} {"hobbies", "inspiration"} {"hobbies", "ideas"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'2014-11-17'</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the hobbies types that are generalizations of specific hobbies'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'professionsSuchAsprofessions'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'profession'</domain><range>u'profession'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfprofessionsSuchAsprofessions'</inverse><seedInstances>u'{"professions", "professionals"} {"professions", "staff"} {"professions", "providers"} {"professions", "practitioners"} {"professions", "workers"} {"professions", "experts"} {"professions", "specialists"} {"professions", "nurses"} {"professions", "leaders"} {"professions", "doctors"} {"professions", "professional"} {"professions", "physicians"} {"professions", "teachers"} {"professions", "services"} {"professions", "faculty"} {"professions", "members"} {"professions", "care professionals"} {"professions", "instructors"} {"professions", "employees"} {"professions", "individuals"} {"professions", "consultants"} {"professions", "nursing"} {"professions", "engineers"} {"professions", "educators"} {"professions", "technicians"} {"professions", "craftsmen"} {"professions", "lawyers"} {"professions", "jobs"} {"professions", "therapists"} {"professions", "clinicians"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'2014-11-17'</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the professions types that are generalizations of specific professions'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'countriesSuchAscountries'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'country'</domain><range>u'country'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfcountriesSuchAscountries'</inverse><seedInstances>u'{"countries", "usa"} {"countries", "u  s"} {"countries", "india"} {"countries", "america"} {"countries", "uk"} {"countries", "england"} {"countries", "canada"} {"countries", "the us"} {"countries", "australia"} {"countries", "france"} {"countries", "south vietnam"} {"countries", "japan"} {"countries", "russia"} {"countries", "mexico"} {"countries", "spain"} {"countries", "poland"} {"countries", "south africa"} {"countries", "israel"} {"countries", "iran"} {"countries", "korea"} {"countries", "sweden"} {"countries", "germany"} {"countries", "papua new guinea"} {"countries", "iraq"} {"countries", "uk "} {"countries", "switzerland"} {"countries", "norway"} {"countries", "brazil"} {"countries", "scotland"} {"countries", "saudi arabia"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'2014-11-17'</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the countries types that are generalizations of specific countries'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'toolsSuchAstools'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'tool'</domain><range>u'tool'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOftoolsSuchAstools'</inverse><seedInstances>u'{"tools", "tools"} {"tools", "accessories"} {"tools", "plants"} {"tools", "supplements"} {"tools", "grips"} {"tools", "components"} {"tools", "abrasive jet machining"} {"tools", "versatility"} {"tools", "toolkit"} {"tools", "thermistors"} {"tools", "taps and dies"} {"tools", "system components"} {"tools", "studs"} {"tools", "spreaders"} {"tools", "spokeshave"} {"tools", "spin welding"} {"tools", "solenoids"} {"tools", "sheet metal forming"} {"tools", "sector 2"} {"tools", "secateurs"} {"tools", "schedule software"} {"tools", "scalpels"} {"tools", "sawhorses"} {"tools", "safety pins"} {"tools", "rubrics"} {"tools", "reamers"} {"tools", "ratchets"} {"tools", "ratchet"} {"tools", "protractors"} {"tools", "project management software"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'2014-11-17'</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the tools types that are generalizations of specific tools'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'criminalsSuchAscriminals'</relationName><humanFormat>u'arg1 {is a generalization of} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'criminal'</domain><range>u'criminal'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfcriminalsSuchAscriminals'</inverse><seedInstances>u'{"criminals", "york city"} {"criminals", "murder"} {"criminals", "sites"} {"criminals", "authorities"} {"criminals", "files"} {"criminals", "web sites"} {"criminals", "menu"} {"criminals", "abuse"} {"criminals", "suggestions"} {"criminals", "mike price"} {"criminals", "criminals"} {"criminals", "neil cavuto"} {"criminals", "jesse"} {"criminals", "hill"} {"criminals", "england area"} {"criminals", "confederates"} {"criminals", "walter scott"} {"criminals", "red sox"} {"criminals", "patrick o brian"} {"criminals", "link"} {"criminals", "law enforcement"} {"criminals", "king john"} {"criminals", "former president bill clinton"} {"criminals", "felons"} {"criminals", "destruction"} {"criminals", "death"} {"criminals", "david mitchell"} {"criminals", "burke"} {"criminals", "bruno hauptmann"} {"criminals", "abu jamal"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'2014-11-17'</editDate><author>u'SubCatFinder'</author><curator>u' '</curator><description>u' Describes the criminals types that are generalizations of specific criminals'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'awardTrophyTournamentWasAwardedOnStadium'</relationName><humanFormat>u'arg1 is a awardtrophytournament that {was awarded in} stadiumoreventvenue arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'atLocation'</generalizations><domain>u'awardtrophytournament'</domain><range>u'stadiumoreventvenue'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfAwardTrophyTournamentWasAwardedOnStadium'</inverse><seedInstances>u'{"alan i  rothenberg trophy", "foxboro stadium"} {"alan i  rothenberg trophy", "rfk memorial stadium"} {"alan i  rothenberg trophy", "crew stadium"} {"world series", "fenway park"} {"world series", "u s  bank arena"}  {"european champion clubs  cup", "estadio da luz"}  {"european champion clubs  cup", "wembley stadium"}  {"european champion clubs  cup", "allianz arena"}  {"vince lombardi trophy", "lucas oil stadium"} {"vince lombardi trophy", "stanford stadium"} {"vince lombardi trophy", "metlife stadium"}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Stadium of event venue where a award trophy tournament was at least once awarded'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'athleteFracturedBone'</relationName><humanFormat>u'arg1 is an athlete that {fractured} his bone arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'athleteInjuredHisBodyPart'</generalizations><domain>u'athlete'</domain><range>u'bone'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfAthleteFracturedBone'</inverse><seedInstances>u'{\u201creggie bush\u201d,\u201dtibia\u201d} {\u201cjoe theismann\u201d,\u201dtibia\u201d} {\u201ckendry morales\u201d,\u201dtibia\u201d} {\u201clance armstrong\u201d,\u201dcollar bone\u201d} {\u201coscar moller\u201d,\u201dcollar bone\u201d} {\u201cmatt leinart\u201d,\u201dcollar bone\u201d} {\u201cjake locker\u201d,\u201dmetatarsal bones\u201d} {\u201cle veon bell\u201d,\u201dmetatarsal bones\u201d} {\u201cmatt schaub\u201d,\u201dmetatarsal bones\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Bone fracture that an athlete had'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'bacteriaCanCauseIllnessFromFood'</relationName><humanFormat>u'arg1 is a bacteria that {can cause illness from} food arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'bacteria'</domain><range>u'food'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfBacteriaCanCauseIllnessFromFood'</inverse><seedInstances>u'{"campylobacter jejuni", "milk"} {"campylobacter jejuni", "water"} {"campylobacter jejuni", "chiken"} {"clostridium botulinum", "fish"}  {"clostridium botulinum", "wrapped food"}  {"escherichia coli", "ground beef"}  {"escherichia coli", "vegetables"} {"escherichia coli", "apple juice"}  {"salmonella", "eggs"}  {"salmonella", "seafood"}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Describes the foods that bacterias can cause illness from'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'softwareIsProgrammedInProgrammingLanguage'</relationName><humanFormat>u'arg1 is a software {programmed in} programminlanguage arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'software'</domain><range>u'programminglanguage'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfSoftwareProgrammedInProgrammingLanguage'</inverse><seedInstances>u'{\u201copera mini\u201d,\u201djava\u201d} {\u201crtext\u201d,\u201djava\u201d} {\u201c86 dos\u201d,\u201dassembly\u201d} {\u201cquake engine\u201d,\u201dassembly\u201d} {\u201cquake II engine\u201d,\u201dassembly\u201d} {\u201cmatlab\u201d,\u201dc\u201d} {\u201cnemo\u201d,\u201dc\u201d} {\u201ceasyeclipse\u201d,\u201dpython\u201d} {\u201cmako\u201d,\u201dpython\u201d} {\u201cappletviwer\u201d,\u201djava\u201d} {\u201cbioclipse\u201d,\u201djava\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Relates a software to its programming language'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'muscleLocatedInBodyPart'</relationName><humanFormat>u'arg1 a muscle {located in} bodypart arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'subpartOf'</generalizations><domain>u'muscle'</domain><range>u'bodypart'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'bodyPartContainsMuscle'</inverse><seedInstances>u'{"trapezius",\u201dneck"} {"pectoralis major",\u201dchest"} {"pectoralis minor",\u201dchest"} {"deltoid",\u201dshoulders"} {"triceps",\u201darms"} {"biceps",\u201darms"} {"abs",\u201dchest"} {"sartorius",\u201dtights"} {"abductor longus",\u201dthighs"} {"brachialis",\u201darms"}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Describes the muscles in body parts'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'actorWorkedWithDirector'</relationName><humanFormat>u'arg1 is an actor that {worked with} the director arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'agentCollaboratesWithAgent'</generalizations><domain>u'actor'</domain><range>u'director'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'directorWorkedWithActor'</inverse><seedInstances>u'{"simon pegg", "j j  abrams"} {"alec baldwin", "woody allen"} {"scarlett johansson", "woody allen"} {"jean reno", "luc besson"} {"sharlto copley", "neill blomkamp"} {"ewan mcgregor", "danny boyle"} {"robert de niro", "brian de palma"} {"morgan freeman", "clint eastwood"} {"peter sellers", "blake edwards"} {"nicolas cage", "francis ford coppola"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Relates the actors and directors that at least once worked together'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'criminalArrestedInCountry'</relationName><humanFormat>u'arg1 is a criminal {arrested in} country arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'agentRelatedToLocation'</generalizations><domain>u'criminal'</domain><range>u'country'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfCriminalArrestedInCountry'</inverse><seedInstances>u'{\u201cal capone\u201d, \u201cunited states of america\u201d} {\u201ccharles ponzi\u201d, \u201citaly\u201d} {\u201clary hoover\u201d, \u201cunited states of america\u201d} {\u201cbarry minkow\u201d, \u201cunited states of america\u201d} {\u201cfernandinho beira mar\u201d, \u201cbrazil\u201d} {\u201ccarlinhos beira mar\u201d, \u201cbrazil\u201d} {\u201cjoseph bonanno\u201d, \u201cunited states of america\u201d} {\u201chawley harvey crippen\u201d, \u201cengland\u201d} {\u201cdonald neilson\u201d, \u201cengland\u201d} {\u201caugusto pinochet\u201d, \u201cspain\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Country where criminal was arrested'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'athletePlayedForSchool'</relationName><humanFormat>u'arg1 is an athlete that {played for} the team of school arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'personBelongsToOrganization'</generalizations><domain>u'athlete'</domain><range>u'school'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfAthletePlayedForSchool'</inverse><seedInstances>u'{\u201cdesean jackson\u201d,\u201clong beach polytechnic high school\u201d} {\u201cwillie mcginest\u201d,\u201clong beach polytechnic high school\u201d} {\u201cwinston justice\u201d,\u201clong beach polytechnic high school\u201d} {\u201candrew luck\u201d,\u201cstanford university\u201d} {\u201ctom brady\u201d,\u201cjunipero serra high school\u201d} {\u201cmatt barkley\u201d,\u201cmater dei high school\u201d} {\u201cleron ellis\u201d,\u201cmater dei high school\u201d} {\u201cdanny espinosa\u201d,\u201cmater dei high school\u201d} {\u201camani toomer\u201d,\u201cde la salle high school\u201d} {\u201cstefan frei\u201d,\u201cde la salle high school\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'The school that an athlete used to play for its team'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'publicationPublishedInMagazine'</relationName><humanFormat>u'arg1 is a publication {published} in magazine arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'subpartOf'</generalizations><domain>u'publication'</domain><range>u'magazine'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'MagazineContainsPublication'</inverse><seedInstances>u'{\u201cthe technological singularity: what about an unintelligent singularity?\u201d, \u201cacm\u201d} {\u201ccomputers versus humanity: do we compete?: the technological singularity\u201d, \u201cacm\u201d} {\u201ccaffe neve\u201d, \u201cacm\u201d} {\u201cpessential knowledge aggregation, Delivery, and assessment\u201d, \u201cacm\u201d} {\u201cdoes innovation create or destroy jobs?\u201d, \u201cacm\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u''</curator><description>u'Magazine in which a publication was published in'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'restaurantLocatedInSkyscraper'</relationName><humanFormat>u'arg1 is a restaurant {located in} skyscraper arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'restaurant'</domain><range>u'skyscraper'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'skyscraperContainsRestaurant'</inverse><seedInstances>u'{\u201chutong\u201d,\u201cthe shard\u201d} {\u201ccity social\u201d,\u201ctower42\u201d}{\u201coblix\u201d,\u201cthe shard\u201d} {\u201csushi samba\u201d,\u201cheron tower\u201d} {\u201cmadison\u201d,\u201cst paul s\u201d} {\u201cduck and waffle\u201d,\u201cheron tower\u201d} {\u201csearcys\u201d,\u201cthe gherkin\u201d} {\u201cquartier restaurant\u201d,\u201ceight club\u201d} {\u201cparamount\u201d,\u201ccentre point\u201d} {\u201coxo tower\u201d,\u201coxo tower\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>41993.0</editDate><author>u'Prophet'</author><curator>u' '</curator><description>u'Describes restaurants located in skyscrapers'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'vegetableCanBeServedWithGrain'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'itemUsedWithItem'</generalizations><domain>u'vegetable'</domain><range>u'grain'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfvegetableCanBeServedWithGrain'</inverse><seedInstances>u'{"corn","sugar"} {"wheat","barley"} {"potatoes","sugar"} {"potato","sugar"} {"wheat","sorghum"} {"wheat","oatmeal"} {"rice","oatmeal"} {\u201ctomatoes\u201d,\u201drice\u201d} {\u201ctomatoes\u201d, \u201cbeans\u201d} {\u201clettuce\u201d,\u201drice\u201d} {\u201clettuce\u201d,\u201dbeans\u201d} {\u201conions\u201d,\u201dlettuce\u201d} {\u201conions\u201d,\u201dbeans\u201d} {\u201ccarrot\u201d,\u201drice\u201d} {\u201ccarrot\u201d,\u201dbeans\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes the vegetables that are usually served with a grain'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'insectEatsGrain'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'animalEatFood'</generalizations><domain>u'insect'</domain><range>u'grain'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfinsectEatsGrain'</inverse><seedInstances>u'{"insects","sugar"} {"bugs","crops"} {"beneficial insects","crops"} {"moths","crops"} {"beetles","crops"} {"spiders","sugar"}  {"moth","crops"} {"mites","crops"} {\u201cmosquitos\u201d,\u201dcorn\u201d} {\u201cweevil\u201d,\u201drice\u201d} {\u201cants\u201d,\u201drice\u201d} {\u201cants\u201d,\u201dcorn\u201d} {\u201cants\u201d,\u201dsugar\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes the grains eaten by an insect'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'athletePublishesInBlog'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'athlete'</domain><range>u'blog'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfathletePublishesInBlog'</inverse><seedInstances>u'{\u201cTom Hall\u201d,\u201dhttp://tomh all.ca/\u201d} {\u201cRyan Semple\u201d,\u201dwww.ryansemple.com\u201d} {\u201cRosanna Tomiuk\u201d,\u201dwww.rosannatomiuk.com\u201d} {\u201cPaula Findlay\u201d,\u201dpaulafindlay.blogspot.com\u201d} {\u201cMegan Imrie\u201d,\u201dwww.meganimrie.com\u201d} {\u201cBobby Jones\u201d,\u201d  http://www.yardbarker.com/blog/bobbysworld/home\u201d} {\u201cLauryn Williams\u201d,\u201dhttp://www.yardbarker.com/blog/lwheels/home\u201d} {\u201cCletis Gordon\u201d,\u201dhttp://www.yardbarker.com/blog/cletis gordon/home\u201d} {\u201cIkaika Alama-Francis\u201d,\u201dhttp://www.yardbarker.com/blog/ikaika/home\u201d} {\u201cIsaac Bruce\u201d,\u201dhttp://www.yardbarker.com/blog/isaacbruce/home\u201d} {\u201cJoshua Riker-Fox\u201d,\u201dwww.riker-fox.com#sthash.1kydX5zG.dpuf\u201d} {\u201cHeather Moyse\u201d,\u201dwww.heathermoyse.net#sthash.1kydX5zG.dpuf\u201d} {\u201cBenoit Huot\u201d,\u201dwww.benoithuot.com#sthash.1kydX5zG.dpuf\u201d} {\u201cNicole Forrester\u201d,\u201dwww.nicole-forrester.blogspot.com/#sthash.1kydX5zG.dpuf\u201d} {\u201cAlexandra Orlando\u201d,\u201dwww.alexandraorlando.ca/#sthash.1kydX5zG.dpuf\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'The blog where an athlete publishes'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'UniversityLedMusicFestival'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'agentParticipatedInEvent'</generalizations><domain>u'university'</domain><range>u'musicfestival'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfUniversityLedMusicFestival'</inverse><seedInstances>u'{\u201dUniversity of Kentucky\u201d,\u201cBoomslang: A Celebration of Sound &amp; Art\u201d} {\u201dMississippi State University\u201d,\u201c2015 Old Main Music Festival\u201d} {\u201dUniversity of Miami\u201d,\u201cFestival Miama\u201d} {\u201cFlorida State University\u201d,\u201cFestival of New Music\u201d} {\u201dUniversity of Tehran\u201d,\u201cSummer Music Festival\u201d} {\u201cHacettepe University\u201d,\u201dInternational Ankara Music Festival\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'identifies the university that led a Musical Festival'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'companyProducesVideoGameSystem'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'company'</domain><range>u'videogamesystem'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfcompanyProducesVideoGameSystem'</inverse><seedInstances>u'{\u201csony\u201d,\u201dpsone\u201d} {\u201csony\u201d,\u201dps2\u201d} {\u201csony\u201d,\u201dps3\u201d} {\u201csony\u201d,\u201dps4\u201d} {\u201cmicrosoft\u201d,\u201dxboxone\u201d} {\u201cmicrosoft\u201d,\u201dxbos360\u201d} {\u201cnintendo\u201d,\u201dwii\u201d} {\u201cnintendo\u201d,\u201d3ds\u201d} {\u201csega\u201d,\u201dsaturn\u201d} {\u201csega\u201d,\u201ddreamcast\u201d} {\u201cmicrosoft\u201d,\u201dxbox\u201d} {\u201cnintendo\u201d,\u201dSNES\u201d} {\u201cnintendo\u201d,\u201dn64\u201d} {\u201cnintendo\u201d,\u201dgame cube\u201d} {\u201csega\u201d,\u201dmega drive\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'company produces a video game system'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'birdMayConsumeProtein'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'bird'</domain><range>u'protein'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfbirdMayConsumeProtein'</inverse><seedInstances>u'{"frugivorous","insects"} {"granivorous","insects"} {"game birds","insects"} {"sparrow","insects"} {"finches","potassium"} {"chiken","insects"} {"chiken","seeds"}  {"frugivourous","seeds"} {"sparrow","seeds"}  '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes the proteins eaten by a bird'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'coachWorksInCountry'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'agentActsInLocation'</generalizations><domain>u'coach'</domain><range>u'country'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfcoachWorksInCountry'</inverse><seedInstances>u'{"hiddink", \u201cusa\u201d} {"bob bradley","tanzania"} {"stoops",\u201dusa\u201d} {"kelvin sampson",\u201dusa\u201d} {"clinton white", "usa"} {\u201csteve spurrier","usa"} {"kelvin sampson","usa"} {"summers",\u201dengland\u201d} {\u201cOswaldo de Oliveira\u201d, \u201cBrazil\u201d} {\u201cTite\u201d, \u201cBrazil\u201d} {\u201cmuricy ramalho\u201d, \u201cBrazil\u201d} {\u201cJose Mourinho\u201d, \u201cengland\u201d} {\u201cmike Tomlin\u201d,\u201dusa\u201d} {\u201cClint Hurdle\u201d,\u201dusa\u201d} {\u201cErick Spoelstra\u201d,\u201dusa\u201d} {\u201cMarc Willmots\u201d,\u201dbelgium\u201d} {\u201cMiguel Herrera\u201d,\u201dMexico\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes the country where a coach works'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'magazineIsLeadByCeo'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'magazine'</domain><range>u'ceo'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfmagazineIsLeadByCeo'</inverse><seedInstances>u"{\u201cFamily Circle\u201d,\u201dJoseph H. Ceryanec\u201d} {\u201cPeople\u201d,\u201dJoseph A. Ripp\u201d} {\u201cnational geographic\u201d,\u201dGary Knell\u201d} {\u201cForbes\u201d,\u201dMike Perlis\u201d} {\u201cGood Housekeeping\u201d,\u201dSteve Swartz\u201d} {\u201creaders digest\u201d,\u201dRobert Guth\u201d} {\u201cGame Informer\u201d,\u201d J. Paul Raines\u201d} {\u201cAwake!\u201d,\u201dW. H. Conley\u201d} {\u201cTesco Magazine\u201d,\u201dJohn D. Wren\u201d} {\u201cWhat's Cooking\u201d,\u201dSteve Lacy\u201d} {\u201cChatelaine\u201d,\u201dGuy Laurence\u201d} {\u201cMclean's\u201d,\u201dGuy Laurence\u201d} {\u201cCanadian Living\u201d,\u201dFrancois Olivier\u201d} {\u201cStyle at Home\u201d,\u201dFrancois Olivier\u201d} {\u201cAsda Magazine\u201d,\u201dMaurice Levy\u201d}"</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Identifies the CEO of a Magazine'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'musicSongIsATrackOfMusicAlbum'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'musicSong'</domain><range>u'musicalbum'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfmusicSongIsATrackOfMusicAlbum'</inverse><seedInstances>u'{"lazaretto","lazaretto"} {"sixteen saltines","blunderbus"} {"Something From Nothing","Sonic Highways"} {"Bridge Burning","Wasting Light"} {"Dear Rosemary","Wasting Light"} {"Walk","Wasting Light"} {"I Sat By the Ocean","Like Clockwork"} {"Quasar","Oceania"} {"Go Right Ahead","Lex Hives"} {"Superhuman","Contraband"}  {\u201cNo One Knows\u201d,\u201dSong for the Deaf\u201d} {\u201cA Song for the Dead\u201d,\u201dSong for the Deaf\u201d} {\u201cFeel good hit of the Summer\u201d,\u201dRated R\u201d} {\u201cThe lost art of keeping a secret\u201d,\u201dRated R\u201d} {\u201cWarning\u201d,\u201dWarning\u201d} {\u201cWaiting\u201d,\u201dWarning\u201d} {\u201cMinority\u201d,\u201dWarning\u201d} {\u201cTerrible Lie\u201d,\u201dPretty Hate Machine\u201d} {\u201cSomething i can never have\u201d,\u201dPretty Hate Machine\u201d} {\u201cThe day the world went away\u201d,\u201dThe Fragile\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Identifies a music song which is a track of a music album'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'arachnidIsEatenByBird'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'animalPreysOn'</generalizations><domain>u'arachnid'</domain><range>u'bird'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfarachnidIsEatenByBird'</inverse><seedInstances>u'{"scorpions","wild birds"} {"scorpions","songbirds"} {"scorpions","penguins"} {"scorpions","owls"} {"scorpions","ducks"} {"scorpions","chickens"} {"ticks","wild birds"} {"ticks","songbirds"} {"ticks","penguins"} {"ticks","parrots"} {"ticks","owls"} {"ticks","hummingbirds"} {"ticks","eagles"} {"ticks","eagle"} {"ticks","ducks"} {"ticks","chickens"} {"tarantulas","exotic birds"}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes arachnids that are hunted and eaten by this bird'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'islandHasSkiArea'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'island'</domain><range>u'skiarea'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfislandHasSkiArea'</inverse><seedInstances>u"{\u201cIceland\u201d,\u201dBlafjoll\u201d} {\u201cIceland\u201d,\u201dHlidarfjall\u201d} {\u201cVancouver Island\u201d,\u201dMount Washington Ski Resort\u201d} {\u201cCentral North Island\u201d,\u201dWhakapapa's\u201d} {\u201cCentral North Island\u201d,\u201dTuroa\u201d} {\u201cCentral North Island\u201d,\u201dTukino\u201d} {\u201cNew Zeland's North Island\u201d,\u201dTaranaki\u201d} {\u201cVancouver Island\u201d,\u201dMt. Cain Ski Resort\u201d}"</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes island that have ski a area'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'hotelWasBuiltAtFarm'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'locationLocatedWithinLocation'</generalizations><domain>u'hotel'</domain><range>u'farm'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfhotelWasBuiltAtFarm'</inverse><seedInstances>u"{\u201cKnott's Berry Farm Resort Hotel\u201d,\u201dKnott's Berry Farm\u201d} {\u201cSecluded Boutique Hotel\u201d,\u201d1929 Plantation\u201d} {\u201cFarmhouse Hotel\u201d,\u201dXV century farm\u201d} {\u201cPark Farm Country Hotel\u201d,\u201dA Norwich Farm\u201d} {\u201cElvey farm hotel\u201d,\u201dElvey farm\u201d} {\u201cDays Inn Woodbury\u201d,\u201dWoodybury Farm\u201d} {\u201cBest Wester Woodbury Inn\u201d,\u201dWoodbury Farm\u201d} {\u201cBillerwell Farmhouse Bed &amp; Breakfast\u201d,\u201dBillerwell Farmhouse\u201d} {\u201cPenquite Farm Hotel\u201d,\u201dPenquite Farm\u201d} {\u201cMennabroom Farm Cottages\u201d, \u201cMennabroom Farm\u201d} {\u201cDowns Barn Farm Hotel\u201d,\u201dDowns Barn Farm\u201d}"</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes hotels built at farms'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'DiseaseMayBeCausedByDrug'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'disease'</domain><range>u'drug'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfDiseaseMayBeCausedByDrug'</inverse><seedInstances>u'{"heart disease","caffeine"} {"cancer","acid"} {"blood pressure","caffeine"} {"cancer","calcium"} {"suburb","april"} {"side effects","hormones"} {"type 2 diabetes","caffeine"}  {"surgeon","epitome"} {"surgeon","cyclobenzaprine"} {\u201dhallucinations\u201d,\u201ccimetidine\u201d} {\u201dhallucinations\u201d,\u201cranitidine\u201d} {\u201dhallucinations\u201d,\u201cfamotidine\u201d} {\u201cheart disease\u201d,\u201dcocaine\u201d} {\u201ccirrhosis\u201d,\u201dtabacco\u201d} {\u201cheart disease\u201d,\u201dheroin\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes a disease that can be caused by a drug'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'politicianUsWentToSchool'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'politicianus'</domain><range>u'school'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfpoliticianUsWentToSchool'</inverse><seedInstances>u'{\u201cBarack Obama\u201d,\u201dPunahou School\u201d} {\u201cGeorge W. Bush\u201d,\u201dHarvard Business School\u201d} {\u201cWoodrow Wilson \u201d,\u201dDavidson College\u201d} {\u201cFranklin D. Roosevelt\u201d,\u201dHarvard University\u201d} {\u201cJohn F. Kennedy\u201d,\u201dHarvard University\u201d} {\u201cJohn F. Kennedy\u201d,\u201dLondon School of Economics\u201d} {\u201cEdward Davey\u201d,\u201dJesus College\u201d} {\u201cEdward Garnier\u201d,\u201dJesus College\u201d} {\u201cNeal Blewett\u201d,\u201dJesus College\u201d} {\u201cJoseph Clearihue\u201d,\u201dJesus College\u201d} {\u201cHarold Wilson\u201d,\u201dJesus College\u201d} {\u201cVladimir Putin\u201d,\u201dLeningrad State University\u201d} {\u201cAl gore\u201d,\u201dHarvard College\u201d} {\u201cHailemariam Desalegn Boshe\u201d,\u201dAddis Ababa University\u201d} {\u201cBill Peduto\u201d,\u201dPittsburgh University\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext (915)'</author><curator>u' '</curator><description>u'Describes the school where a US politician studied'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'stadiumOrEventVenuedisclosesCompany'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'stadiumoreventvenue'</domain><range>u'company'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfstadiumOrEventVenuedisclosesCompany'</inverse><seedInstances>u'{"quicken loans arena","wews"} {"pirates cove","wews"} {"ohio theatre   playhouse square","wews"} {"browns stadium","wews"} {"air canada center\u201d,"wews"} {"air canada center","westjet"} {"usana amphitheater","skywest"} {"energysolutions arena","skywest"} {\u201cLucas Oil Stadium\u201d,\u201dLucas Oil\u201d} {\u201cCenturyLink Field\u201d,\u201dCenturyLink\u201d} {\u201cEmirates Stadium\u201d,\u201dEmirates\u201d} {\u201cSuncorp Stadium\u201d,\u201dSuncorp-Metway\u201d} {\u201cAviva Stadium\u201d,\u201dAviva\u201d} {\u201cAllianz Parque Arena\u201d,\u201dAllianz\u201d} {\u201cEmirates Durham International Cricket Ground\u201d,\u201dEmirates\u201d}  {\u201cBrit Oval\u201d,\u201dBrit Insurance\u201d} {\u201cEst\xe1dio Municipal de Braga\u201d,\u201dAXA\u201d} {\u201cBootham Crescent\u201d,\u201dNestle\u201d} {\u201cPriestfield Stadium\u201d,\u201dKent Reliance Building Society\u201d} {\u201cRebook Stadium\u201d,\u201dBurden Way\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'06 04 2015'</editDate><author>u'Prophet+Ontext'</author><curator>u''</curator><description>u'Describes a stadium or event venue that discloses a company'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfKilledInBombing'</relationName><humanFormat>u'arg1 is the number of people {killed in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingKilled'</inverse><seedInstances>u'{\u201c3\u201d,\u201dBoston Marathon bombings\u201d} {\u201c145\u201d,\u201d2014 Peshawar School Massacre\u201d}  {\u201c18\u201d,\u201d2007 Zahedan bombings\u201d} {\u201c82\u201d,\u201dAleppo University bombings\u201d} {\u201c364\u201d,\u201dBombing of Plaza de Mayo\u201d} {"Nine","1327689011"} {"12","1315999912"} {"two","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"21","Iraq: Militants set off own car bomb, 21 dead"} {"one","Death toll in Beirut blast rises to 7"} {"71","Nigerian bus station bombing kills 71 on edge of capital"} {"22","18 Shia pilgrims killed in Pakistan"} {"Three","Three killed in Lebanese suicide bombing"} {"13","12 killed and many injured in Pakistan blast"} {"four","Car bomb hits Shiite suburb of Beirut, killing 2"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'victimInBombing'</relationName><humanFormat>u'arg1 was a {victim in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingVictim'</inverse><seedInstances>u'{\u201cKrystle Marie Campbell\u201d,\u201dBoston Marathon bombings\u201d} {\u201cLu Lingzi\u201d,\u201dBoston Marathon bombings\u201d} {\u201cMartin William Richard\u201d,\u201dBoston Marathon bombings\u201d} {\u201cStudents\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cGuards\u201d,\u201d2007 Zahedan bombings\u201d} {\u201cStudents\u201d,\u201dAleppo University bombings\u201d} {\u201cCivilians\u201d,\u201dBombing of Plaza de Mayo\u201d} {"12 people","1326222641"} {"four children","1326222641"} {"four people","1326222641"} {"three women","1326222641"} {"14 people","1315999912"} {"12 policeman","Bombing at Egypt police station kills 12"} {"13 people","Bombing at Egypt police station kills 12"} {"girl","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"two people","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"instructor","Iraq: Militants set off own car bomb, 21 dead"} {"militant","Iraq: Militants set off own car bomb, 21 dead"} {"70 people","70 killed in Nigeria bus blasts"} {"Mohammad Shaar","Death toll in Beirut blast rises to 7"} {"Mohammad al-Chaar","Death toll in Beirut blast rises to 7"} {"two people","Blast hits Bangkok"} {"15 people","16 killed in suicide bombing in Russia\'s south"} {"71 people","Nigerian bus station bombing kills 71 on edge of capital"} {"six people","Bombing wave hits Egypt amid fear of more violence"} {"20 people","Bomb kills 20 at Pakistan vegetable market"} {"31 people","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"22 people","18 Shia pilgrims killed in Pakistan"} {"Shia pilgrims","18 Shia pilgrims killed in Pakistan"} {"troops","Three killed in Lebanese suicide bombing"} {"51 people","Twin blasts kill at least 35 in Nigeria"} {"six people","Deadly blast sets Egypt on edge ahead of revolt&amp;#x2019;s anniversary"} {"Akhtar Ali","12 killed and many injured in Pakistan blast"} {"Fazal Akbar","12 killed and many injured in Pakistan blast"} {"Hussain Ghulam","12 killed and many injured in Pakistan blast"} {"Sohrab","12 killed and many injured in Pakistan blast"} {"five people","Beirut bombing: Thurs. blast in Hezbollah-run area of Beirut claimed 5 lives"} {"four people","Car bomb hits Shiite suburb of Beirut, killing 2"} {"nine persons","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"51 people","90 killed in 2 attacks in northern Nigeria"} {"children","90 killed in 2 attacks in northern Nigeria"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfInjuredInBombing'</relationName><humanFormat>u'arg1 is the number of people {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingInjured'</inverse><seedInstances>u'{\u201c264\u201d,\u201dBoston Marathon bombings\u201d} {\u201c114\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201c31\u201d,\u201d2007 Zahedan bombings\u201d} {\u201c160\u201d,\u201dAleppo University bombings\u201d} {\u201c700\u201d,\u201dBombing of Plaza de Mayo\u201d} {"60","1327689011"} {"90","1326222641"} {"17","1315999912"} {"100","Bombing at Egypt police station kills 12"} {"28","Blasts Injure 28 protesters in Bangkok"} {"124","70 killed in Nigeria bus blasts"} {"dozens","Blast hits Bangkok"} {"three","Blast hits Bangkok"} {"four","Israel bombs Syria army targets after Golan attack"} {"124","Nigerian bus station bombing kills 71 on edge of capital"} {"70","Bomb kills 20 at Pakistan vegetable market"} {"24","18 Shia pilgrims killed in Pakistan"} {"four","Three killed in Lebanese suicide bombing"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'commentatorOfBombing'</relationName><humanFormat>u'arg1 {commented about} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingCommentedBy'</inverse><seedInstances>u'{\u201cBarack Obama\u201d,\u201dBoston Marathon bombings\u201d} {\u201cChris Buckley\u201d,\u201dBoston Marathon bombings\u201d} {\u201cPetr Gandalovic\u201d,\u201dBoston Marathon bombings\u201d} {\u201cRamzan Kadyrov\u201d,\u201dBoston Marathon bombings\u201d} {\u201cMichael Cohen\u201d,\u201dBoston Marathon bombings\u201d} {"Assam Chief Minister Tarun Gogoi","1327689011"} {"Chief Minister Tarun Gogoi","1327689011"} {"Interior Ministry Chief Rehman Malik","1315999912"} {"Nasir Durrani","1315999912"} {"President Asif Ali Zardari","1315999912"} {"Interior Minister Mohammed Ibrahim","Bombing at Egypt police station kills 12"} {"Prime Minister Hazem el-Beblawi","Bombing at Egypt police station kills 12"} {"Sherif Shawki","Bombing at Egypt police station kills 12"} {"Nantiya Thientawatchai","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Paradorn Pattanathuabutr","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Sathit Wongnongtoey","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Thanabhum Newanit","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Abbas Idris","70 killed in Nigeria bus blasts"} {"Air Commodore Charles Otegbade","70 killed in Nigeria bus blasts"} {"Police spokesman Frank Mba","70 killed in Nigeria bus blasts"} {"Prime Minister Yingluck Shinawatra","Blast hits Bangkok"} {"Defence Minister Moshe Yaalon","Israel bombs Syria army targets after Golan attack"} {"Andrei Soldatov","16 killed in suicide bombing in Russia\'s south"} {"Vladimir Markin","16 killed in suicide bombing in Russia\'s south"} {"Kole Shettima","Nigerian bus station bombing kills 71 on edge of capital"} {"Health Saira Afzal Tarar","Bomb kills 20 at Pakistan vegetable market"} {"Javed Akram Qazi","Bomb kills 20 at Pakistan vegetable market"} {"Shahidullah Shahid","Bomb kills 20 at Pakistan vegetable market"} {"Vice Chancellor Prof Javed Akram","Bomb kills 20 at Pakistan vegetable market"} {"market worker","Bomb kills 20 at Pakistan vegetable market"} {"President Mamnoon Hussain","18 Shia pilgrims killed in Pakistan"} {"Prime Minister Nawaz Sharif","18 Shia pilgrims killed in Pakistan"} {"government official Shafqat Shahwani","18 Shia pilgrims killed in Pakistan"} {"Prime Minister Tammam Salam","Three killed in Lebanese suicide bombing"} {"Borno state police commissioner Lawal Tanko","Twin blasts kill at least 35 in Nigeria"} {"MQM chief Altaf Hussain","12 killed and many injured in Pakistan blast"} {"Lebanese Red Cross","Car bomb hits Shiite suburb of Beirut, killing 2"} {"Hassan Ali","90 killed in 2 attacks in northern Nigeria"} {"Red Cross official","90 killed in 2 attacks in northern Nigeria"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'locationOfBombing'</relationName><humanFormat>u'arg1 is the {location of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'location'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingOccuredIn'</inverse><seedInstances>u'{\u201cBoston\u201d,\u201dBoston Marathon bombings\u201d} {\u201cPeshawar\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cZahedan\u201d,\u201d2007 Zahedan bombings\u201d} {\u201cAleppo\u201d,\u201dAleppo University bombings\u201d} {\u201cBuenos Aires\u201d,\u201dBombing of Plaza de Mayo\u201d} {"Assam","1327689011"} {"Sadr City","1326222641"} {"Sadr City slum","1326222641"} {"UM Al-maaleef market","1326222641"} {"Pakistan","1315999912"} {"Rawalpindi","1315999912"} {"Mansoura","Bombing at Egypt police station kills 12"} {"BANGKOK","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Ratchaprasong intersection","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Bangkok","Blasts Injure 28 protesters in Bangkok"} {"protest site","Blasts Injure 28 protesters in Bangkok"} {"BAGHDAD","Iraq: Militants set off own car bomb, 21 dead"} {"training camp","Iraq: Militants set off own car bomb, 21 dead"} {"Abuja","70 killed in Nigeria bus blasts"} {"bus station","70 killed in Nigeria bus blasts"} {"Beirut","Death toll in Beirut blast rises to 7"} {"Bangkok","Blast hits Bangkok"} {"Central World shopping mall","Blast hits Bangkok"} {"shopping district","Blast hits Bangkok"} {"Golan","Israel bombs Syria army targets after Golan attack"} {"Syria","Israel bombs Syria army targets after Golan attack"} {"army positions","Israel bombs Syria army targets after Golan attack"} {"Volgograd","16 killed in suicide bombing in Russia\'s south"} {"railway station","16 killed in suicide bombing in Russia\'s south"} {"ABUJA","Nigerian bus station bombing kills 71 on edge of capital"} {"bus station","Nigerian bus station bombing kills 71 on edge of capital"} {"Cairo","Bombing wave hits Egypt amid fear of more violence"} {"security compound","Bombing wave hits Egypt amid fear of more violence"} {"Islamabad","Bomb kills 20 at Pakistan vegetable market"} {"vegetable market","Bomb kills 20 at Pakistan vegetable market"} {"Baghdad","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Industrial Stadium","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Balochistan province","18 Shia pilgrims killed in Pakistan"} {"bus","18 Shia pilgrims killed in Pakistan"} {"BAALBEK","Three killed in Lebanese suicide bombing"} {"Maiduguri","Twin blasts kill at least 35 in Nigeria"} {"Cairo","Deadly blast sets Egypt on edge ahead of revolt&amp;#x2019;s anniversary"} {"KOHAT","12 killed and many injured in Pakistan blast"} {"Peshawar Chowk","12 killed and many injured in Pakistan blast"} {"Beirut","Beirut bombing: Thurs. blast in Hezbollah-run area of Beirut claimed 5 lives"} {"Beirut","Car bomb hits Shiite suburb of Beirut, killing 2"} {"Koocha Risaldar street","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"PESHAWAR","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"Qissa Khwani Bazaar","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"Maiduguri","90 killed in 2 attacks in northern Nigeria"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'attackerInBombing'</relationName><humanFormat>u'arg1 is the {attacker in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'agent'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingAttacker'</inverse><seedInstances>u'{\u201cDzhokhar Tsarnaev\u201d,\u201dBoston Marathon bombings\u201d} {\u201cTamerlan Tsarnaev\u201d,\u201dBoston Marathon bombings\u201d} {\u201cTehrik-i-Taliban Pakistan\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cJundallah\u201d,\u201d2007 Zahedan bombings\u201d} {\u201cUnknown\u201d,\u201dAleppo University bombings\u201d} {"Ulfa","1327689011"} {"Ulfa terrorists","1327689011"} {"United Liberation Front","1327689011"} {"suicide bomber","1315999912"} {"Ansar Beit al-Maqdis","Bombing at Egypt police station kills 12"} {"Muslim Brotherhood","Bombing at Egypt police station kills 12"} {"ISIL","Iraq: Militants set off own car bomb, 21 dead"} {"al-Qaida breakaway group","Iraq: Militants set off own car bomb, 21 dead"} {"Boko Haram","70 killed in Nigeria bus blasts"} {"Gunmen","Blast hits Bangkok"} {"Israel","Israel bombs Syria army targets after Golan attack"} {"Israel Defense Forces","Israel bombs Syria army targets after Golan attack"} {"Chechen rebel leader Doku Umarov","16 killed in suicide bombing in Russia\'s south"} {"Islamist insurgency","16 killed in suicide bombing in Russia\'s south"} {"female suicide bomber","16 killed in suicide bombing in Russia\'s south"} {"suicide bomber","16 killed in suicide bombing in Russia\'s south"} {"Boko Haram","Nigerian bus station bombing kills 71 on edge of capital"} {"Boko Haram militants","Nigerian bus station bombing kills 71 on edge of capital"} {"Levant","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Baalbek Brigade","Three killed in Lebanese suicide bombing"} {"suicide bomber","Three killed in Lebanese suicide bombing"} {"Boko Haram","Twin blasts kill at least 35 in Nigeria"} {"Ansar Beit al-Maqdis","Deadly blast sets Egypt on edge ahead of revolt&amp;#x2019;s anniversary"} {"Al-Nusra Front","Car bomb hits Shiite suburb of Beirut, killing 2"} {"TTP","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'damagedInBombing'</relationName><humanFormat>u'arg1 was {dameged in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'geolocatablething'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingDamaged'</inverse><seedInstances>u'{\u201csidewalk\u201d,\u201dBoston Marathon bombings\u201d} {\u201cThe army public school\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cAleppo University\u201d,\u201dAleppo University bombings\u201d} {\u201cPlaza de Mayo\u201d,\u201dBombing of Plaza de Mayo\u201d} {"cars","1327689011"} {"houses","1327689011"} {"motorcycles","1327689011"} {"buildings","1326222641"} {"buildings","1315999912"} {"restaurant","1315999912"} {"vehicles","1315999912"} {"bank","Bombing at Egypt police station kills 12"} {"buildings","Bombing at Egypt police station kills 12"} {"police vehicles","Bombing at Egypt police station kills 12"} {"theater","Bombing at Egypt police station kills 12"} {"16 luxury coaches","70 killed in Nigeria bus blasts"} {"24 minibuses","70 killed in Nigeria bus blasts"} {"vehicles","70 killed in Nigeria bus blasts"} {"buildings","Twin blasts kill at least 35 in Nigeria"} {"buildings","90 killed in 2 attacks in northern Nigeria"} {"cars","1327689011"} {"houses","1327689011"} {"motorcycles","1327689011"} {"buildings","1326222641"} {"buildings","1315999912"} {"restaurant","1315999912"} {"vehicles","1315999912"} {"bank","Bombing at Egypt police station kills 12"} {"buildings","Bombing at Egypt police station kills 12"} {"police vehicles","Bombing at Egypt police station kills 12"} {"theater","Bombing at Egypt police station kills 12"} {"16 luxury coaches","70 killed in Nigeria bus blasts"} {"24 minibuses","70 killed in Nigeria bus blasts"} {"vehicles","70 killed in Nigeria bus blasts"} {"buildings","Twin blasts kill at least 35 in Nigeria"} {"buildings","90 killed in 2 attacks in northern Nigeria"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'bombingHasWitness'</relationName><humanFormat>u'arg2 was a {witness in} the event arg1 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingWitness'</inverse><seedInstances>u'{\u201cJeff Bauman\u201d,\u201dBoston Marathon bombings\u201d} {\u201cSchool Staff\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cIslamic Revolutionary Guards Corps\u201d,\u201d2007 Zahedan bombings\u201d} {\u201cStudents\u201d,\u201dAleppo University bombings\u201d} {\u201cCivilians\u201d,\u201dBombing of Plaza de Mayo\u201d} {"Abdul-Jabar Saad","1326222641"} {"Eyewitness Mimi Daniels","70 killed in Nigeria bus blasts"} {"Mimi Daniels","Nigerian bus station bombing kills 71 on edge of capital"} {"two Associated Press reporters","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Ali Oleik","Beirut bombing: Thurs. blast in Hezbollah-run area of Beirut claimed 5 lives"} {"Associated Press reporter","90 killed in 2 attacks in northern Nigeria"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'targetInBombing'</relationName><humanFormat>u'arg1 was the {target in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everyPromotedThing'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingtarget'</inverse><seedInstances>u'{\u201cBoston Marathon\u201d,\u201dBoston Marathon bombings\u201d} {\u201cArmy Public School\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cIslamic Revolutionary Guards Corps\u201d,\u201d2007 Zahedan bombings\u201d} {\u201cPlaza de Mayo\u201d,\u201dBombing of Plaza de Mayo\u201d} {"Interior Ministry official","1326222641"} {"police convoy","1326222641"} {"security forces","Bombing at Egypt police station kills 12"} {"protesters","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"police","Bombing wave hits Egypt amid fear of more violence"} {"Shiite militias","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"army checkpoint","Three killed in Lebanese suicide bombing"} {"Hezbollah group","Car bomb hits Shiite suburb of Beirut, killing 2"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'injuredInBombing'</relationName><humanFormat>u'arg1 was {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingInjuried'</inverse><seedInstances>u'{\u201cJeff Bauman\u201d,\u201dBoston Marathon bombings\u201d} {\u201cStudents\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cStudents\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cGuards\u201d,\u201d2007 Zahedan bombings\u201d} {\u201cCivilians\u201d,\u201dBombing of Plaza de Mayo\u201d} {"Salim Mutar","1326222641"} {"101 people","Bombing at Egypt police station kills 12"} {"three dozen people","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"protesters","Blasts Injure 28 protesters in Bangkok"} {"children","Blast hits Bangkok"} {"soldiers","Israel bombs Syria army targets after Golan attack"} {"70 people","Bomb kills 20 at Pakistan vegetable market"} {"14 others","12 killed and many injured in Pakistan blast"} {"35 people","Car bomb hits Shiite suburb of Beirut, killing 2"} {"50 others","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"five children","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"nine women","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'explosivesInBombing'</relationName><humanFormat>u'arg1 was the explosive type {used in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'chemical'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingCausedByExplosive'</inverse><seedInstances>u'{\u201clow explosive\u201d,\u201dBoston Marathon bombings\u201d} {\u201csuicidal bomber\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201cMissiles\u201d,\u201dAleppo University bombings\u201d} {\u201cnuke\u201d,\u201dBombing of Plaza de Mayo\u201d} {"IED","1327689011"} {"bomb","1327689011"} {"grenade","1327689011"} {"car bombs","1326222641"} {"grenade","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"ball bearings","12 killed and many injured in Pakistan blast"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'timeOfBombing'</relationName><humanFormat>u'arg1 is the {time of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'time'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingEventTime'</inverse><seedInstances>u'{\u201c2:49 pm\u201d,\u201dBoston Marathon bombings\u201d} {\u201c10:30 pm\u201d,\u201d2014 Peshawar School Massacre\u201d} {\u201c6:30 pm\u201d,\u201d2007 Zahedan bombings\u201d} {\u201c12:40 pm\u201d,\u201dBombing of Plaza de Mayo\u201d} {"1:10 a.m.","Bombing at Egypt police station kills 12"} {"2014","70 killed in Nigeria bus blasts"} {"6:45","70 killed in Nigeria bus blasts"} {"April 14","70 killed in Nigeria bus blasts"} {"8:00 pm","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfArrestedInBombing'</relationName><humanFormat>u'arg1 is the number of {arrested in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingArrested'</inverse><seedInstances>u'{"24","Iraq: Militants set off own car bomb, 21 dead"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'securityInBombing'</relationName><humanFormat>u'arg1 was responsible for {security in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'agent'</domain><range>u'bombingEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'bombingSecurity'</inverse><seedInstances>u'{\u201cBoston Police\u201d,\u201dBoston Marathon bombings\u201d} {\u201cAfghan security forces\u201d,\u201d2014 Peshawar school massacre\u201d} {\u201cIslamic Revolutionary Guards Corps\u201d,\u201d2007 Zahedan bombings\u201d} {"security forces","Iraq: Militants set off own car bomb, 21 dead"} {"soldiers","16 killed in suicide bombing in Russia\'s south"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'locationOfEarthquake'</relationName><humanFormat>u'arg1 is the {location of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'location'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeOcurredIn'</inverse><seedInstances>u'{\u201cNew Zealand\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201cJapan\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201cNicaragua\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201cSan Francisco\u201d,\u201d1906 San Francisco earthquake\u201d} {\u201cAfrica\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"Japan","Violent Earthquake Hits Japan, Disrupts Toyota, Honda, Nissan Production"} {"Xinjiang","Quake rocks China, no casualities reported"} {"Philippines","Philippines rocked by 20 earthquakes in two days"} {"Taiwan","Magnitude-5.4 earthquake hits North Taiwan"} {"Turkey","Earthquake strikes south of Turkey"} {"Chile","Strong quake jolts Chile\'s North, no major damage"} {"Japan","Tokyo 5.5 Magnitude Earthquake Shakes Buildings, No Injuries Reported"} {"HEALDSBURG","4.5 Magnitude Quake Rattles Sonoma County"} {"Guerrero","Strong quake shakes Mexico, breaks bridge"} {"Sumatra island","6.2-magnitude earthquake strikes off Indonesia"} {"TOKYO","Big earthquake shakes Tokyo, 17 injured"} {"Nawabshah","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"Guerrero state","Strong quake shakes Mexico City"} {"Guerrero state","Strong earthquake shakes Mexico\'s Pacific coast"} {"Nawabshah","One dead, 30 injured in southern Pakistan quakes"} {"Bangkok","Strong earthquake shakes northern Thailand"} {"Chiang Rai","Quake causes light damage in Thailand, Myanmar"} {"Myanmar","Quake causes light damage in Thailand, Myanmar"} {"Phan district","Quake causes light damage in Thailand, Myanmar"} {"Thailand","Quake causes light damage in Thailand, Myanmar"} {"Myanmar","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"Thailand","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"Guerrero state","Strong earthquake shakes Mexico City"} {"TOKYO","Big quake rattles Tokyo, 17 injured"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'timeOfEarthquake'</relationName><humanFormat>u'arg1 is the {time of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'time'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeEventTime'</inverse><seedInstances>u'{\u201c12:51 pm\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201c2:46 pm\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201c7:30 pm\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201c7:34 am\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"7.07am","Two earthquakes hit the East Midlands"} {"12.24","4.5 Magnitude Quake Rattles Sonoma County"} {"5:18","Big earthquake shakes Tokyo, 17 injured"} {"3:51am","One dead, 30 injured in southern Pakistan quakes"} {"6:08 pm","Strong earthquake shakes northern Thailand"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'sourceOfEarthquake'</relationName><humanFormat>u'arg1 is the {source of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everypromotedthing'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeHadSource'</inverse><seedInstances>u'{"British Geological Survey","Two earthquakes hit the East Midlands"} {"US Geological Survey","Quake rocks China, no casualities reported"} {"Central Weather Bureau","Magnitude-5.4 earthquake hits North Taiwan"} {"Pacific Tsunami Warning Centre","Strong quake jolts Chile\'s North, no major damage"} {"U.S. Geological Survey","4.5 Magnitude Quake Rattles Sonoma County"} {"Pacific Tsunami Warning Center","Strong quake shakes Mexico, breaks bridge"} {"U.S. Geological Survey","Strong quake shakes Mexico City"} {"U.S. Geological Survey","Strong earthquake shakes Mexico\'s Pacific coast"} {"US Geological Survey","One dead, 30 injured in southern Pakistan quakes"} {"US Geological Survey","Strong earthquake shakes northern Thailand"} {"U.S. Geological Survey","Quake causes light damage in Thailand, Myanmar"} {"U.S. Geological Survey","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"USGS","Strong earthquake shakes Mexico City"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'epicenterOfEarthquake'</relationName><humanFormat>u'arg1 is the {epicenter of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'geolocatablething'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeHadEpicenter'</inverse><seedInstances>u'{\u201c43.5834\xb0S 172.7012\xb0E\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201c38.322\xb0N 142.369\xb0E\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201c11.884\xb0N 85.988\xb0W\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201c37.75\xb0N 122.55\xb0W\u201d,\u201d1906 San Francisco earthquake\u201d} {\u201c2.314\xb0S 28.896\xb0E\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"Oakham","Two earthquakes hit the East Midlands"} {"Yutian county","Quake rocks China, no casualities reported"} {"Avsallar","Earthquake strikes south of Turkey"} {"Mediterranean Sea","Earthquake strikes south of Turkey"} {"Iquique","Strong quake jolts Chile\'s North, no major damage"} {"Geysers","4.5 Magnitude Quake Rattles Sonoma County"} {"Guerrero state","Strong quake shakes Mexico, breaks bridge"} {"BANDA ACEH","6.2-magnitude earthquake strikes off Indonesia"} {"Izu Oshima island southwest","Big earthquake shakes Tokyo, 17 injured"} {"Tecpan de Galeana","Strong quake shakes Mexico City"} {"Tecpan de Galeana","Strong earthquake shakes Mexico\'s Pacific coast"} {"Taj Colony neighbourhood","One dead, 30 injured in southern Pakistan quakes"} {"Chiang Rai","Strong earthquake shakes northern Thailand"} {"Mae Lao","Quake causes light damage in Thailand, Myanmar"} {"Chiang Rai","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"Tecpan de Galeana","Strong earthquake shakes Mexico City"} {"Izu Oshima island southwest","Big quake rattles Tokyo, 17 injured"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'damagedInEarthquake'</relationName><humanFormat>u'arg1 was {damaged in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'geolocatablething'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeDamaged'</inverse><seedInstances>u'{\u201cNew Zealand\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201cTohoku\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201cHouses\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201cSan Francisco\u201d,\u201d1906 San Francisco earthquake\u201d} {\u201cRwanda\u201d,\u201d2008 Lake Kivu earthquake\u201d} {\u201cBurundi\u201d,\u201d2008 Lake Kivu earthquake\u201d} {\u201cDr Congo\u201d,\u201d2008 Lake Kivu earthquake\u201d} {\u201cKenya\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"bridge","Strong earthquake shakes Mexico City"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'magnitudeOfEarthquaque'</relationName><humanFormat>u'arg1 is the {magnitude of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everypromotedthing'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeHadMagnitude'</inverse><seedInstances>u'{\u201c6.3 M\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201c9.0 M\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201c5.2 M\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201c7.8 M\u201d,\u201d1906 San Francisco earthquake\u201d} {\u201c5.9 M\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"3.2","Two earthquakes hit the East Midlands"} {"6.9","Quake rocks China, no casualities reported"} {"7.0,","Strong quake jolts Chile\'s North, no major damage"} {"4.5","4.5 Magnitude Quake Rattles Sonoma County"} {"6.8","Strong quake shakes Mexico, breaks bridge"} {"6.4","6.2-magnitude earthquake strikes off Indonesia"} {"5.8","Big earthquake shakes Tokyo, 17 injured"} {"4.3","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"4.7","One dead, 30 injured in southern Pakistan quakes"} {"6.0","Quake causes light damage in Thailand, Myanmar"} {"6.3","Strong earthquake shakes Mexico City"} {"5.8","Big quake rattles Tokyo, 17 injured"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'commentatorOfEarthquake'</relationName><humanFormat>u'arg1 {commented about} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeComentedBy'</inverse><seedInstances>u'{"Xinjiang earthquake administration","Quake rocks China, no casualities reported"} {"ONEMI emergency office","Strong quake jolts Chile\'s North, no major damage"} {"U.S. Geological Survey","Strong quake jolts Chile\'s North, no major damage"} {"Mohammed Hashim","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"meteorologist Toseef Ahmed","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"Carmen Lopez","Strong quake shakes Mexico City"} {"businesswoman Carmen Lopez","Strong earthquake shakes Mexico\'s Pacific coast"} {"Ghulam Mustafa","One dead, 30 injured in southern Pakistan quakes"} {"Mohammad Hashim","One dead, 30 injured in southern Pakistan quakes"} {"Japan Meteorological Agency","Big quake rattles Tokyo, 17 injured"} {"US Geological Survey","Big quake rattles Tokyo, 17 injured"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'InjuredInEarthquake'</relationName><humanFormat>u'arg1 was {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'victim'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeInjured'</inverse><seedInstances>u'{\u201cCivilians\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201cCivilians\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201cCivilians\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201cCivilians\u201d,\u201d1906 San Francisco earthquake\u201d} {\u201cCivilians\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"17 people","Big earthquake shakes Tokyo, 17 injured"} {"17 people","Big quake rattles Tokyo, 17 injured"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'victimInEarthquake'</relationName><humanFormat>u'arg1 was a {victim in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'victim'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeHadVictim'</inverse><seedInstances>u'{\u201cCivilians\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201cCivilians\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201cCivilians\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201cCivilians\u201d,\u201d1906 San Francisco earthquake\u201d} {\u201cCivilians\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"one person","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"two persons","One dead, 30 injured in southern Pakistan quakes"} {"woman","Strong earthquake shakes northern Thailand"}  {"17 people","Big earthquake shakes Tokyo, 17 injured"} {"17 people","Big quake rattles Tokyo, 17 injured"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfInjuredInEarthquake'</relationName><humanFormat>u'arg1 is the number of people {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeInjuredNumber'</inverse><seedInstances>u'{\u201c2000+\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201c6152\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201c42\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201c349\u201d,\u201d2008 Lake Kivu earthquake\u201d} {"30","One dead, 30 injured in southern Pakistan quakes"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfCasualtiesInEarthquake'</relationName><humanFormat>u'arg1 is the number of people that {died in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'earthquakeEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'earthquakeCasualtiesNumber'</inverse><seedInstances>u'{\u201c185\u201d,\u201d2011 Christchurch earthquake\u201d} {\u201c15981\u201d,\u201d2011 T\u014dhoku earthquake and tsunami\u201d} {\u201c7\u201d,\u201d2000 Nicaragua earthquake\u201d} {\u201c3000+\u201d,\u201d1906 San Francisco earthquake\u201d} {\u201c44\u201d,\u201d2008 Lake Kivu earthquake\u201d}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'productLauchCompetingCompany'</relationName><humanFormat>u'arg2 {competes with the company} responsible for arg1 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'company'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'companyCompetingWithProduuctLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Launches Ghost Series II\u201d,\u201dJaguar\u201d} {\u201cLaunch of xbox360\u201d,\u201dsony\u201d} {\u201cLaunch of ps3\u201d,\u201dmicrosoft\u201d} {\u201cLaunch of galaxy s5\u201d,\u201dapple\u201d} {\u201cLaunch of iphone6\u201d,\u201dsamsung\u201d} {"Samsung Galaxy S5","Apple"} {"Samsung Galaxy Gear","Apple"} {"Samsung Galaxy Gear","Huawei"} {"Samsung Galaxy Gear","Pebble"} {"Samsung Galaxy Gear","Sony"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","Android"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","iOS"} {"First Look: HTC One (M8)","Samsung"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","Apple"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","Apple"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'productLauchVenue'</relationName><humanFormat>u'arg1 was {in} arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'location'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'venueOfProductLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Launches Ghost Series II\u201d,\u201dSouth India\u201d} {\u201cLaunch of xbox360\u201d,\u201dusa\u201d} {\u201cLaunch of ps3\u201d,\u201dJapan\u201d} {\u201cLaunch of galaxy s5\u201d,\u201dusa\u201d} {\u201cLaunch of iphone6\u201d,\u201dusa\u201d} {"Samsung Galaxy S5","Mobile World Congress"} {"Samsung Galaxy Gear","Barcelona"} {"Samsung Galaxy Gear","Mobile World Congress"} {"iPhone 5C","Apple Online Store"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","Online"} {"Microsoft confirms Office for Apple iPad","iTunes App Store"} {"Samsung introduces free streaming radio service","Google Play"} {"Nvidia Unveils Mobile Chip \'Faster\' Than PS3: 5 Fast Facts About The Tegra K1","CES 2014"} {"Nvidia Unveils Mobile Chip \'Faster\' Than PS3: 5 Fast Facts About The Tegra K1","Las Vegas"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'productLauchPredecessor'</relationName><humanFormat>u'arg2 was {the predecessor} of the product launched in arg1 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'product'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'predecessorOfProductLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Lauches Ghost Series II\u201d,\u201dRolls Royce Ghost Series I\u201d} {\u201cLaunch of  xbox360\u201d,\u201dxbox\u201d} {\u201cLaunch of ps3\u201d,\u201dps2\u201d} {\u201cLaunch of galaxy s5\u201d,\u201dgalaxy s4\u201d} {\u201cLaunch of iphone6\u201d,\u201diphone5s\u201d} {"Samsung Galaxy S5","Galaxy S4"} {"Samsung Galaxy Gear","Galaxy Gear smartwatch"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","HTC One"} {"First Look: HTC One (M8)","M7"} {"Nvidia Unveils Mobile Chip \'Faster\' Than PS3: 5 Fast Facts About The Tegra K1","Tegra 4"} {"Moto E price, specs, release date, features: \xa389 smartphone set to \'end feature phones\'","Moto G"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","One Mini"} {"LG 2014 Smart TVs: Everything You Need To Know","1080p"} {"LG 2014 Smart TVs: Everything You Need To Know","720p"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'productBeingLauched'</relationName><humanFormat>u'arg2 was the product {launched in} arg1 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'product'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'productOfProductLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Launches Ghost Series II\u201d,\u201dRolls Royce Ghost Series II\u201d} {\u201cLaunch of  xbox360\u201d,\u201dxbox360\u201d} {\u201cLaunch of ps3\u201d,\u201dps3\u201d} {\u201cLaunch of galaxy s5\u201d,\u201dgalaxy s5\u201d} {\u201cLaunch of iphone6\u201d,\u201diphone6\u201d} {"Samsung Galaxy S5","Galaxy S5"} {"Samsung Galaxy Gear","Gear 2"} {"Samsung Galaxy Gear","Gear 2 Neo"} {"Samsung Galaxy Gear","Gear Fit"} {"iPhone 5C","iPhone 5C"} {"Honda NM4 Concept Motorcycle","NM4 Vultus"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","Lumia 1520"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","M8"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","New HTC One"} {"First Look: HTC One (M8)","HTC One"} {"First Look: HTC One (M8)","HTC One M8"} {"Microsoft confirms Office for Apple iPad","Excel"} {"Microsoft confirms Office for Apple iPad","Office"} {"Microsoft confirms Office for Apple iPad","PowerPoint"} {"Microsoft confirms Office for Apple iPad","Word"} {"BlackBerry Z30 Smartphone Now Available On ShopBlackBerry.com in the U.S.","BlackBerry Z30"} {"Samsung introduces free streaming radio service","Internet radio service"} {"Samsung introduces free streaming radio service","Milk Music"} {"Xiaomi\'s Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","Xiaomi Redmi Note"} {"Nvidia Unveils Mobile Chip \'Faster\' Than PS3: 5 Fast Facts About The Tegra K1","Tegra"} {"Nvidia Unveils Mobile Chip \'Faster\' Than PS3: 5 Fast Facts About The Tegra K1","Tegra K1"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","battery life"} {"Microsoft to offer Xbox One without Kinect","Xbox One"} {"LG G3 Fully Detailed Ahead of Launch","LG G3"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","Surface Pro 3"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","Ascend P7"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","Huawei Ascend P7"} {"Moto E price, specs, release date, features: \xa389 smartphone set to \'end feature phones\'","Moto E"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","HTC One Mini 2"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","One Mini 2"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","Moto E"} {"LG 2014 Smart TVs: Everything You Need To Know","4K"} {"Galaxy S5 Zoom To Be Unveiled On April 29th As Samsung Galaxy K","Galaxy S5 Zoom"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'launchingProductCompany'</relationName><humanFormat>u'arg2 was {responsible for} arg1 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'company'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'companyOfProductLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Launches Ghost Series II\u201d,\u201dRolls Royce\u201d} {\u201cLaunch of xbox360\u201d,\u201dmicrosoft\u201d} {\u201cLaunch of ps3\u201d,\u201dsony\u201d} {\u201cLaunch of galaxy s5\u201d,\u201dsamsung\u201d} {\u201cLaunch of iphone6\u201d,\u201dapple\u201d} {"Samsung Galaxy S5","Samsung"} {"Samsung Galaxy Gear","Samsung"} {"iPhone 5C","Apple"} {"Honda NM4 Concept Motorcycle","Honda"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","Nokia"} {"BlackBerry to release 3 new high-end devices targeted toward \'keyboard aficionados\'","BlackBerry"} {"Microsoft confirms Office for Apple iPad","Microsoft"} {"BlackBerry Z30 Smartphone Now Available On ShopBlackBerry.com in the U.S.","BlackBerry"} {"Samsung introduces free streaming radio service","Samsung"} {"Xiaomi\'s Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","Xiaomi"} {"Nvidia Unveils Mobile Chip \'Faster\' Than PS3: 5 Fast Facts About The Tegra K1","Nvidia"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","hacker"} {"Microsoft to offer Xbox One without Kinect","Microsoft"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","Microsoft"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","Huawei"} {"Moto E price, specs, release date, features: \xa389 smartphone set to \'end feature phones\'","Motorola"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","HTC"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","Motorola"} {"LG 2014 Smart TVs: Everything You Need To Know","LG"} {"Galaxy S5 Zoom To Be Unveiled On April 29th As Samsung Galaxy K","Samsung"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'launchingProductType'</relationName><humanFormat>u'the product launched in arg1 {is a} arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'product'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'productTypeOfProductLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Launches Ghost Series II\u201d,\u201dsuper luxury car\u201d} {\u201cLaunch of xbox360\u201d,\u201dvideogamesystem\u201d} {\u201cLaunch of ps3\u201d,\u201dvideogamesystem\u201d} {\u201cLaunch of galaxy s5\u201d,\u201dsmartphone\u201d} {\u201cLaunch of iphone6\u201d,\u201dsmartphone\u201d} {"Samsung Galaxy S5","Android phone"} {"Samsung Galaxy Gear","smartwatches"} {"iPhone 5C","phone"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","phone"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","phone"} {"First Look: HTC One (M8)","smartphone"} {"Microsoft confirms Office for Apple iPad","productivity apps"} {"Xiaomi\'s Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","phablet"} {"Nvidia Unveils Mobile Chip \'Faster\' Than PS3: 5 Fast Facts About The Tegra K1","chip"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","battery"} {"LG G3 Fully Detailed Ahead of Launch","flagship smartphone"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","smartphone"} {"Moto E price, specs, release date, features: \xa389 smartphone set to \'end feature phones\'","smartphone"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","smartphone"} {"LG 2014 Smart TVs: Everything You Need To Know","TV"} {"Galaxy S5 Zoom To Be Unveiled On April 29th As Samsung Galaxy K","zoom"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'prodctLaunchingProductCompetitor'</relationName><humanFormat>u'arg2 is a {competitor of the product launched in} arg1 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'product'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'competitorOfProductLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Launches Ghost Series II\u201d,\u201dBentley Continental Flying Spur\u201d} {\u201cLaunch of xbox360\u201d,\u201dps3\u201d} {\u201cLaunch of ps3\u201d,\u201dxbox360\u201d} {\u201cLaunch of galaxy s5\u201d,\u201diphone6\u201d} {\u201cLaunch of iphone6\u201d,\u201dgalaxy s5\u201d} {"Samsung Galaxy S5","iPhone 5S"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","Galaxy S5"} {"First Look: HTC One (M8)","Galaxy S5"} {"LG G3 Fully Detailed Ahead of Launch","HTC One M8"} {"LG G3 Fully Detailed Ahead of Launch","Samsung Galaxy S5"} {"LG G3 Fully Detailed Ahead of Launch","Xperia Z2"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","iPad"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'prodctLaunchingProductPrice'</relationName><humanFormat>u'arg2 is the {price of the product launched in} arg1 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'productLaunchEvent'</domain><range>u'nonNegInteger'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'priceOfProductLaunch'</inverse><seedInstances>u'{\u201cRolls Royce Launches Ghost Series II\u201d,"216.864"} {\u201cLaunch of xbox360\u201d,\u201d399.99\u201d} {\u201cLaunch of ps3\u201d,\u201d399.99\u201d} {\u201cLaunch of galaxy s5\u201d,\u201d699.99\u201d} {\u201cLaunch of iphone6\u201d,\u201d849.90\u201d} {"iPhone 5C","\xa3429"} {"Xiaomi\'s Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","130"} {"Microsoft to offer Xbox One without Kinect","399"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","\u20ac449"} {"Moto E price, specs, release date, features: \xa389 smartphone set to \'end feature phones\'","\xa3150"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","129"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'locationOfProtest'</relationName><humanFormat>u'arg1 is the {location of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'location'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestOcurredIn'</inverse><seedInstances>u'{\u201cEast Timer\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cMadagascar\u201d,\u201d2009 Malagasy political crisis\u201d} {\u201cEurope\u201d,\u201dAnti-austerity movement\u201d} {\u201cPrague\u201d,\u201dStuha\u201d} {\u201cCzechoslovakia\u201d,\u201dVelvet Revolution\u201d} {"KIEV","Kiev protesters attack building with police inside"} {"conference hall","Kiev protesters attack building with police inside"} {"government exposition","Kiev protesters attack building with police inside"} {"Bangkok","Thais defer decision on emergency after two hurt in shooting"} {"Bangkok","Thai police clash with protesters at poll venue"} {"stadium","Thai police clash with protesters at poll venue"} {"Bangkok","Explosion, Gunfire Ring out near Bangkok Protest Site"} {"BANGKOK","Thailand braces for \'shutdown\'"} {"Bangkok","Thai protesters disrupt early voting for disputed election"} {"Bangkok","Thai government rejects election delay despite deadly violence - Channel News Asia"} {"Thailand","Thai government rejects election delay despite deadly violence - Channel News Asia"} {"CARACAS","3 killed as Venezuelan protests turn violent"} {"Venezuela","3 killed as Venezuelan protests turn violent"} {"KIEV","\'At least two protesters killed\' in Kiev protests as clashes between Ukraine police and demonstrators intensify"} {"Bangkok","Thai Red Shirts rally in support of prime minister"} {"Vietnam","One dead, 100 hurt in anti-China riot in Vietnam"} {"Istanbul","May Day Clashes in Istanbul, 50 Injured"} {"Turkey","Protesters clash with police at Turkey mine blast site"} {"BANGKOK","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} {"Rio de Janeiro","Brazilians protest World Cup spending, call for better services"} {"Sao Paulo","Brazilians protest World Cup spending, call for better services"} {"Hanoi","Chinese worker killed in anti-Beijing protest in Vietnam"} {"Ho Chi Minh City","Chinese worker killed in anti-Beijing protest in Vietnam"} {"Turkey","Turkey mine clashes pile pressure on Erdogan"} {"Bangkok","2 die in Thai protest camp attack"} {"Binh Duong province","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"Vietnam","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"embassy","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"BANGKOK","Thai protesters force acting PM to flee meeting"} {"Slovyansk","Mayor of eastern Ukraine city shot in the back"} {"Chinese Embassy","Vietnamese protests China oil rig in disputed sea"} {"Hanoi","Vietnamese protests China oil rig in disputed sea"} {"Binh Duong","South China Sea tension sparks Vietnamese attack on factories amid anti-China protest"} {"Vietnam","South China Sea tension sparks Vietnamese attack on factories amid anti-China protest"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'timeOfProtest'</relationName><humanFormat>u'arg1 is the {time of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'time'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestEventTime'</inverse><seedInstances>u'{\u201c17:00\u201d,\u201dStuha\u201d} {"night","Kiev protesters attack building with police inside"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'actorOfProtest'</relationName><humanFormat>u'arg1 is the {actor in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestHadActor'</inverse><seedInstances>u'{\u201cSuharto\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cMaraden\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cTaur Matan Ruak\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cAndry Rajoelina\u201d,\u201d2009 Malagasy political crisis\u201d} {\u201cCivilians\u201d,\u201dAnti-austerity movement\u201d} {\u201cMarek Benda\u201d,\u201dStuha\u201d} {\u201cJiri Dienstbier Jr.\u201d,\u201dStuha\u201d} {\u201cMilos Jakes\u201d,\u201dVelvet Revolution\u201d} {\u201cGustav Husak\u201d,\u201dVelvet Revolution\u201d} {"crowd","Kiev protesters attack building with police inside"} {"demonstrators","Kiev protesters attack building with police inside"} {"police","Thai police clash with protesters at poll venue"} {"protesters","Thai police clash with protesters at poll venue"} {"protesters","Thailand braces for \'shutdown\'"} {"Thai","Thai protesters disrupt early voting for disputed election"} {"protesters","Thai protesters disrupt early voting for disputed election"} {"opposition protesters","Thai government rejects election delay despite deadly violence - Channel News Asia"} {"Red Shirts","Thai Red Shirts rally in support of prime minister"} {"protesters","Thai Red Shirts rally in support of prime minister"} {"workers","Chinese worker killed in anti-Beijing protest in Vietnam"} {"Vietnamese","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"100 protesters","Thai protesters force acting PM to flee meeting"} {"pro-Russia insurgents","Mayor of eastern Ukraine city shot in the back"} {"Vietnamese","Vietnamese protests China oil rig in disputed sea"} {"Vietnamese","South China Sea tension sparks Vietnamese attack on factories amid anti-China protest"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'damagedInProtest'</relationName><humanFormat>u'arg1 was {dameged in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'geolocatablething'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestDamaged'</inverse><seedInstances>u'{\u201cEast Timor\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cCzechoslovakia\u201d,\u201dVelvet Revolution\u201d} {"Ukrainian House building","Kiev protesters attack building with police inside"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'weaponUsedInProtest'</relationName><humanFormat>u'arg1 was a weapon {used in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'weapon'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestHadWeapon'</inverse><seedInstances>u'{\u201cFire Weapons\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cfire weapons\u201d,\u201d2009 Malagasy political crisis\u201d} {\u201ctear gas\u201d,\u201d2009 Malagasy political crisis\u201d} {\u201cFire Weapons\u201d,\u201dStuha\u201d} {\u201cFire Weapons\u201d,\u201dVelvet Revolution\u201d} {"firebombs","Kiev protesters attack building with police inside"} {"gas","Kiev protesters attack building with police inside"} {"gas","Thai police clash with protesters at poll venue"} {"gas","Protesters clash with police at Turkey mine blast site"} {"water cannon","Protesters clash with police at Turkey mine blast site"} {"gas","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} {"water cannon","Turkey mine clashes pile pressure on Erdogan"} {"grenades","2 die in Thai protest camp attack"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'commentatorOfProtest'</relationName><humanFormat>u'arg1 {commented about} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestComentedBy'</inverse><seedInstances>u'{"Arseniy Yatsenyuk","Kiev protesters attack building with police inside"} {"minister Surapong Tovichakchaikul","Thai police clash with protesters at poll venue"} {"Prime Minister Yingluck Shinawatra","Thai protesters disrupt early voting for disputed election"} {"Veera Yeephraew","Thai protesters disrupt early voting for disputed election"} {"Maria Corina Machado","3 killed as Venezuelan protests turn violent"} {"General Fang Fenghui","One dead, 100 hurt in anti-China riot in Vietnam"} {"Gulsen Kaymak","May Day Clashes in Istanbul, 50 Injured"} {"leader Suthep Thaugsuban","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} {"Nguyen Xuan Hien","Vietnamese protests China oil rig in disputed sea"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'InjuredInProtest'</relationName><humanFormat>u'arg1 was {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestInjured'</inverse><seedInstances>u'{\u201cSoldiers\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cCivilians\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cCivilians\u201d,\u201d2009 Malagasy political crisis\u201d} {\u201cMartin Smid\u201d,\u201dVelvet Revolution\u201d} {"taxi driver","Thais defer decision on emergency after two hurt in shooting"} {"woman","Thais defer decision on emergency after two hurt in shooting"} {"Two men","Explosion, Gunfire Ring out near Bangkok Protest Site"} {"Five people","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'victimInProtest'</relationName><humanFormat>u'arg1 was a {victim in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'protestHadVictim'</inverse><seedInstances>u'{\u201cSoldiers\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cCivilians\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201cCivilians\u201d,\u201d2009 Malagasy political crisis\u201d} {\u201cMartin Smid\u201d,\u201dVelvet Revolution\u201d} {"three people","3 killed as Venezuelan protests turn violent"} {"Three people","\'At least two protesters killed\' in Kiev protests as clashes between Ukraine police and demonstrators intensify"} {"Two people","2 die in Thai protest camp attack"} {"20 people","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"Gennady Kernes","Mayor of eastern Ukraine city shot in the back"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfInjuredInProtest'</relationName><humanFormat>u'arg1 is the number of people {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'protestEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'ProtestInjuredNumber'</inverse><seedInstances>u'{\u201c1000\u201d,\u201dIndonesian invasion of East Timor\u201d} {\u201c135\u201d,\u201d2009 Malagasy political crisis\u201d} {\u201c0\u201d,\u201dAnti-austerity movement\u201d} {\u201c0\u201d,\u201dStuha\u201d} {\u201c1\u201d,\u201dVelvet Revolution\u201d} {"24","2 die in Thai protest camp attack"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'locationOfRoadAccident'</relationName><humanFormat>u'arg1 is the {location of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'location'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentOcurredIn'</inverse><seedInstances>u'{\u201dNew York\u201d,\u201c2009 Taconic State Parkway crash\u201d} {\u201cHuntsville\u201d,\u201d2006 Huntsville, Alabama bus accident\u201d} {\u201cIllinois\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201cChappaquiddick island\u201d,\u201dChappaquiddick incident\u201d} {\u201cIllinois\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"A55","Four cars and a van involved in collision on A55"} {"Eccleston","Four cars and a van involved in collision on A55"} {"BOISE","Bus crashes into Idaho Power building in Downtown Boise"} {"Idaho","Bus crashes into Idaho Power building in Downtown Boise"} {"Auckland","One person killed in head-on crash"} {"Karaka Rd","One person killed in head-on crash"} {"State Highway 22","One person killed in head-on crash"} {"Veracruz","At least 36 dead in Mexico bus crash: official"} {"Belleair Road","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"Missouri Avenue","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"BYRON","2 dead, 3 injured in Maine snowmobile crashes"} {"East Branch Road","2 dead, 3 injured in Maine snowmobile crashes"} {"LOUISVILLE","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"TAMPA","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Dubai","Dubai bus crash kills 15 Asian workers"} {"Jebel Ali","Dubai bus crash kills 15 Asian workers"} {"Looe","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"Donegal","Child in involved in collision in which mother was killed moved to Belfast hospital"} {"Jammu","17 die as bus falls into gorge in Indian Kashmir"} {"Ramban","17 die as bus falls into gorge in Indian Kashmir"} {"SRINAGAR","17 die as bus falls into gorge in Indian Kashmir"}'</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'timeOfRoadAccident'</relationName><humanFormat>u'arg1 is the {time of} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'time'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentEventTime'</inverse><seedInstances>u'{\u201d1:35 pm\u201d,\u201c2009 Taconic State Parkway crash\u201d} {\u201c7:10 am\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201c9:47 pm\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"7:30","Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit"} {"6:30 a.m.","Bus crashes into Idaho Power building in Downtown Boise"} {"3.25pm","One person killed in head-on crash"} {"3.30pm","Child in involved in collision in which mother was killed moved to Belfast hospital"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'guiltyOfRoadAccident'</relationName><humanFormat>u'arg1 is the {guilty in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentHadGuilty'</inverse><seedInstances>u'{\u201cDiane Schuler\u201d,\u201d2009 Taconic State Parkway crash\u201d} {\u201cunknown\u201d,\u201d2006 Huntsville, Alabama bus accident\u201d} {\u201cTraffic signal\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201cTed Kennedy\u201d,\u201dChappaquiddick incident\u201d} {\u201cTrack Circuite\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"Hafford","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"William Ashmore","2 dead, 3 injured in Maine snowmobile crashes"} {"Amy Longaker","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"woman","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"driver","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"driver","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"motorist","Police investigating fatal collisions in Edmonton"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'collidedWith'</relationName><humanFormat>u'arg1 was {dameged in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'roadAccidentEvent'</domain><range>u'everypromotedthing'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'wasCollidedIn'</inverse><seedInstances>u'{\u201d2009 Taconic State Parkway crash\u201d,\u201ccars\u201d} {\u201c2006 Huntsville, Alabama bus accident\u201d,\u201dbus-car\u201d} {\u201cTraffic signal timing\u201d,\u201dbus-train\u201d} {\u201cChappaquiddick incident\u201d,\u201dnothing\u201d} {\u201ctrain-truck\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit","sport-utility vehicle"} {"Man killed by lorry after getting out of car on motorway hard shoulder","lorry"} {"Four cars and a van involved in collision on A55","four cars"} {"Four cars and a van involved in collision on A55","van"} {"Bus crashes into Idaho Power building in Downtown Boise","building"} {"Bus crashes into Idaho Power building in Downtown Boise","passenger bus"} {"One person killed in head-on crash","three cars"} {"At least 36 dead in Mexico bus crash: official","bus"} {"At least 36 dead in Mexico bus crash: official","trailer-truck"} {"Police: DUI driver hits, kills motorcyclist - FOX 13 News","2001 Buick Century"} {"2 dead, 3 injured in Maine snowmobile crashes","snowmobile"} {"2 dead, 3 injured in Maine snowmobile crashes","truck"} {"Crash That Killed 5 Men on I-275 Still Under Investigation","2001 Ford Expedition"} {"Dubai bus crash kills 15 Asian workers","bus"} {"Dubai bus crash kills 15 Asian workers","truck"} {"One passenger reported dead and over 40 injured as coach crashes into hedge at Looe","wall"} {"Child in involved in collision in which mother was killed moved to Belfast hospital","bus"} {"Child in involved in collision in which mother was killed moved to Belfast hospital","car"} {"17 die as bus falls into gorge in Indian Kashmir","bus"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'reasonOfCollision'</relationName><humanFormat>u'arg1 was a weapon {used in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everypromotedthing'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentHadReason'</inverse><seedInstances>u'{\u201cDriving Wrong Way\u201d,\u201d2009 Taconic State Parkway crash\u201d} {\u201cAlcohol\u201d,\u201d2009 Taconic State Parkway crash\u201d} {\u201cDriving Wrong Way\u201d,\u201d2006 Huntsville, Alabama bus accident\u201d} {\u201cTraffic signal timing\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201calcohol\u201d,\u201dChappaquiddick incident\u201d} {\u201cTrack Circuit Failure\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"brake failure","Bus crashes into Idaho Power building in Downtown Boise"} {"alcohol","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"drugs","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"brakes","Dubai bus crash kills 15 Asian workers"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'commentatorOfRoadAccident'</relationName><humanFormat>u'arg1 {commented about} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentComentedBy'</inverse><seedInstances>u'{"Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit","Steve Frazer"} {"Man killed by lorry after getting out of car on motorway hard shoulder","Police"} {"At least 36 dead in Mexico bus crash: official","Government spokesman Alberto Silva Ramos"} {"2 dead, 3 injured in Maine snowmobile crashes","Warden Brock Clukey"} {"Dubai bus crash kills 15 Asian workers","AKM Mizanur Rahman"} {"One passenger reported dead and over 40 injured as coach crashes into hedge at Looe","South West Ambulance Service"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'InjuredInRoadAccident'</relationName><humanFormat>u'arg1 was {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentInjured'</inverse><seedInstances>u'{\u201cChildren\u201d,\u201d2009 Taconic State Parkway crash\u201d} {\u201cStudents\u201d,\u201d2006 Huntsville, Alabama bus accident\u201d} {\u201cStudents\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201cCivilians\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"Minneapolis bicyclist","Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit"} {"54 people","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"three children","Child in involved in collision in which mother was killed moved to Belfast hospital"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'victimInRoadAccident'</relationName><humanFormat>u'arg1 was a {victim in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'person'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentHadVictim'</inverse><seedInstances>u'{\u201cDiane Schuler\u201d,\u201d2009 Taconic State Parkway crash\u201d} {\u201cStudents\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201cMary Jo Kopechne\u201d,\u201dChappaquiddick incident\u201d} {\u201cCivilians\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"Man","Man killed by lorry after getting out of car on motorway hard shoulder"} {"One person","One person killed in head-on crash"} {"36 people","At least 36 dead in Mexico bus crash: official"} {"Ballard","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"motorcyclist","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"Leonnardo Rodrigues","2 dead, 3 injured in Maine snowmobile crashes"} {"child","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"Ankeet Harshad Patel","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Fort Myers","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Imtiyaz Ilias","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Jobin Joy Kuriakose","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"South Florida fraternity brothers","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"four students","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"13 people","Dubai bus crash kills 15 Asian workers"} {"One person","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"woman","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"Jasmyn Chan","Police investigating fatal collisions in Edmonton"} {"Siobhan Hutcheon","Child in involved in collision in which mother was killed moved to Belfast hospital"} {"17 people","17 die as bus falls into gorge in Indian Kashmir"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfInjuredInRoadAccident'</relationName><humanFormat>u'arg1 is the number of people {injured in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentInjuredNumber'</inverse><seedInstances>u'{\u201d3\u201d,\u201c2009 Taconic State Parkway crash\u201d} {\u201c34\u201d,\u201d2006 Huntsville, Alabama bus accident\u201d} {\u201c21\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201c0\u201d,\u201dChappaquiddick incident\u201d} {\u201c122\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"one","Bus crashes into Idaho Power building in Downtown Boise"} {"two","One person killed in head-on crash"} {"four","Dubai bus crash kills 15 Asian workers"} {"five","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'numberOfCasualtiesInRoadAccident'</relationName><humanFormat>u'arg1 is the number of people that {died in} the event arg2 '</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'nonNegInteger'</domain><range>u'roadAccidentEvent'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u''</knownNegatives><inverse>u'roadAccidentCasualtiesNumber'</inverse><seedInstances>u'{\u201d8\u201d,\u201c2009 Taconic State Parkway crash\u201d} {\u201c4\u201d,\u201d2006 Huntsville, Alabama bus accident\u201d} {\u201c7\u201d,\u201d1995 Fox River Grove bus\u2013train collision\u201d} {\u201c1\u201d,\u201dChappaquiddick incident\u201d} {\u201c11\u201d,\u201d1999 Bourbonnais, Illinois, train accident\u201d} {"two","2 dead, 3 injured in Maine snowmobile crashes"} {"four","Crash That Killed 5 Men on I-275 Still Under Investigation"} '</seedInstances><seedExtractionPatterns>u''</seedExtractionPatterns><nrOfValues>u'1'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u''</queryString><editDate>u'2015-04-20'</editDate><author>u'Estevam (Event Relations)'</author><curator>u''</curator><description>u''</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'countryIsTheHomeOfSportsteam'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'locationRelatedToAgent'</generalizations><domain>u'country'</domain><range>u'sportsteam'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfCountryIsTheHomeOfSportsteam'</inverse><seedInstances>u'{"usa","yankees"} {"usa","eagles"} {"usa","new_york_mets"} {"usa","knicks"} {"usa","florida_marlins"} {"usa","chicago_cubs"} {"usa","carolina_panthers"} {"usa","boston_red"} {"usa","titans"} {"usa","st___louis_cardinals"} {"usa","san_diego_padres"} {\u201cBrazil\u201d,\u201dpalmeiras\u201d} {\u201cBrazil\u201d,\u201dCorinthians\u201d} {\u201cBrazil\u201d,\u201dSantos\u201d} {\u201cuk\u201d,\u201dchelsea\u201d} {\u201cspain\u201d,\u201dbarcelona\u201d} {\u201cspain\u201d,\u201dreal madrid\u201d} {\u201cportugal\u201d,\u201dbenfica\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the home country of sports teams'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'coachCanSpeakLanguage'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'coach'</domain><range>u'language'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfCoachCanSpeakLanguage'</inverse><seedInstances>u'{"hiddink", \u201cenglish\u201d} {"bob_bradley","english"} {"stoops",\u201denglish\u201d} {"kelvin_sampson",\u201denglish\u201d} {"clinton_white", "english"} {\u201csteve_spurrier","english"} {"kelvin_sampson","english"} {"summers",\u201denglish\u201d} {\u201cOswaldo de Oliveira\u201d, \u201cportuguese\u201d} {\u201cTite\u201d, \u201cportuguese\u201d} {\u201cmuricy ramalho\u201d, \u201cportuguese\u201d} {\u201cJose Mourinho\u201d, \u201cenglish\u201d} {\u201cmike Tomlin\u201d,\u201denglish\u201d} {\u201cErick Spoelstra\u201d,\u201denglish\u201d} {\u201cMarc Willmots\u201d,\u201dfrench\u201d} {\u201cMarc Willmots\u201d,\u201dgerman\u201d} {\u201cMiguel Herrera\u201d,\u201dspanish\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the languages that coaches might speak'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'languageSpokenAtIsland'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'language'</domain><range>u'island'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfLanguageSpokenAtIsland'</inverse><seedInstances>u'{\u201cSpanish\u201d,\u201dSanta Cruz del Islote\u201d} {\u201cCantonese\u201d,\u201dAp Lei Chau\u201d} {\u201cBantu Swahili\u201d,\u201dMigingo Island\u201d} {\u201cFrench\u201d,\u201dFadiouth\u201d} {\u201cMaldivian\u201d,\u201dMal\xe9\u201d} {\u201cMarshallese\u201d,\u201dEbeye\u201d} {\u201cPortuguese\u201d,\u201dIlha de Mo\xe7ambique\u201d} {\u201cEnglish\u201d,\u201dManhattan\u201d} {\u201cMarathi\u201d,\u201dSalsette Island\u201d} {\u201cFrench\u201d,\u201d\xcele Saint-Louis \u201d} {\u201cArabic\u201d,\u201dArwad\u201d} {\u201cFinnish\u201d,\u201dLilla Essingen\u201d} {\u201cCantonese\u201d,\u201dTsing Yi\u201d} {\u201cEnglish\u201d,\u201dRoosevelt Island \u201d} {\u201cGerman\u201d,\u201dL\xfcbeck\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes languages spoken at islands'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'astronautWasOnAMissionWithAstronaut'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'astronaut'</domain><range>u'astronaut'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfAstronautWasOnAMissionWithAstronaut'</inverse><seedInstances>u'{\u201cScott Carpenter\u201d,\u201dGordon Cooper\u201d} {\u201cScott Carpenter\u201d,\u201dJohn Glenn\u201d} {\u201cJohn Glenn\u201d,\u201dGordon Cooper\u201d} {\u201cGordon Cooper\u201d,\u201dGus Grissom\u201d} {\u201cGus Grissom\u201d,\u201dScott Carpenter\u201d} {\u201cGus Grissom\u201d,\u201dJohn Glenn\u201d} {\u201cDeke Slayton\u201d,\u201dThomas P. Stafford\u201d} {\u201cDeke Slayton\u201d,\u201dVance Brand\u201d} {\u201cVance Brand\u201d,\u201dThomas P. Stafford\u201d} {\u201cNeil Armstrong\u201d,\u201dMichael Collins\u201d} {\u201cNeil Armstrong\u201d,\u201dBuzz Aldrin\u201d} {\u201cMichael Collins\u201d,\u201dBuzz Aldrin\u201d} {\u201cCharles Conrad Jr.\u201d,\u201dAlan L. Bean\u201d} {\u201cCharles Conrad Jr.\u201d,\u201dRichard F. Gordon Jr.\u201d} {\u201cRichard F. Gordon Jr.\u201d,\u201dAlan L. Bean\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes astronauts that were at a space mission togheter'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'vegetableIsProducedAtCountry'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'itemExistsAtLocation'</generalizations><domain>u'vegetable'</domain><range>u'country'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfVegetableIsProducedAtCountry '</inverse><seedInstances>u'{\u201cDry Bean\u201d,\u201dIndia\u201d} {\u201cDry Bean\u201d,\u201dBrazil\u201d} {\u201cOnion\u201d,\u201dChina\u201d} {\u201cOnion\u201d,\u201dIndia\u201d} {\u201cGarlic\u201d,\u201dIndia\u201d} {\u201cGarlic\u201d,\u201dChina\u201d} {\u201cSpinach\u201d,\u201dChina\u201d} {\u201cSpinach\u201d,\u201dusa\u201d} {\u201cSoybean\u201d,\u201dusa\u201d} {\u201cSoybean\u201d,\u201dBrazil\u201d} {\u201cTomato\u201d,\u201dChina\u201d} {\u201cTomato\u201d,\u201dIndia\u201d} {\u201cGinger\u201d,\u201dIndia\u201d} {\u201cPulses\u201d,\u201dMozambique\u201d} {\u201cPulses\u201d,\u201dIndia\u201d} {\u201cCabbage\u201d,\u201dChina\u201d} {\u201cCabbage\u201d,\u201dIndia\u201d} {\u201cCassava\u201d,\u201dNigeria\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the countries that are big produces of vegetables'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'meatComesFromAnimal'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'meat'</domain><range>u'animal'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfMeatComesFromAnimal'</inverse><seedInstances>u'{\u201cbeef\u201d,\u201dcow\u201d} {\u201cribs\u201d,\u201dcow\u201d} {\u201cchuck\u201d,\u201dcow\u201d} {\u201cflank steak\u201d,\u201dcow\u201d} {\u201cround steak\u201d,\u201dcow\u201d} {\u201cwings\u201d,\u201dchiken\u201d} {\u201ctulip\u201d,\u201dchicken\u201d} {\u201cbreast\u201d,\u201dchiken\u201d} {\u201cchikcne thigh\u201d,\u201dchicken\u201d} {\u201cbacon\u201d,\u201dpig\u201d} {\u201cham\u201d,\u201dpig\u201d} {\u201cturkey breast\u201d,\u201dturkey\u201d} {\u201cpork loin\u201d,\u201dpig\u201d} {\u201csalmon\u201d,\u201dsalmon\u201d} {\u201csausage shank\u201d,\u201dpig\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the animals and their meat cuts'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'stateorprovinceAttainsTrainstation'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'stateorprovince'</domain><range>u'trainstation'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfStateorprovinceAttainsTrainstation'</inverse><seedInstances>u'{\u201cCalifornia\u201d,\u201dSan Diego Trolley station\u201d} {\u201cCalifornia\u201d,\u201dSacramento RT\u201d} {\u201cCalifornia\u201d,\u201dPeninsula Commute station\u201d} {\u201cCalifornia\u201d,\u201dMetrolink station\u201d} {\u201cBusan\u201d,\u201dAllack Station\u201d} {\u201cGyeonggi-do\u201d,\u201dBeomgol Station\u201d} {\u201cGyeonggi-do\u201d,\u201dDong-o Station\u201d} {\u201cWashington\u201d,\u201dNew Jersey Avenue Station\u201d} {\u201cWashington\u201d,\u201dBaltimore and Potomac Railroad Station\u201d} {\u201cArizona\u201d,\u201dAsh Fork station\u201d} {\u201cArizona\u201d,\u201dHolbrook railroad station\u201d} {\u201cUlster\u201d,\u201dBalmoral railway station\u201d} {\u201cUlster\u201d,\u201dAdelaide railway station\u201d} {\u201cUlster\u201d,\u201dFinaghy railway station\u201d} {\u201cUlster\u201d,\u201dTitanic Quarter railway station\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the trainstantions location (state or province)'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'musicalArtistHadAPetAnimal'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'musicartist'</domain><range>u'animal'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfMusicalArtistHadAPetAnimal'</inverse><seedInstances>u'{\u201cElvis\u201d,\u201dKangaroo\u201d} {\u201cJustin Bieber\u201d,\u201dMonkey\u201d} {\u201cSteven Tyler\u201d,\u201dRaccoon\u201d} {\u201cParis Hilton\u201d,\u201dKinkajou\u201d} {\u201cVanilla Ice\u201d,\u201dWallaroo\u201d} {\u201cMichael Jackson\u201d,\u201dChimpanzee\u201d} {\u201cMichael Jackson\u201d,\u201dDog\u201d} {\u201cKate Perry\u201d,\u201dCat\u201d} {\u201cJosephine Baker\u201d,\u201dLeopard\u201d} {\u201cSlash\u201d,\u201dSnake\u201d} {\u201cTaylor Swift\u201d,\u201dCat\u201d} {\u201cMiley Cyrus\u201d,\u201dDog\u201d} {\u201cLady Gaga\u201d,\u201dDog\u201d} {\u201cKesha\u201d,\u201dDog\u201d} {\u201cKate Perry\u201d,\u201dDog\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the pet animals that musical artists have or had'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'coachStudiedAtUniversity'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'coach'</domain><range>u'university'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfCoachStudiedAtUniversity '</inverse><seedInstances>u'{\u201cFaye Abbott\u201d,\u201dSyracuse\u201d} {\u201cFrankie Albert\u201d,\u201dStanford\u201d} {\u201cJoe Alexander\u201d,\u201dSyracuse\u201d} {\u201cGeorge Allen\u201d,\u201dUniversity of Michigan\u201d} {\u201cRoy Chapman Andrews\u201d,\u201dBeloit College\u201d} {\u201cJohnny Armstrong\u201d,\u201dUniversity of Dubuque\u201d} {\u201cNeil Armstrong\u201d,\u201dOklahoma A &amp; M\u201d} {\u201cBill Austin\u201d,\u201dOregon State\u201d} {\u201cShorty Barr\u201d,\u201dWisconsin\u201d} {\u201cNorman Barry\u201d,\u201dNotre Dame\u201d} {\u201cJim Bates\u201d,\u201dUniversity of Tennessee\u201d} {\u201cCliff Battles\u201d,\u201dWest Virginia Wesleyan\u201d} {\u201cSammy Baugh\u201d,\u201dTexas Christian\u201d} {\u201cBill Belichick\u201d,\u201dWesleyan\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the university where the coach studied at'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'buildingIsPartOfUniversity'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'building'</domain><range>u'university'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfBuildingIsPartOfUniversity '</inverse><seedInstances>u'{\u201cFrederick r. Weisman Art Museum\u201d,\u201dUniversity of Minnesota\u201d} {\u201cPillsbury Hall\u201d,\u201dUniversity of Minnesota\u201d} {\u201cT.K. Hearn Plaza\u201d,\u201dWake Forest\u201d} {\u201cOld Kenyon Hall\u201d,\u201dKenyon College\u201d} {\u201cAll Saints\u201d,\u201dSewanee\u201d} {\u201cTennessee Williams Center\u201d,\u201dSewanee\u201d} {\u201cPhillips Theme Tower\u201d,\u201dPepperdine\u201d} {\u201cChristopher Wren building\u201d,\u201dCollege of William &amp; Mary\u201d} {\u201cBaker-Berry Library\u201d,\u201dDartmouth\u201d} {\u201cSever Hall\u201d,\u201dHarvard\u201d} {\u201cBell Tower\u201d,\u201dFurman\u201d} {\u201cRockefeller Chapel\u201d,\u201dUniversity of Chicago\u201d} {\u201cPearl Harbor memorial\u201d,\u201dUnited States Naval Academy\u201d} {\u201cBancroft Hall\u201d,\u201dUnited States Naval Academy\u201d} {\u201cEncina Hall\u201d,\u201dStanford\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes buildings that universities might own'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'beverageCanSoftenDisease'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'beverage'</domain><range>u'disease'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfBeverageCanSoftenDisease '</inverse><seedInstances>u'{\u201cHerbal Tea\u201d,\u201dAcid Reflux\u201d} {\u201cSkim Milk\u201d,\u201dAcid Reflux\u201d} {\u201cNon-Citrus Juices\u201d,\u201dAcid Reflux\u201d} {\u201cWater\u201d,\u201dAcid Reflux\u201d} {\u201cWater\u201d,\u201dCrohn\u2019s disease\u201d} {\u201cMeal Replacement Shakes\u201d,\u201dCrohn\u2019s disease\u201d} {\u201cCoconut Water\u201d,\u201dCrohn\u2019s disease\u201d} {\u201cMilk\u201d,\u201dCrohn\u2019s disease\u201d} {\u201ccranberry juice\u201d,\u201dheart disease\u201d} {\u201corange juice\u201d,\u201dhigh blood pressure\u201d} {\u201cwine\u201d,\u201dhigh cholesterol\u201d} {\u201chot cocoa\u201d,\u201dheart diseas\u201d} {\u201cPomegranate Juice\u201d,\u201dheart disease\u201d} {\u201cRed Wine\u201d,\u201dheart disease\u201d} {\u201cBlack Tea\u201d,\u201dheart disease\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes beverages that can help soften the symptons of diseases'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'arthropodSuchAsCrustacean'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'generalizationOf'</generalizations><domain>u'crustacean'</domain><range>u'arthropod'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>1.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'crustaceanIsATypeOfArthropod'</inverse><seedInstances>u'{"mollusks",\u201doyster\u201d} {"mollusks",\u201dconch"} {"decapodes","crab"} {\u201cmollusks",\u201dsquid"} {\u201cdecapodes\u201d,\u201dlobster\u201d} {\u201cdecapodes\u201d,\u201dprawn\u201d} {\u201cdecapodes\u201d,\u201dshrimp\u201d}  {\u201cbarnacles\u201d,\u201dbalanus crenatus\u201d} {\u201cbarnacles\u201d,\u201celminius modestus\u201d} {\u201cbarnacles\u201d,\u201dverruca stroemia\u201d} {\u201cbarnacles\u201d,\u201dperforatus\u201d} {\u201ckrills\u201d,\u201deuphausia superba\u201d} {\u201ckrills\u201d,\u201deuphausia pacifica\u201d} {\u201ckrills\u201d,\u201deuphasia nana\u201d} {\u201ckrills\u201d,\u201dthysanoessa raschii\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Hyponym Relation'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'canBeTheSameAs'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>0.0</populate><visible>0.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'everypromotedthing'</domain><range>u'everypromotedthing'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>0.0</antireflexive><antisymmetric>0.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'canBeTheSameAs'</inverse><seedInstances>u''</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>u''</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Lucas'</author><curator>u' '</curator><description>u'Describes two instances that are the same thing in different categories'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'athleteCanBeTheSameAsActor'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'athlete'</domain><range>u'actor'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'actorCanBeTheSameAsAthlete'</inverse><seedInstances>u'{\u201cChuck Norris\u201d,\u201dChuck Norris\u201d} {"matthew_broderick","matthew_broderick"} {\u201cBubba Smith\u201d,\u201dBubba Smith\u201d} {\u201cHowie Long\u201d,\u201dHowie Long\u201d} {\u201cJason Lee\u201d,\u201dJason Lee\u201d} {\u201cEd Marinaro\u201d,\u201dEd Marinaro\u201d} {\u201cVinnie Jones\u201d,\u201dVinnie Jones\u201d} {\u201cCarl Weathers\u201d,\u201dCarl Weathers\u201d} {\u201cFred Dryer\u201d,\u201dFred Dryer\u201d} {\u201cFred Williamson\u201d,\u201dFred Williamson\u201d} {\u201cJim Brown\u201d,\u201dJim Brown\u201d} {\u201cBob Uecker\u201d,\u201dBob Uecker\u201d} {\u201cTerry Bradshaw\u201d,\u201dTerry Bradshaw\u201d} {\u201cLou Ferrigno\u201d,\u201dLou Ferrigno\u201d} {\u201cJim Brown\u201d,\u201dJim Brown\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes actors that are the same instances as athlete'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'writerCanBeTheSameAsPersonafrica'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'writer'</domain><range>u'personafrica'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'personafricaCanBeTheSameAsWriter'</inverse><seedInstances>u'{\u201cMariama B\xe2\u201d,\u201dMariama B\xe2\u201d} {\u201cBuchi Emecheta\u201d,\u201dBuchi Emecheta\u201d} {\u201cBessie Head\u201d,\u201dBessie Head\u201d} {\u201cOusmane Semb\xe8ne\u201d,\u201dOusmane Semb\xe8ne\u201d} {\u201cNgugi wa Thiong\u2019o\u201d,\u201dNgugi wa Thiong\u2019o\u201d} {\u201cNuruddin Farah\u201d,\u201dNuruddin Farah\u201d} {\u201cChimamanda Ngozi Adichie \u201d,\u201dChimamanda Ngozi Adichie \u201d} {\u201cAyi Kwei Armah\u201d,\u201dAyi Kwei Armah\u201d} {\u201cUnity Dow\u201d,\u201dUnity Dow\u201d} {\u201cGalesiti Baruti\u201d,\u201dGalesiti Baruti\u201d} {\u201cPierre Makombo Bambot\xe9\u201d,\u201dPierre Makombo Bambot\xe9\u201d} {\u201cJoseph Brahim Seid\u201d,\u201dJoseph Brahim Seid\u201d} {\u201cWaberi Abdourahman\u201d,\u201dWaberi Abdourahman\u201d} {\u201cSaba Kidane\u201d,\u201dSaba Kidane\u201d} {\u201cMoges Kebede\u201d,\u201dMoges Kebede\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes writers that are the same instances as personafrica'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'bakegoodIsTypicalInCountry'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'bakedGood'</domain><range>u'country'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfBakegoodIsTypicalInCountry'</inverse><seedInstances>u'{\u201cAloo pie\u201d,\u201dTrinidad and Tobago\u201d} {\u201cApple Pie\u201d,\u201dusa\u201d} {\u201cBakewell pudding\u201d,\u201dunited kingdom\u201d} {\u201cbaklava\u201d,\u201dturkey\u201d} {\u201cbanket\u201d,\u201cnetherlands\u201d} {\u201cbelekoy\u201d,\u201dphilippines\u201d} {\u201cbirnbrot\u201d,\u201dswitzerland\u201d} {\u201cBoyoz\u201d,\u201dTurkey\u201d} {\u201cBougatsa\u201d,\u201dGreece\u201d} {\u201cpretzels\u201d,\u201dusa\u201d} {\u201cmuffins\u201d,\u201dusa\u201d} {\u201cbagels\u201d,\u201dusa\u201d} {\u201ccookies\u201d,\u201dusa\u201d} {\u201cdonuts\u201d,\u201dusa\u201d} {\u201ccannoli\u201d,\u201dItaly\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'01 05 2015'</editDate><author>u'Prophet+Ontext (920)'</author><curator>u' '</curator><description>u'Describes the typicall bakegoods of the countries'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'buildingFeatureBuiltAboveLake'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'buildingfeature'</domain><range>u'lake'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfBuildingFeatureBuiltAboveLak'</inverse><seedInstances>u'{\u201cLewisville Lake Toll Bridge\u201d,\u201dLewisville Lake\u201d} {\u201cMackinac Bridge\u201d,\u201dLake Michigan\u201d} {\u201cMackinac Bridge\u201d,\u201dLake Huron\u201d} {\u201cNew Link PATH Bridge\u201d,\u201dLake Shore\u201d} {\u201c Lake Pontchartrain Causeway\u201d,\u201dLake Pontchartrain\u201d} {\u201cDavid Kreitzer Lake Hodges Bicycle/Pedestrian Bridge\u201d,\u201dLake Hodges\u201d} {\u201cBrown Bridge Road\u201d,\u201dLake Jackson\u201d} {\u201cWillis Bridge\u201d,\u201dLake Texoma\u201d} {\u201cLake Washington floating Bridge\u201d,\u201dLake Washington\u201d} {\u201cLincoln Highway Bridge\u201d,\u201dDonner Lake\u201d} {\u201cPortage Lake Bridge\u201d,\u201dPortage Lake\u201d} {\u201cLake Champlain Bridge\u201d,\u201dLake Champlain\u201d} {\u201cobservation deck\u201d,\u201dThun Lake\u201d} {\u201cobservation deck\u201d,\u201dBrienz Lake\u201d} {\u201c Koocanusa Bridge\u201d,\u201d Lake Koocanusa\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'12 06 2015'</editDate><author>u'Prophet+Ontext (930)'</author><curator>u' '</curator><description>u'buildingfeature and lake are related'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'mountainAtgeopoliticallocation'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'locatedAt'</generalizations><domain>u'mountain'</domain><range>u'geopoliticallocation'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfMountainAtgeopoliticallocation'</inverse><seedInstances>u'{\u201cKibo\u201d,\u201dTanzania\u201d} {\u201cMount Kenya\u201d,\u201dKenya\u201d} {\u201cKibo\u201d,\u201dAfrica\u201d} {\u201cMount Kenya\u201d,\u201dAfrica\u201d} {\u201cMawenzi\u201d,\u201dKilimanjaro\u201d} {\u201cTanzania\u201d,\u201dAfrica\u201d} {\u201cMount Gessi\u201d,\u201dUganda\u201d} {\u201cMount Gessi\u201d,\u201dAfrica\u201d} {\u201cRas Dashen\u201d,\u201dEthiopia\u201d} {\u201cRas Dashen\u201d,\u201dAfrica\u201d} {\u201cMount McKinley\u201d,\u201dAlaska\u201d} {\u201cMount McKinley\u201d,\u201dNorth America\u201d} {\u201cMount Logan\u201d,\u201dYukon\u201d} {\u201cMount Logan\u201d,\u201dNorth America\u201d} {\u201cVolcan Citlaltepetl\u201d,\u201dPuebla\u201d} {\u201cVolcan Citlaltepetl\u201d,\u201dNorth America\u201d} {\u201cCrestone Peak\u201d,\u201dColorado\u201d} {\u201cCrestone Peak\u201d,\u201dNorth America\u201d} {\u201cWhite Mountain Peak\u201d,\u201dCalifornia\u201d} {\u201cWhite Moutain Peak\u201d,\u201dusa\u201d} {\u201cWhite Mountain Peak\u201d,\u201dNorth America\u201d} {\u201cMont Blanc\u201d,\u201dAosta\u201d} {\u201cMont Blanc\u201d,\u201dU-Savoy\u201d} {\u201cMont Blanc\u201d,\u201dEurope\u201d} {\u201cMont Blanc\u201d,\u201dFrance\u201d} {\u201cMount Blanc\u201d,\u201dItaly\u201d} {\u201cMonte Rosa\u201d,\u201dValais\u201d} {\u201cMonte Rosa\u201d,\u201dEurope\u201d} {\u201cFinsteraarhorn\u201d,\u201dBern\u201d} {\u201cFinsteraarhorn\u201d,\u201dEurope\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'12 06 2015'</editDate><author>u'Prophet+Ontext (930)'</author><curator>u' '</curator><description>u'geopoliticallocation and mountain are related'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'wineryAtFarm'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'winery'</domain><range>u'farm'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfWineryAtFarm'</inverse><seedInstances>u"{\u201cBlack Star Farms Winery\u201d,\u201dBlack Star Farms\u201d} {\u201cIron Gate Vineyards\u201d,\u201dIron Gate Farm\u201d} {\u201cGrace Winery\u201d,\u201dSweetwater \u201d} {\u201cRockland farms winery\u201d,\u201dRockland farms\u201d} {\u201cGreen Dance Winery\u201d,\u201dSandHill\u201d} {\u201cAlton Farms Estate Winery\u201d,\u201dAlton Farms Estate\u201d} {\u201cShone Farm Winery\u201d,\u201dShone Farm\u201d} {\u201cTomaselo Winery\u201d,\u201dAbmas Farm\u201d} {\u201cJones Winery\u201d,\u201dJones Family Farms\u201d} {\u201cMineral Hills Winery\u201d,\u201dGodard's Red Hen Farm\u201d} {\u201cAlfalfa Farm Winery\u201d,\u201dAlfalfa Farm\u201d} {\u201cPuddicombe Farms Winery\u201d,\u201dPuddicombe Farms\u201d} {\u201cBiltmore Winery\u201d,\u201dAntler Hill Village\u201d} {\u201cSpier Wine Farm\u201d,\u201dSpier Wine Farm\u201d} {\u201cBlack Bridge Winery\u201d,\u201dOrchard Valley Farms\u201d}"</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'12 06 2015'</editDate><author>u'Prophet+Ontext (930)'</author><curator>u' '</curator><description>u'farm and winery are related'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'colorAssociatedWithVisualizableattribute'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'color'</domain><range>u'visualizableattribute'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfColorAssociatedWithVisualizableattribut'</inverse><seedInstances>u'{"green","foliage"} {"yellow","foliage"} {"blue","flesh"} {"grey","cloud"} {"white","cloud"} {"water","flesh"} {"turquoise","cloud"} {"sky","cloud"} {"yellow","gold"} {"golden","gold"} {"shade","cloud"} {"yellow","blond"}  {\u201cyellow\u201d,\u201dsunny\u201d} {\u201corange\u201d,\u201dsunny\u201d} {\u201cwhite\u201d,\u201dshiny\u201d} {\u201cdark\u201d,\u201dfog\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'12 06 2015'</editDate><author>u'Prophet+Ontext (930)'</author><curator>u' '</curator><description>u'color and visualizableattribute are related'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'grainUsedToMakeCandy'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'grain'</domain><range>u'candy'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfGrainUsedToMakeCandy'</inverse><seedInstances>u'{\u201crice\u201d,\u201dBotan Rice Candy\u201d} {\u201crice\u201d,\u201dMitoku Rice Syrup Candies\u201d} {\u201crice\u201d,\u201dMitoku Ginger Rice Candy\u201d} {\u201crice\u201d,\u201dmoti\u201d} {\u201cpeanut\u201d,\u201dchocolate peanut candies\u201d} {\u201cpeanut\u201d,\u201dCircus Peanuts\u201d} {\u201cpeanut\u201d,\u201dPeanut Brittle\u201d} {\u201cpeanut\u201d,\u201dHoney Roasted Peanuts \u201d} {\u201cpeanut\u201d,\u201dPeanut Butter and Jelly Fudge\u201d} {\u201ccorn\u201d,\u201dCandy Corn\u201d} {\u201ccorn\u201d,\u201dcaramel popcorn\u201d} {\u201cMarron Glace\u201d,\u201dchestnut\u201d} {\u201cCHESTNUT CANDY\u201d,\u201dchestnut\u201d} {\u201cBuckeyes\u201d,\u201dnut\u201d} {\u201cSquirrel nut Caramel\u201d,\u201dnut\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'12 06 2015'</editDate><author>u'Prophet+Ontext (930)'</author><curator>u' '</curator><description>u'grain and candy are related'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'hotelBuiltAtPark'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'hotel'</domain><range>u'park'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfHotelBuiltAtPark'</inverse><seedInstances>u'{\u201cWawona Hotel\u201d,\u201dYosemite Park\u201d} {\u201cWalt Disney Resorts\u201d,\u201dWalt Disney Parks\u201d} {\u201c Prince of Wales Hotel\u201d,\u201dWaterton Lakes National Park\u201d} {\u201cGlacier Park Lodge\u201d,\u201dEast Glacier Park\u201d} {\u201cgramercy park hotel\u201d,\u201dgramercy park\u201d} {\u201cGrove Park Inn\u201d,\u201dGrove Park\u201d} {\u201cHilton hotel\u201d,\u201dRailroad park\u201d} {\u201cEl Tovar Hotel\u201d,\u201dGrand Canyon National Park\u201d} {\u201cettington park hotel\u201d,\u201dettington park\u201d} {\u201cMammoth Hot Springs Hotel\u201d,\u201dyellowstone national park\u201d} {\u201cHotel Cascada\u201d,\u201dAlbuquerque Waterpark\u201d} {\u201cBoston Hotel Buckminster \u201d,\u201dFenway Park\u201d} {\u201cThe Killarney Park Hotel\u201d,\u201dKillarney Park\u201d} {\u201cKensington Park Hotel\u201d,\u201dKensington Park\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'12 06 2015'</editDate><author>u'Prophet+Ontext (930)'</author><curator>u' '</curator><description>u'hotel and park are related'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'professionActsAtTheSameAreaOfPoliticIssue'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'politicsissue'</domain><range>u'profession'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfprofessionActsAtTheSameAreaOfPoliticIssue'</inverse><seedInstances>u'{\u201cTeacher\u201d,"education"} {"Professor","education"} {"Farmer","agriculture"} {"Farmer","livestock"}  {"sanitation agent","sewers"} {"sanitation agent","clean water"} {"Soldier","security"} {"Police Officer","security"} {"firefighter","security"} {"Doctor","health"} {"Nurse","health"} {"pharmaceutical","health"} {\u201cBusinessman\u201d,\u201deconomy\u201d} {\u201cmerchant\u201d,\u201deconomy\u201d} {\u201cimporter\u201d,\u201deconomy\u201d} {\u201cexporter\u201d,\u201deconomy\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes professions that work at the area of a political issue'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'invertebrateTurnIntoInsect'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'invertebrate'</domain><range>u'insect'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfInvertebrateTurnIntoInsect '</inverse><seedInstances>u'{\u201ccaterpillar\u201d,\u201dbutterfly\u201d} {\u201ccaterpillar\u201d,\u201dmoth\u201d} {\u201cplanula\u201d,\u201dcnidarians\u201d} {\u201cgrub\u201d,\u201dbettle\u201d} {\u201cmaggot\u201d,\u201dflies\u201d} {\u201cmaggot\u201d,\u201dbee\u201d} {\u201cmaggot\u201d,\u201dwasp\u201d} {\u201cwriggler\u201d,\u201dmosquito\u201d} {\u201clarva\u201d,\u201dsnakefly\u201d} {\u201clarva\u201d,\u201dalderfly\u201d} {\u201clarva\u201d,\u201dscorpionfly\u201d} {\u201clarva\u201d,\u201dcaddisfly\u201d} {\u201clarva\u201d,\u201dfishfly\u201d} {\u201clarva\u201d,\u201dfleas\u201d} {\u201clarva\u201d,\u201dTwisted-winged parasite\u201d} {\u201clarva\u201d,\u201dantlion\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes the metamorphosis of some invertebrates into another insects'</description><freebaseID>u' '</freebaseID><comment>u''</comment><relationName>u'mammalInducesEmotion'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'mammal'</domain><range>u'emotion'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfMammalInducesEmotion'</inverse><seedInstances>u'{"kids","stress"} {"kids","happiness"} {"kids","tenderness"} {"kids","fatigue"} {"dogs","fatigue"} {"dogs","happiness"} {"dogs","fear"} {"cats","happiness"} {"cats","tenderness"} {"dogs","stress"} {"tiger","fear"} {"lion","fear"} {"wale","impressed"} {"wale","amazed"} {"elephant","amazed"} {\u201celephant\u201d,\u201dimpressed\u201d} {\u201crat\u201d,\u201dnausea\u201d} {\u201cbat\u201d,\u201dnausea\u201d} {\u201cbat\u201d,\u201dfear\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'The emotion that human beings generally have by looking at a mammal'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'clothMadeOfPlant'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'clothing'</domain><range>u'plant'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfClothMadeOfPlant'</inverse><seedInstances>u'{\u201cbark cloth\u201d,\u201dtrees\u201d} {\u201cbuckram\u201d,\u201dstiff cotton\u201d} {\u201cburlap\u201d, \u201c jute plant\u201d} {\u201cGunny cloth\u201d, \u201cjute plant\u201d} {\u201cCalico\u201d,\u201dcotton\u201d} {\u201cCambric\u201d,\u201dcotton\u201d} {\u201cCambric\u201d,\u201dflax plant\u201d} {\u201cCandlewick\u201d,\u201dflax plant\u201d}  {\u201cChino\u201d,\u201dcotton\u201d} {\u201cTerrycloth\u201d,\u201dcotton\u201d} {\u201ccotton\u201d,\u201dcotton\u201d} {\u201cDenim\u201d,\u201dcotton\u201d} {\u201cHemp cloth\u201d,\u201dCannabis sativa plant\u201d} {\u201cRamie\u201d,\u201dChina grass\u201d} {\u201cHemp\u201d,\u201dCannabis sativa plant\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Plants that can be used to make cloths'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'invertebrateHasColor'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'invertebrate'</domain><range>u'color'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfInvertebrateHasColor '</inverse><seedInstances>u'{\u201cSpangled Skimmer Dragonfly\u201d,\u201dblue\u201d} {\u201cDamselfly\u201d,\u201dblue\u201d} {\u201cMale Slaty Skimmer\u201d,\u201dblue\u201d} {\u201cMale Blue Dasher\u201d,\u201dblue\u201d} {\u201cFlea Beetle\u201d,\u201dred\u201d} {\u201cVelvet Mite\u201d,\u201dred\u201d} {\u201c Golden-winged Skimmer Dragonfly\u201d,\u201dred\u201d} {\u201cCommon Meadow Spittlebug \u201d,\u201dred\u201d} {\u201cDogbane tiger moth\u201d,\u201dwhite\u201d} {\u201cCrambid snout moth\u201d,\u201dwhite\u201d} {\u201cDerbid planthopper\u201d,\u201dwhite\u201d} {\u201cwhitefly\u201d,\u201dwhite\u201d} {\u201csmooth flower spider\u201d,\u201dwhite\u201d} {\u201cambush bug\u201d,\u201dwhite\u201d} {\u201cSulphur\u201d,\u201dyellow\u201d} {\u201cSleepy Orange\u201d,\u201dyellow\u201d} {\u201cDogbane Beetle\u201d,\u201dgreen\u201d} {\u201cGreen June Beetle\u201d,\u201dgreen\u201d} {\u201cLeafhopper\u201d,\u201dgreen\u201d} {\u201cAcanaloniid Planthopper\u201d,\u201dgreen\u201d} {\u201cMagnolia Green Jumping Spider\u201d,\u201dgreen\u201d} {\u201cMangora Genus Spider\u201d,\u201dgreen\u201d} {\u201cGiant Katydid\u201d,\u201dgreen\u201d} {\u201cLuna Moth\u201d,\u201dgreen\u201d} {\u201cBlack Blister Beetle\u201d,\u201dblack\u201d} {\u201cBess Beetle\u201d,\u201dblack\u201d} {\u201cEbony Bug\u201d,\u201dblack\u201d} {\u201cMarch Fly\u201d,\u201dblack\u201d} {\u201cMydas Fly\u201d,\u201dblack\u201d} {\u201cSpider Wasp\u201d,\u201dblack\u201d} {\u201cSawfly\u201d,\u201dblack\u201d} {\u201cFalse Black Widow\u201d,\u201dblack\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes the color of invertebrates'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'newpaperHasWebsite'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'organizationHasOfficialWebsite'</generalizations><domain>u'newspaper'</domain><range>u'website'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfNewpaperHasWebsite'</inverse><seedInstances>u'{"the new york observer","observer.com"} {"philadelphia inquirer","www.philly.com/inquirer"} {"the san francisco chronicle","www.sfgate.com"} {"pittsburgh post gazette","www.post-gazette.com"} {"cbs news","www.cbsnews.com"} {"san_jose_mercury_news","www.mercurynews.com"} {"la times","www.latimes.com"} {"detroit news","www.detroitnews.com"} {"kansas city star","www.kansascity.com"} {\u201cWashington Post\u201d,\u201dwww.washingtonpost.com\u201d} {\u201cThe New York Times\u201d,\u201dwww.nytimes.com\u201d} {\u201cMiami Herald\u201d,\u201dwww.miamiherald.com\u201d} {\u201cFolha de S.Paulo\u201d,\u201dwww.folha.uol.com.br\u201d} {\u201cHerald Scotland\u201d,\u201dwww.heraldscotland.com\u201d} {\u201cNZ Herald\u201d,\u201dwww.nzherald.co.nz\u201d} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Present the oficial website of a newspaper'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'mammalEatsInsect'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'animalThatFeedOnInsect'</generalizations><domain>u'mammal'</domain><range>u'insect'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u''</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfMammalEatsInsect '</inverse><seedInstances>u'{\u201canteater\u201d,\u201dant\u201d} {\u201carmadillo\u201d,\u201dant\u201d} {\u201caardvark\u201d,\u201dant\u201d} {\u201canteater\u201d,\u201dtermite\u201d} {\u201carmadillo\u201d,\u201dtermite\u201d} {\u201caardvark\u201d,\u201dtermite\u201d} {\u201cbat\u201d,\u201dmosquito\u201d} {\u201cbat\u201d,\u201dbeetle\u201d} {\u201chedgehog\u201d,\u201dbeetle\u201d} {\u201chedgehog\u201d,\u201dcaterpillar\u201d} {\u201chedgehog\u201d,\u201dgrasshopper\u201d} {\u201chedgehog\u201d,\u201dtermite\u201d} {\u201chedgehog\u201d,\u201dmoth\u201d} {\u201cTenrec\u201d,\u201dcaterpillar\u201d} {\u201cTenrec\u201d,\u201dlarvae\u201d} {\u201cTenrec\u201d,\u201dearthworm\u201d} {\u201cTenrec\u201d,\u201dmaggot\u201d}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes the insects that mammals eats'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'diseaseCausesPhysiologicalCondition'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'relatedTo'</generalizations><domain>u'disease'</domain><range>u'physiologicalcondition'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u'isShorterThan isTallerThan'</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'inverseOfDiseaseCausesPhysiologicalcondition'</inverse><seedInstances>u'{"Addison\'s disease","weight_loss"} {"Diabetes","weight_loss"} {"Hypercalcemia","weight_loss"} {"Parkinson\'s disease","weight_loss"} {"Sjogren\'s syndrome","dry_mouth"} {"HIV","dry_mouth"} {"AIDS","dry_mouth"} {"Hypoglicemia","blurred_vision"} {"Cataract","blurred_vision"} {"Glaucoma","blurred_vision"} {"Brain Tumor","blurred_vision"} {"erectile_dysfunction","impotence"} {"dysfunction","impotence"} {"Gestational Diabetes","weight_gain"} {"Hypothyroidism","weight_gain"} {"Dysthymia","weight_gain"} {"AIDS","weight_gain"} {"muscle strain","weakness"} {"muscle strain","stiffness"} {"ulcers","ulcer"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>u'any'</nrOfValues><nrOfInverseValues>u'any'</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes diseases that may cause a physiological condition'</description><freebaseID>u' '</freebaseID><comment>u''</comment><relationName>u'comedianCanBeTheSameAsFemale'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'comedian'</domain><range>u'female'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'femaleCanBeTheSameAsComedian'</inverse><seedInstances>u'{"nicole_kidman","nicole_kidman"} {"julia_roberts","julia_roberts"} {"holly_madison","holly_madison"} {"sandra_bullock","sandra_bullock"} {"reese_witherspoon","reese_witherspoon"} {"jennifer_garner","jennifer_garner"} {"cate_blanchett","cate_blanchett"} {"melanie_griffith","melanie_griffith"} {"lisa_rinna","lisa_rinna"} {"kelly_preston","kelly_preston"} {"jenny_mccarthy","jenny_mccarthy"} {"jane_wyman","jane_wyman"} {"sarah_michelle_gellar","sarah_michelle_gellar"} {"michelle_pfeiffer","michelle_pfeiffer"} {"jessica_simpson","jessica_simpson"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes two instances that are the same thing in these two different categories'</description><freebaseID>u''</freebaseID><comment>u''</comment><relationName>u'comedianCanBeTheSameAsMale'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'comedian'</domain><range>u'male'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'maleCanBeTheSameAsComedian'</inverse><seedInstances>u'{"christian_bale","christian_bale"} {"brad_pitt","brad_pitt"} {"tom_hanks","tom_hanks"} {"marlon_brando","marlon_brando"} {"antonio_banderas","antonio_banderas"} {"ryan_phillippe","ryan_phillippe"} {"david_arquette","david_arquette"} {"ronald_reagan","ronald_reagan"} {"kelly_preston","kelly_preston"} {"harrison_ford","harrison_ford"} {"denzel_washington","denzel_washington"} {"adam_sandler","adam_sandler"} {"sean_penn","sean_penn"} {"robin_williams","robin_williams"} {"nick_cannon","nick_cannon"} {"kenny_chesney","kenny_chesney"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes two instances that are the same thing in these two different categories'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'agriculturalProductCanBeTheSameAsVegetable'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'agriculturalproduct'</domain><range>u'vegetable'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'vegetableCanBeTheSameAsAgriculturalProduct'</inverse><seedInstances>u'{"carrots","carrots"} {"greens","greens"} {"lettuce","lettuce"} {"beans","beans"} {"olives","olives"} {"watermelon","watermelon"} {"tomato","tomato"} {"tobacco","tobacco"} {"soybeans","soybeans"} {"pumpkins","pumpkins"} {"peanuts","peanuts"} {"parsley","parsley"} {"oats","oats"} {"wheat","wheat"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes two instances that are the same thing in these two different categories'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'celebrityCanBeTheSameAsCeo'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'celebrity'</domain><range>u'ceo'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'ceoCanBeTheSameAsCelebrity'</inverse><seedInstances>u'{"steve_jobs","steve_jobs"} {"richard","richard"} {"bill gates","bill gates"} {"warren_buffett","warren_buffett"} {"michael_jackson","michael_jackson"} {"page","page"} {"cash_warren","cash_warren"} {"merrill_lynch","merrill_lynch"} {"merrill","merrill"}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes two instances that are the same thing in these two different categories'</description><freebaseID>u' '</freebaseID><comment>u' '</comment><relationName>u'jobpositionCanBeTheSameAsPoliticalOffice'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'jobposition'</domain><range>u'politicaloffice'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'politicalOfficeCanBeTheSameAsJobPosition'</inverse><seedInstances>u'{"u_s__president","u_s__president"} {"chairman","chairman"} {"vice_president","vice_president"} {"assistant_secretary","assistant_secretary"}  {"attorney_general","attorney_general"} {"vp","vp"} {"press_secretary","press_secretary"} {"first_president","first_president"} {"chief_of_staff","chief_of_staff"} {"assistant","assistant"} {"us_president","us_president"} {"treasury_secretary","treasury_secretary"} {"secretary_of_state","secretary_of_state"} {"secretary_general","secretary_general"}'</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes two instances that are the same thing in these two different categories'</description><freebaseID>u' '</freebaseID><comment>u''</comment><relationName>u'scientistCanBeTheSameAsWriter'</relationName><humanFormat>u'arg1 {is related to} arg2'</humanFormat><populate>1.0</populate><visible>1.0</visible><generalizations>u'canBeTheSameAs'</generalizations><domain>u'scientist'</domain><range>u'writer'</range><domainWithinRange>0.0</domainWithinRange><rangeWithinDomain>0.0</rangeWithinDomain><antireflexive>1.0</antireflexive><antisymmetric>1.0</antisymmetric><mutexExceptions>u' '</mutexExceptions><knownNegatives>u' '</knownNegatives><inverse>u'writeCanBeTheSameAsScientist'</inverse><seedInstances>u'{"robert_louis_stevenson","robert_louis_stevenson"} {"john_irving","john_irving"} {"nathaniel_hawthorne","nathaniel_hawthorne"} {"john_steinbeck","john_steinbeck"} {"george_orwell","george_orwell"} {"william_faulkner","william_faulkner"} {"toni_morrison","toni_morrison"} {"henry_james","henry_james"} {"c__s__lewis","c_s__lewis"} {"victor_hugo","victor_hugo"} {"thomas_mann","thomas_mann"} {"robert_a__heinlein","robert_a__heinlein"} {"philip_k__dick","philip_k__dick"} {"henry_green","henry_green"} {"george_eliot","george_eliot"} {"alexandre_dumas","alexandre_dumas"} {"william_burroughs","william_burroughs"} {"thomas_pynchon","thomas_pynchon"} {"sinclair_lewis","sinclair_lewis"} {"robert_heinlein","robert_heinlein"} '</seedInstances><seedExtractionPatterns>u' '</seedExtractionPatterns><nrOfValues>1.0</nrOfValues><nrOfInverseValues>1.0</nrOfInverseValues><requiredForDomain>u'FALSE'</requiredForDomain><requiredForRange>u'FALSE'</requiredForRange><queryString>u' '</queryString><editDate>u'24 07 2015'</editDate><author>u'Prophet+Ontext (940)'</author><curator>u' '</curator><description>u'Describes two instances that are the same thing in these two different categories'</description><freebaseID>u' '</freebaseID><comment>u''</comment><relationName/><humanFormat/><populate/><visible/><generalizations/><domain/><range/><domainWithinRange/><rangeWithinDomain/><antireflexive/><antisymmetric/><mutexExceptions/><knownNegatives/><inverse/><seedInstances/><seedExtractionPatterns/><nrOfValues/><nrOfInverseValues/><requiredForDomain/><requiredForRange/><queryString/><editDate/><author/><curator/><description/><freebaseID/><comment/></Relation>